{"version":3,"file":"bundle.js","sources":["../node_modules/esm-env/dev-fallback.js","../node_modules/svelte/src/internal/shared/utils.js","../node_modules/svelte/src/internal/client/constants.js","../node_modules/svelte/src/internal/client/reactivity/equality.js","../node_modules/svelte/src/internal/flags/index.js","../node_modules/svelte/src/constants.js","../node_modules/svelte/src/internal/client/warnings.js","../node_modules/svelte/src/internal/client/dev/ownership.js","../node_modules/svelte/src/internal/client/context.js","../node_modules/svelte/src/internal/client/reactivity/sources.js","../node_modules/svelte/src/internal/client/runtime.js","../node_modules/svelte/src/internal/client/errors.js","../node_modules/svelte/src/internal/client/proxy.js","../node_modules/svelte/src/internal/client/dom/operations.js","../node_modules/svelte/src/internal/client/dev/equality.js","../node_modules/svelte/src/internal/client/reactivity/deriveds.js","../node_modules/svelte/src/internal/client/reactivity/effects.js","../node_modules/svelte/src/internal/client/dom/task.js","../node_modules/svelte/src/utils.js","../node_modules/svelte/src/internal/client/dom/elements/events.js","../node_modules/svelte/src/internal/client/dom/elements/bindings/shared.js","../node_modules/svelte/src/internal/client/dom/template.js","../node_modules/svelte/src/internal/client/dom/reconciler.js","../node_modules/svelte/src/internal/client/render.js","../node_modules/svelte/src/internal/client/dom/blocks/if.js","../node_modules/svelte/src/internal/client/dom/blocks/each.js","../node_modules/svelte/src/internal/client/dom/hydration.js","../node_modules/svelte/src/internal/client/dom/elements/attributes.js","../node_modules/svelte/src/internal/client/dom/legacy/lifecycle.js","../node_modules/svelte/src/internal/client/reactivity/store.js","../node_modules/svelte/src/internal/client/reactivity/props.js","../node_modules/svelte/src/index-client.js","../node_modules/svelte/src/internal/shared/errors.js","../node_modules/svelte/src/internal/disclose-version.js","../node_modules/svelte/src/version.js","../src/VideoDashboard.svelte","../src/VideoList.svelte","../src/main.js","../src/App.svelte"],"sourcesContent":["const node_env = globalThis.process?.env?.NODE_ENV;\nexport default node_env && !node_env.toLowerCase().startsWith('prod');\n","// Store the references to globals in case someone tries to monkey patch these, causing the below\n// to de-opt (this occurs often when using popular extensions).\nexport var is_array = Array.isArray;\nexport var index_of = Array.prototype.indexOf;\nexport var array_from = Array.from;\nexport var object_keys = Object.keys;\nexport var define_property = Object.defineProperty;\nexport var get_descriptor = Object.getOwnPropertyDescriptor;\nexport var get_descriptors = Object.getOwnPropertyDescriptors;\nexport var object_prototype = Object.prototype;\nexport var array_prototype = Array.prototype;\nexport var get_prototype_of = Object.getPrototypeOf;\n\n/**\n * @param {any} thing\n * @returns {thing is Function}\n */\nexport function is_function(thing) {\n\treturn typeof thing === 'function';\n}\n\nexport const noop = () => {};\n\n// Adapted from https://github.com/then/is-promise/blob/master/index.js\n// Distributed under MIT License https://github.com/then/is-promise/blob/master/LICENSE\n\n/**\n * @template [T=any]\n * @param {any} value\n * @returns {value is PromiseLike<T>}\n */\nexport function is_promise(value) {\n\treturn typeof value?.then === 'function';\n}\n\n/** @param {Function} fn */\nexport function run(fn) {\n\treturn fn();\n}\n\n/** @param {Array<() => void>} arr */\nexport function run_all(arr) {\n\tfor (var i = 0; i < arr.length; i++) {\n\t\tarr[i]();\n\t}\n}\n\n/**\n * TODO replace with Promise.withResolvers once supported widely enough\n * @template T\n */\nexport function deferred() {\n\t/** @type {(value: T) => void} */\n\tvar resolve;\n\n\t/** @type {(reason: any) => void} */\n\tvar reject;\n\n\t/** @type {Promise<T>} */\n\tvar promise = new Promise((res, rej) => {\n\t\tresolve = res;\n\t\treject = rej;\n\t});\n\n\t// @ts-expect-error\n\treturn { promise, resolve, reject };\n}\n\n/**\n * @template V\n * @param {V} value\n * @param {V | (() => V)} fallback\n * @param {boolean} [lazy]\n * @returns {V}\n */\nexport function fallback(value, fallback, lazy = false) {\n\treturn value === undefined\n\t\t? lazy\n\t\t\t? /** @type {() => V} */ (fallback)()\n\t\t\t: /** @type {V} */ (fallback)\n\t\t: value;\n}\n","export const DERIVED = 1 << 1;\nexport const EFFECT = 1 << 2;\nexport const RENDER_EFFECT = 1 << 3;\nexport const BLOCK_EFFECT = 1 << 4;\nexport const BRANCH_EFFECT = 1 << 5;\nexport const ROOT_EFFECT = 1 << 6;\nexport const BOUNDARY_EFFECT = 1 << 7;\nexport const UNOWNED = 1 << 8;\nexport const DISCONNECTED = 1 << 9;\nexport const CLEAN = 1 << 10;\nexport const DIRTY = 1 << 11;\nexport const MAYBE_DIRTY = 1 << 12;\nexport const INERT = 1 << 13;\nexport const DESTROYED = 1 << 14;\nexport const EFFECT_RAN = 1 << 15;\n/** 'Transparent' effects do not create a transition boundary */\nexport const EFFECT_TRANSPARENT = 1 << 16;\n/** Svelte 4 legacy mode props need to be handled with deriveds and be recognized elsewhere, hence the dedicated flag */\nexport const LEGACY_DERIVED_PROP = 1 << 17;\nexport const INSPECT_EFFECT = 1 << 18;\nexport const HEAD_EFFECT = 1 << 19;\nexport const EFFECT_HAS_DERIVED = 1 << 20;\n\nexport const STATE_SYMBOL = Symbol('$state');\nexport const STATE_SYMBOL_METADATA = Symbol('$state metadata');\nexport const LEGACY_PROPS = Symbol('legacy props');\nexport const LOADING_ATTR_SYMBOL = Symbol('');\n","/** @import { Equals } from '#client' */\n/** @type {Equals} */\nexport function equals(value) {\n\treturn value === this.v;\n}\n\n/**\n * @param {unknown} a\n * @param {unknown} b\n * @returns {boolean}\n */\nexport function safe_not_equal(a, b) {\n\treturn a != a\n\t\t? b == b\n\t\t: a !== b || (a !== null && typeof a === 'object') || typeof a === 'function';\n}\n\n/**\n * @param {unknown} a\n * @param {unknown} b\n * @returns {boolean}\n */\nexport function not_equal(a, b) {\n\treturn a !== b;\n}\n\n/** @type {Equals} */\nexport function safe_equals(value) {\n\treturn !safe_not_equal(value, this.v);\n}\n","export let legacy_mode_flag = false;\nexport let tracing_mode_flag = false;\n\nexport function enable_legacy_mode_flag() {\n\tlegacy_mode_flag = true;\n}\n\nexport function enable_tracing_mode_flag() {\n\ttracing_mode_flag = true;\n}\n","export const EACH_ITEM_REACTIVE = 1;\nexport const EACH_INDEX_REACTIVE = 1 << 1;\n/** See EachBlock interface metadata.is_controlled for an explanation what this is */\nexport const EACH_IS_CONTROLLED = 1 << 2;\nexport const EACH_IS_ANIMATED = 1 << 3;\nexport const EACH_ITEM_IMMUTABLE = 1 << 4;\n\nexport const PROPS_IS_IMMUTABLE = 1;\nexport const PROPS_IS_RUNES = 1 << 1;\nexport const PROPS_IS_UPDATED = 1 << 2;\nexport const PROPS_IS_BINDABLE = 1 << 3;\nexport const PROPS_IS_LAZY_INITIAL = 1 << 4;\n\nexport const TRANSITION_IN = 1;\nexport const TRANSITION_OUT = 1 << 1;\nexport const TRANSITION_GLOBAL = 1 << 2;\n\nexport const TEMPLATE_FRAGMENT = 1;\nexport const TEMPLATE_USE_IMPORT_NODE = 1 << 1;\n\nexport const HYDRATION_START = '[';\n/** used to indicate that an `{:else}...` block was rendered */\nexport const HYDRATION_START_ELSE = '[!';\nexport const HYDRATION_END = ']';\nexport const HYDRATION_ERROR = {};\n\nexport const ELEMENT_IS_NAMESPACED = 1;\nexport const ELEMENT_PRESERVE_ATTRIBUTE_CASE = 1 << 1;\n\nexport const UNINITIALIZED = Symbol();\n\n// Dev-time component properties\nexport const FILENAME = Symbol('filename');\nexport const HMR = Symbol('hmr');\n\nexport const NAMESPACE_SVG = 'http://www.w3.org/2000/svg';\nexport const NAMESPACE_MATHML = 'http://www.w3.org/1998/Math/MathML';\n\n// we use a list of ignorable runtime warnings because not every runtime warning\n// can be ignored and we want to keep the validation for svelte-ignore in place\nexport const IGNORABLE_RUNTIME_WARNINGS = /** @type {const} */ ([\n\t'state_snapshot_uncloneable',\n\t'binding_property_non_reactive',\n\t'hydration_attribute_changed',\n\t'hydration_html_changed',\n\t'ownership_invalid_binding',\n\t'ownership_invalid_mutation'\n]);\n\n/**\n * Whitespace inside one of these elements will not result in\n * a whitespace node being created in any circumstances. (This\n * list is almost certainly very incomplete)\n * TODO this is currently unused\n */\nexport const ELEMENTS_WITHOUT_TEXT = ['audio', 'datalist', 'dl', 'optgroup', 'select', 'video'];\n","/* This file is generated by scripts/process-messages/index.js. Do not edit! */\n\nimport { DEV } from 'esm-env';\n\nvar bold = 'font-weight: bold';\nvar normal = 'font-weight: normal';\n\n/**\n * Assignment to `%property%` property (%location%) will evaluate to the right-hand side, not the value of `%property%` following the assignment. This may result in unexpected behaviour.\n * @param {string} property\n * @param {string} location\n */\nexport function assignment_value_stale(property, location) {\n\tif (DEV) {\n\t\tconsole.warn(`%c[svelte] assignment_value_stale\\n%cAssignment to \\`${property}\\` property (${location}) will evaluate to the right-hand side, not the value of \\`${property}\\` following the assignment. This may result in unexpected behaviour.\\nhttps://svelte.dev/e/assignment_value_stale`, bold, normal);\n\t} else {\n\t\tconsole.warn(`https://svelte.dev/e/assignment_value_stale`);\n\t}\n}\n\n/**\n * `%binding%` (%location%) is binding to a non-reactive property\n * @param {string} binding\n * @param {string | undefined | null} [location]\n */\nexport function binding_property_non_reactive(binding, location) {\n\tif (DEV) {\n\t\tconsole.warn(`%c[svelte] binding_property_non_reactive\\n%c${location ? `\\`${binding}\\` (${location}) is binding to a non-reactive property` : `\\`${binding}\\` is binding to a non-reactive property`}\\nhttps://svelte.dev/e/binding_property_non_reactive`, bold, normal);\n\t} else {\n\t\tconsole.warn(`https://svelte.dev/e/binding_property_non_reactive`);\n\t}\n}\n\n/**\n * Your `console.%method%` contained `$state` proxies. Consider using `$inspect(...)` or `$state.snapshot(...)` instead\n * @param {string} method\n */\nexport function console_log_state(method) {\n\tif (DEV) {\n\t\tconsole.warn(`%c[svelte] console_log_state\\n%cYour \\`console.${method}\\` contained \\`$state\\` proxies. Consider using \\`$inspect(...)\\` or \\`$state.snapshot(...)\\` instead\\nhttps://svelte.dev/e/console_log_state`, bold, normal);\n\t} else {\n\t\tconsole.warn(`https://svelte.dev/e/console_log_state`);\n\t}\n}\n\n/**\n * %handler% should be a function. Did you mean to %suggestion%?\n * @param {string} handler\n * @param {string} suggestion\n */\nexport function event_handler_invalid(handler, suggestion) {\n\tif (DEV) {\n\t\tconsole.warn(`%c[svelte] event_handler_invalid\\n%c${handler} should be a function. Did you mean to ${suggestion}?\\nhttps://svelte.dev/e/event_handler_invalid`, bold, normal);\n\t} else {\n\t\tconsole.warn(`https://svelte.dev/e/event_handler_invalid`);\n\t}\n}\n\n/**\n * The `%attribute%` attribute on `%html%` changed its value between server and client renders. The client value, `%value%`, will be ignored in favour of the server value\n * @param {string} attribute\n * @param {string} html\n * @param {string} value\n */\nexport function hydration_attribute_changed(attribute, html, value) {\n\tif (DEV) {\n\t\tconsole.warn(`%c[svelte] hydration_attribute_changed\\n%cThe \\`${attribute}\\` attribute on \\`${html}\\` changed its value between server and client renders. The client value, \\`${value}\\`, will be ignored in favour of the server value\\nhttps://svelte.dev/e/hydration_attribute_changed`, bold, normal);\n\t} else {\n\t\tconsole.warn(`https://svelte.dev/e/hydration_attribute_changed`);\n\t}\n}\n\n/**\n * The value of an `{@html ...}` block %location% changed between server and client renders. The client value will be ignored in favour of the server value\n * @param {string | undefined | null} [location]\n */\nexport function hydration_html_changed(location) {\n\tif (DEV) {\n\t\tconsole.warn(`%c[svelte] hydration_html_changed\\n%c${location ? `The value of an \\`{@html ...}\\` block ${location} changed between server and client renders. The client value will be ignored in favour of the server value` : 'The value of an `{@html ...}` block changed between server and client renders. The client value will be ignored in favour of the server value'}\\nhttps://svelte.dev/e/hydration_html_changed`, bold, normal);\n\t} else {\n\t\tconsole.warn(`https://svelte.dev/e/hydration_html_changed`);\n\t}\n}\n\n/**\n * Hydration failed because the initial UI does not match what was rendered on the server. The error occurred near %location%\n * @param {string | undefined | null} [location]\n */\nexport function hydration_mismatch(location) {\n\tif (DEV) {\n\t\tconsole.warn(`%c[svelte] hydration_mismatch\\n%c${location ? `Hydration failed because the initial UI does not match what was rendered on the server. The error occurred near ${location}` : 'Hydration failed because the initial UI does not match what was rendered on the server'}\\nhttps://svelte.dev/e/hydration_mismatch`, bold, normal);\n\t} else {\n\t\tconsole.warn(`https://svelte.dev/e/hydration_mismatch`);\n\t}\n}\n\n/**\n * The `render` function passed to `createRawSnippet` should return HTML for a single element\n */\nexport function invalid_raw_snippet_render() {\n\tif (DEV) {\n\t\tconsole.warn(`%c[svelte] invalid_raw_snippet_render\\n%cThe \\`render\\` function passed to \\`createRawSnippet\\` should return HTML for a single element\\nhttps://svelte.dev/e/invalid_raw_snippet_render`, bold, normal);\n\t} else {\n\t\tconsole.warn(`https://svelte.dev/e/invalid_raw_snippet_render`);\n\t}\n}\n\n/**\n * Detected a migrated `$:` reactive block in `%filename%` that both accesses and updates the same reactive value. This may cause recursive updates when converted to an `$effect`.\n * @param {string} filename\n */\nexport function legacy_recursive_reactive_block(filename) {\n\tif (DEV) {\n\t\tconsole.warn(`%c[svelte] legacy_recursive_reactive_block\\n%cDetected a migrated \\`$:\\` reactive block in \\`${filename}\\` that both accesses and updates the same reactive value. This may cause recursive updates when converted to an \\`$effect\\`.\\nhttps://svelte.dev/e/legacy_recursive_reactive_block`, bold, normal);\n\t} else {\n\t\tconsole.warn(`https://svelte.dev/e/legacy_recursive_reactive_block`);\n\t}\n}\n\n/**\n * Tried to unmount a component that was not mounted\n */\nexport function lifecycle_double_unmount() {\n\tif (DEV) {\n\t\tconsole.warn(`%c[svelte] lifecycle_double_unmount\\n%cTried to unmount a component that was not mounted\\nhttps://svelte.dev/e/lifecycle_double_unmount`, bold, normal);\n\t} else {\n\t\tconsole.warn(`https://svelte.dev/e/lifecycle_double_unmount`);\n\t}\n}\n\n/**\n * %parent% passed a value to %child% with `bind:`, but the value is owned by %owner%. Consider creating a binding between %owner% and %parent%\n * @param {string} parent\n * @param {string} child\n * @param {string} owner\n */\nexport function ownership_invalid_binding(parent, child, owner) {\n\tif (DEV) {\n\t\tconsole.warn(`%c[svelte] ownership_invalid_binding\\n%c${parent} passed a value to ${child} with \\`bind:\\`, but the value is owned by ${owner}. Consider creating a binding between ${owner} and ${parent}\\nhttps://svelte.dev/e/ownership_invalid_binding`, bold, normal);\n\t} else {\n\t\tconsole.warn(`https://svelte.dev/e/ownership_invalid_binding`);\n\t}\n}\n\n/**\n * %component% mutated a value owned by %owner%. This is strongly discouraged. Consider passing values to child components with `bind:`, or use a callback instead\n * @param {string | undefined | null} [component]\n * @param {string | undefined | null} [owner]\n */\nexport function ownership_invalid_mutation(component, owner) {\n\tif (DEV) {\n\t\tconsole.warn(`%c[svelte] ownership_invalid_mutation\\n%c${component ? `${component} mutated a value owned by ${owner}. This is strongly discouraged. Consider passing values to child components with \\`bind:\\`, or use a callback instead` : 'Mutating a value outside the component that created it is strongly discouraged. Consider passing values to child components with `bind:`, or use a callback instead'}\\nhttps://svelte.dev/e/ownership_invalid_mutation`, bold, normal);\n\t} else {\n\t\tconsole.warn(`https://svelte.dev/e/ownership_invalid_mutation`);\n\t}\n}\n\n/**\n * Reactive `$state(...)` proxies and the values they proxy have different identities. Because of this, comparisons with `%operator%` will produce unexpected results\n * @param {string} operator\n */\nexport function state_proxy_equality_mismatch(operator) {\n\tif (DEV) {\n\t\tconsole.warn(`%c[svelte] state_proxy_equality_mismatch\\n%cReactive \\`$state(...)\\` proxies and the values they proxy have different identities. Because of this, comparisons with \\`${operator}\\` will produce unexpected results\\nhttps://svelte.dev/e/state_proxy_equality_mismatch`, bold, normal);\n\t} else {\n\t\tconsole.warn(`https://svelte.dev/e/state_proxy_equality_mismatch`);\n\t}\n}\n\n/**\n * The `slide` transition does not work correctly for elements with `display: %value%`\n * @param {string} value\n */\nexport function transition_slide_display(value) {\n\tif (DEV) {\n\t\tconsole.warn(`%c[svelte] transition_slide_display\\n%cThe \\`slide\\` transition does not work correctly for elements with \\`display: ${value}\\`\\nhttps://svelte.dev/e/transition_slide_display`, bold, normal);\n\t} else {\n\t\tconsole.warn(`https://svelte.dev/e/transition_slide_display`);\n\t}\n}","/** @import { ProxyMetadata } from '#client' */\n/** @typedef {{ file: string, line: number, column: number }} Location */\n\nimport { STATE_SYMBOL_METADATA } from '../constants.js';\nimport { render_effect, user_pre_effect } from '../reactivity/effects.js';\nimport { dev_current_component_function } from '../context.js';\nimport { get_prototype_of } from '../../shared/utils.js';\nimport * as w from '../warnings.js';\nimport { FILENAME } from '../../../constants.js';\n\n/** @type {Record<string, Array<{ start: Location, end: Location, component: Function }>>} */\nconst boundaries = {};\n\nconst chrome_pattern = /at (?:.+ \\()?(.+):(\\d+):(\\d+)\\)?$/;\nconst firefox_pattern = /@(.+):(\\d+):(\\d+)$/;\n\nfunction get_stack() {\n\tconst stack = new Error().stack;\n\tif (!stack) return null;\n\n\tconst entries = [];\n\n\tfor (const line of stack.split('\\n')) {\n\t\tlet match = chrome_pattern.exec(line) ?? firefox_pattern.exec(line);\n\n\t\tif (match) {\n\t\t\tentries.push({\n\t\t\t\tfile: match[1],\n\t\t\t\tline: +match[2],\n\t\t\t\tcolumn: +match[3]\n\t\t\t});\n\t\t}\n\t}\n\n\treturn entries;\n}\n\n/**\n * Determines which `.svelte` component is responsible for a given state change\n * @returns {Function | null}\n */\nexport function get_component() {\n\t// first 4 lines are svelte internals; adjust this number if we change the internal call stack\n\tconst stack = get_stack()?.slice(4);\n\tif (!stack) return null;\n\n\tfor (let i = 0; i < stack.length; i++) {\n\t\tconst entry = stack[i];\n\t\tconst modules = boundaries[entry.file];\n\t\tif (!modules) {\n\t\t\t// If the first entry is not a component, that means the modification very likely happened\n\t\t\t// within a .svelte.js file, possibly triggered by a component. Since these files are not part\n\t\t\t// of the bondaries/component context heuristic, we need to bail in this case, else we would\n\t\t\t// have false positives when the .svelte.ts file provides a state creator function, encapsulating\n\t\t\t// the state and its mutations, and is being called from a component other than the one who\n\t\t\t// called the state creator function.\n\t\t\tif (i === 0) return null;\n\t\t\tcontinue;\n\t\t}\n\n\t\tfor (const module of modules) {\n\t\t\tif (module.end == null) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tif (module.start.line < entry.line && module.end.line > entry.line) {\n\t\t\t\treturn module.component;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn null;\n}\n\nexport const ADD_OWNER = Symbol('ADD_OWNER');\n\n/**\n * Together with `mark_module_end`, this function establishes the boundaries of a `.svelte` file,\n * such that subsequent calls to `get_component` can tell us which component is responsible\n * for a given state change\n */\nexport function mark_module_start() {\n\tconst start = get_stack()?.[2];\n\n\tif (start) {\n\t\t(boundaries[start.file] ??= []).push({\n\t\t\tstart,\n\t\t\t// @ts-expect-error\n\t\t\tend: null,\n\t\t\t// @ts-expect-error we add the component at the end, since HMR will overwrite the function\n\t\t\tcomponent: null\n\t\t});\n\t}\n}\n\n/**\n * @param {Function} component\n */\nexport function mark_module_end(component) {\n\tconst end = get_stack()?.[2];\n\n\tif (end) {\n\t\tconst boundaries_file = boundaries[end.file];\n\t\tconst boundary = boundaries_file[boundaries_file.length - 1];\n\n\t\tboundary.end = end;\n\t\tboundary.component = component;\n\t}\n}\n\n/**\n * @param {any} object\n * @param {any | null} owner\n * @param {boolean} [global]\n * @param {boolean} [skip_warning]\n */\nexport function add_owner(object, owner, global = false, skip_warning = false) {\n\tif (object && !global) {\n\t\tconst component = dev_current_component_function;\n\t\tconst metadata = object[STATE_SYMBOL_METADATA];\n\t\tif (metadata && !has_owner(metadata, component)) {\n\t\t\tlet original = get_owner(metadata);\n\n\t\t\tif (owner && owner[FILENAME] !== component[FILENAME] && !skip_warning) {\n\t\t\t\tw.ownership_invalid_binding(component[FILENAME], owner[FILENAME], original[FILENAME]);\n\t\t\t}\n\t\t}\n\t}\n\n\tadd_owner_to_object(object, owner, new Set());\n}\n\n/**\n * @param {() => unknown} get_object\n * @param {any} Component\n * @param {boolean} [skip_warning]\n */\nexport function add_owner_effect(get_object, Component, skip_warning = false) {\n\tuser_pre_effect(() => {\n\t\tadd_owner(get_object(), Component, false, skip_warning);\n\t});\n}\n\n/**\n * @param {ProxyMetadata | null} from\n * @param {ProxyMetadata} to\n */\nexport function widen_ownership(from, to) {\n\tif (to.owners === null) {\n\t\treturn;\n\t}\n\n\twhile (from) {\n\t\tif (from.owners === null) {\n\t\t\tto.owners = null;\n\t\t\tbreak;\n\t\t}\n\n\t\tfor (const owner of from.owners) {\n\t\t\tto.owners.add(owner);\n\t\t}\n\n\t\tfrom = from.parent;\n\t}\n}\n\n/**\n * @param {any} object\n * @param {Function | null} owner If `null`, then the object is globally owned and will not be checked\n * @param {Set<any>} seen\n */\nfunction add_owner_to_object(object, owner, seen) {\n\tconst metadata = /** @type {ProxyMetadata} */ (object?.[STATE_SYMBOL_METADATA]);\n\n\tif (metadata) {\n\t\t// this is a state proxy, add owner directly, if not globally shared\n\t\tif ('owners' in metadata && metadata.owners != null) {\n\t\t\tif (owner) {\n\t\t\t\tmetadata.owners.add(owner);\n\t\t\t} else {\n\t\t\t\tmetadata.owners = null;\n\t\t\t}\n\t\t}\n\t} else if (object && typeof object === 'object') {\n\t\tif (seen.has(object)) return;\n\t\tseen.add(object);\n\t\tif (ADD_OWNER in object && object[ADD_OWNER]) {\n\t\t\t// this is a class with state fields. we put this in a render effect\n\t\t\t// so that if state is replaced (e.g. `instance.name = { first, last }`)\n\t\t\t// the new state is also co-owned by the caller of `getContext`\n\t\t\trender_effect(() => {\n\t\t\t\tobject[ADD_OWNER](owner);\n\t\t\t});\n\t\t} else {\n\t\t\tvar proto = get_prototype_of(object);\n\n\t\t\tif (proto === Object.prototype) {\n\t\t\t\t// recurse until we find a state proxy\n\t\t\t\tfor (const key in object) {\n\t\t\t\t\tadd_owner_to_object(object[key], owner, seen);\n\t\t\t\t}\n\t\t\t} else if (proto === Array.prototype) {\n\t\t\t\t// recurse until we find a state proxy\n\t\t\t\tfor (let i = 0; i < object.length; i += 1) {\n\t\t\t\t\tadd_owner_to_object(object[i], owner, seen);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * @param {ProxyMetadata} metadata\n * @param {Function} component\n * @returns {boolean}\n */\nfunction has_owner(metadata, component) {\n\tif (metadata.owners === null) {\n\t\treturn true;\n\t}\n\n\treturn (\n\t\tmetadata.owners.has(component) ||\n\t\t// This helps avoid false positives when using HMR, where the component function is replaced\n\t\t[...metadata.owners].some(\n\t\t\t(owner) => /** @type {any} */ (owner)[FILENAME] === /** @type {any} */ (component)?.[FILENAME]\n\t\t) ||\n\t\t(metadata.parent !== null && has_owner(metadata.parent, component))\n\t);\n}\n\n/**\n * @param {ProxyMetadata} metadata\n * @returns {any}\n */\nfunction get_owner(metadata) {\n\treturn (\n\t\tmetadata?.owners?.values().next().value ??\n\t\tget_owner(/** @type {ProxyMetadata} */ (metadata.parent))\n\t);\n}\n\nlet skip = false;\n\n/**\n * @param {() => any} fn\n */\nexport function skip_ownership_validation(fn) {\n\tskip = true;\n\tfn();\n\tskip = false;\n}\n\n/**\n * @param {ProxyMetadata} metadata\n */\nexport function check_ownership(metadata) {\n\tif (skip) return;\n\n\tconst component = get_component();\n\n\tif (component && !has_owner(metadata, component)) {\n\t\tlet original = get_owner(metadata);\n\n\t\t// @ts-expect-error\n\t\tif (original[FILENAME] !== component[FILENAME]) {\n\t\t\t// @ts-expect-error\n\t\t\tw.ownership_invalid_mutation(component[FILENAME], original[FILENAME]);\n\t\t} else {\n\t\t\tw.ownership_invalid_mutation();\n\t\t}\n\t}\n}\n","/** @import { ComponentContext } from '#client' */\n\nimport { DEV } from 'esm-env';\nimport { add_owner } from './dev/ownership.js';\nimport { lifecycle_outside_component } from '../shared/errors.js';\nimport { source } from './reactivity/sources.js';\nimport {\n\tactive_effect,\n\tactive_reaction,\n\tset_active_effect,\n\tset_active_reaction,\n\tuntrack\n} from './runtime.js';\nimport { effect } from './reactivity/effects.js';\nimport { legacy_mode_flag } from '../flags/index.js';\n\n/** @type {ComponentContext | null} */\nexport let component_context = null;\n\n/** @param {ComponentContext | null} context */\nexport function set_component_context(context) {\n\tcomponent_context = context;\n}\n\n/**\n * The current component function. Different from current component context:\n * ```html\n * <!-- App.svelte -->\n * <Foo>\n *   <Bar /> <!-- context == Foo.svelte, function == App.svelte -->\n * </Foo>\n * ```\n * @type {ComponentContext['function']}\n */\nexport let dev_current_component_function = null;\n\n/** @param {ComponentContext['function']} fn */\nexport function set_dev_current_component_function(fn) {\n\tdev_current_component_function = fn;\n}\n\n/**\n * Retrieves the context that belongs to the closest parent component with the specified `key`.\n * Must be called during component initialisation.\n *\n * @template T\n * @param {any} key\n * @returns {T}\n */\nexport function getContext(key) {\n\tconst context_map = get_or_init_context_map('getContext');\n\tconst result = /** @type {T} */ (context_map.get(key));\n\treturn result;\n}\n\n/**\n * Associates an arbitrary `context` object with the current component and the specified `key`\n * and returns that object. The context is then available to children of the component\n * (including slotted content) with `getContext`.\n *\n * Like lifecycle functions, this must be called during component initialisation.\n *\n * @template T\n * @param {any} key\n * @param {T} context\n * @returns {T}\n */\nexport function setContext(key, context) {\n\tconst context_map = get_or_init_context_map('setContext');\n\n\tif (DEV) {\n\t\t// When state is put into context, we treat as if it's global from now on.\n\t\t// We do for performance reasons (it's for example very expensive to call\n\t\t// getContext on a big object many times when part of a list component)\n\t\t// and danger of false positives.\n\t\tuntrack(() => add_owner(context, null, true));\n\t}\n\n\tcontext_map.set(key, context);\n\treturn context;\n}\n\n/**\n * Checks whether a given `key` has been set in the context of a parent component.\n * Must be called during component initialisation.\n *\n * @param {any} key\n * @returns {boolean}\n */\nexport function hasContext(key) {\n\tconst context_map = get_or_init_context_map('hasContext');\n\treturn context_map.has(key);\n}\n\n/**\n * Retrieves the whole context map that belongs to the closest parent component.\n * Must be called during component initialisation. Useful, for example, if you\n * programmatically create a component and want to pass the existing context to it.\n *\n * @template {Map<any, any>} [T=Map<any, any>]\n * @returns {T}\n */\nexport function getAllContexts() {\n\tconst context_map = get_or_init_context_map('getAllContexts');\n\treturn /** @type {T} */ (context_map);\n}\n\n/**\n * @param {Record<string, unknown>} props\n * @param {any} runes\n * @param {Function} [fn]\n * @returns {void}\n */\nexport function push(props, runes = false, fn) {\n\tcomponent_context = {\n\t\tp: component_context,\n\t\tc: null,\n\t\te: null,\n\t\tm: false,\n\t\ts: props,\n\t\tx: null,\n\t\tl: null\n\t};\n\n\tif (legacy_mode_flag && !runes) {\n\t\tcomponent_context.l = {\n\t\t\ts: null,\n\t\t\tu: null,\n\t\t\tr1: [],\n\t\t\tr2: source(false)\n\t\t};\n\t}\n\n\tif (DEV) {\n\t\t// component function\n\t\tcomponent_context.function = fn;\n\t\tdev_current_component_function = fn;\n\t}\n}\n\n/**\n * @template {Record<string, any>} T\n * @param {T} [component]\n * @returns {T}\n */\nexport function pop(component) {\n\tconst context_stack_item = component_context;\n\tif (context_stack_item !== null) {\n\t\tif (component !== undefined) {\n\t\t\tcontext_stack_item.x = component;\n\t\t}\n\t\tconst component_effects = context_stack_item.e;\n\t\tif (component_effects !== null) {\n\t\t\tvar previous_effect = active_effect;\n\t\t\tvar previous_reaction = active_reaction;\n\t\t\tcontext_stack_item.e = null;\n\t\t\ttry {\n\t\t\t\tfor (var i = 0; i < component_effects.length; i++) {\n\t\t\t\t\tvar component_effect = component_effects[i];\n\t\t\t\t\tset_active_effect(component_effect.effect);\n\t\t\t\t\tset_active_reaction(component_effect.reaction);\n\t\t\t\t\teffect(component_effect.fn);\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\tset_active_effect(previous_effect);\n\t\t\t\tset_active_reaction(previous_reaction);\n\t\t\t}\n\t\t}\n\t\tcomponent_context = context_stack_item.p;\n\t\tif (DEV) {\n\t\t\tdev_current_component_function = context_stack_item.p?.function ?? null;\n\t\t}\n\t\tcontext_stack_item.m = true;\n\t}\n\t// Micro-optimization: Don't set .a above to the empty object\n\t// so it can be garbage-collected when the return here is unused\n\treturn component || /** @type {T} */ ({});\n}\n\n/** @returns {boolean} */\nexport function is_runes() {\n\treturn !legacy_mode_flag || (component_context !== null && component_context.l === null);\n}\n\n/**\n * @param {string} name\n * @returns {Map<unknown, unknown>}\n */\nfunction get_or_init_context_map(name) {\n\tif (component_context === null) {\n\t\tlifecycle_outside_component(name);\n\t}\n\n\treturn (component_context.c ??= new Map(get_parent_context(component_context) || undefined));\n}\n\n/**\n * @param {ComponentContext} component_context\n * @returns {Map<unknown, unknown> | null}\n */\nfunction get_parent_context(component_context) {\n\tlet parent = component_context.p;\n\twhile (parent !== null) {\n\t\tconst context_map = parent.c;\n\t\tif (context_map !== null) {\n\t\t\treturn context_map;\n\t\t}\n\t\tparent = parent.p;\n\t}\n\treturn null;\n}\n","/** @import { Derived, Effect, Reaction, Source, Value } from '#client' */\nimport { DEV } from 'esm-env';\nimport {\n\tactive_reaction,\n\tactive_effect,\n\tuntracked_writes,\n\tget,\n\tschedule_effect,\n\tset_untracked_writes,\n\tset_signal_status,\n\tuntrack,\n\tincrement_write_version,\n\tupdate_effect,\n\tderived_sources,\n\tset_derived_sources,\n\tcheck_dirtiness,\n\tset_is_flushing_effect,\n\tis_flushing_effect,\n\tuntracking\n} from '../runtime.js';\nimport { equals, safe_equals } from './equality.js';\nimport {\n\tCLEAN,\n\tDERIVED,\n\tDIRTY,\n\tBRANCH_EFFECT,\n\tINSPECT_EFFECT,\n\tUNOWNED,\n\tMAYBE_DIRTY,\n\tBLOCK_EFFECT,\n\tROOT_EFFECT\n} from '../constants.js';\nimport * as e from '../errors.js';\nimport { legacy_mode_flag, tracing_mode_flag } from '../../flags/index.js';\nimport { get_stack } from '../dev/tracing.js';\nimport { component_context, is_runes } from '../context.js';\n\nexport let inspect_effects = new Set();\n\n/**\n * @param {Set<any>} v\n */\nexport function set_inspect_effects(v) {\n\tinspect_effects = v;\n}\n\n/**\n * @template V\n * @param {V} v\n * @param {Error | null} [stack]\n * @returns {Source<V>}\n */\nexport function source(v, stack) {\n\t/** @type {Value} */\n\tvar signal = {\n\t\tf: 0, // TODO ideally we could skip this altogether, but it causes type errors\n\t\tv,\n\t\treactions: null,\n\t\tequals,\n\t\trv: 0,\n\t\twv: 0\n\t};\n\n\tif (DEV && tracing_mode_flag) {\n\t\tsignal.created = stack ?? get_stack('CreatedAt');\n\t\tsignal.debug = null;\n\t}\n\n\treturn signal;\n}\n\n/**\n * @template V\n * @param {V} v\n */\nexport function state(v) {\n\treturn push_derived_source(source(v));\n}\n\n/**\n * @template V\n * @param {V} initial_value\n * @param {boolean} [immutable]\n * @returns {Source<V>}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function mutable_source(initial_value, immutable = false) {\n\tconst s = source(initial_value);\n\tif (!immutable) {\n\t\ts.equals = safe_equals;\n\t}\n\n\t// bind the signal to the component context, in case we need to\n\t// track updates to trigger beforeUpdate/afterUpdate callbacks\n\tif (legacy_mode_flag && component_context !== null && component_context.l !== null) {\n\t\t(component_context.l.s ??= []).push(s);\n\t}\n\n\treturn s;\n}\n\n/**\n * @template V\n * @param {V} v\n * @param {boolean} [immutable]\n * @returns {Source<V>}\n */\nexport function mutable_state(v, immutable = false) {\n\treturn push_derived_source(mutable_source(v, immutable));\n}\n\n/**\n * @template V\n * @param {Source<V>} source\n */\n/*#__NO_SIDE_EFFECTS__*/\nfunction push_derived_source(source) {\n\tif (active_reaction !== null && !untracking && (active_reaction.f & DERIVED) !== 0) {\n\t\tif (derived_sources === null) {\n\t\t\tset_derived_sources([source]);\n\t\t} else {\n\t\t\tderived_sources.push(source);\n\t\t}\n\t}\n\n\treturn source;\n}\n\n/**\n * @template V\n * @param {Value<V>} source\n * @param {V} value\n */\nexport function mutate(source, value) {\n\tset(\n\t\tsource,\n\t\tuntrack(() => get(source))\n\t);\n\treturn value;\n}\n\n/**\n * @template V\n * @param {Source<V>} source\n * @param {V} value\n * @returns {V}\n */\nexport function set(source, value) {\n\tif (\n\t\tactive_reaction !== null &&\n\t\t!untracking &&\n\t\tis_runes() &&\n\t\t(active_reaction.f & (DERIVED | BLOCK_EFFECT)) !== 0 &&\n\t\t// If the source was created locally within the current derived, then\n\t\t// we allow the mutation.\n\t\t(derived_sources === null || !derived_sources.includes(source))\n\t) {\n\t\te.state_unsafe_mutation();\n\t}\n\n\treturn internal_set(source, value);\n}\n\n/**\n * @template V\n * @param {Source<V>} source\n * @param {V} value\n * @returns {V}\n */\nexport function internal_set(source, value) {\n\tif (!source.equals(value)) {\n\t\tvar old_value = source.v;\n\t\tsource.v = value;\n\t\tsource.wv = increment_write_version();\n\n\t\tif (DEV && tracing_mode_flag) {\n\t\t\tsource.updated = get_stack('UpdatedAt');\n\t\t\tif (active_effect != null) {\n\t\t\t\tsource.trace_need_increase = true;\n\t\t\t\tsource.trace_v ??= old_value;\n\t\t\t}\n\t\t}\n\n\t\tmark_reactions(source, DIRTY);\n\n\t\t// It's possible that the current reaction might not have up-to-date dependencies\n\t\t// whilst it's actively running. So in the case of ensuring it registers the reaction\n\t\t// properly for itself, we need to ensure the current effect actually gets\n\t\t// scheduled. i.e: `$effect(() => x++)`\n\t\tif (\n\t\t\tis_runes() &&\n\t\t\tactive_effect !== null &&\n\t\t\t(active_effect.f & CLEAN) !== 0 &&\n\t\t\t(active_effect.f & (BRANCH_EFFECT | ROOT_EFFECT)) === 0\n\t\t) {\n\t\t\tif (untracked_writes === null) {\n\t\t\t\tset_untracked_writes([source]);\n\t\t\t} else {\n\t\t\t\tuntracked_writes.push(source);\n\t\t\t}\n\t\t}\n\n\t\tif (DEV && inspect_effects.size > 0) {\n\t\t\tconst inspects = Array.from(inspect_effects);\n\t\t\tvar previously_flushing_effect = is_flushing_effect;\n\t\t\tset_is_flushing_effect(true);\n\t\t\ttry {\n\t\t\t\tfor (const effect of inspects) {\n\t\t\t\t\t// Mark clean inspect-effects as maybe dirty and then check their dirtiness\n\t\t\t\t\t// instead of just updating the effects - this way we avoid overfiring.\n\t\t\t\t\tif ((effect.f & CLEAN) !== 0) {\n\t\t\t\t\t\tset_signal_status(effect, MAYBE_DIRTY);\n\t\t\t\t\t}\n\t\t\t\t\tif (check_dirtiness(effect)) {\n\t\t\t\t\t\tupdate_effect(effect);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\tset_is_flushing_effect(previously_flushing_effect);\n\t\t\t}\n\t\t\tinspect_effects.clear();\n\t\t}\n\t}\n\n\treturn value;\n}\n\n/**\n * @template {number | bigint} T\n * @param {Source<T>} source\n * @param {1 | -1} [d]\n * @returns {T}\n */\nexport function update(source, d = 1) {\n\tvar value = get(source);\n\tvar result = d === 1 ? value++ : value--;\n\n\tset(source, value);\n\n\t// @ts-expect-error\n\treturn result;\n}\n\n/**\n * @template {number | bigint} T\n * @param {Source<T>} source\n * @param {1 | -1} [d]\n * @returns {T}\n */\nexport function update_pre(source, d = 1) {\n\tvar value = get(source);\n\n\t// @ts-expect-error\n\treturn set(source, d === 1 ? ++value : --value);\n}\n\n/**\n * @param {Value} signal\n * @param {number} status should be DIRTY or MAYBE_DIRTY\n * @returns {void}\n */\nfunction mark_reactions(signal, status) {\n\tvar reactions = signal.reactions;\n\tif (reactions === null) return;\n\n\tvar runes = is_runes();\n\tvar length = reactions.length;\n\n\tfor (var i = 0; i < length; i++) {\n\t\tvar reaction = reactions[i];\n\t\tvar flags = reaction.f;\n\n\t\t// Skip any effects that are already dirty\n\t\tif ((flags & DIRTY) !== 0) continue;\n\n\t\t// In legacy mode, skip the current effect to prevent infinite loops\n\t\tif (!runes && reaction === active_effect) continue;\n\n\t\t// Inspect effects need to run immediately, so that the stack trace makes sense\n\t\tif (DEV && (flags & INSPECT_EFFECT) !== 0) {\n\t\t\tinspect_effects.add(reaction);\n\t\t\tcontinue;\n\t\t}\n\n\t\tset_signal_status(reaction, status);\n\n\t\t// If the signal a) was previously clean or b) is an unowned derived, then mark it\n\t\tif ((flags & (CLEAN | UNOWNED)) !== 0) {\n\t\t\tif ((flags & DERIVED) !== 0) {\n\t\t\t\tmark_reactions(/** @type {Derived} */ (reaction), MAYBE_DIRTY);\n\t\t\t} else {\n\t\t\t\tschedule_effect(/** @type {Effect} */ (reaction));\n\t\t\t}\n\t\t}\n\t}\n}\n","/** @import { ComponentContext, Derived, Effect, Reaction, Signal, Source, Value } from '#client' */\nimport { DEV } from 'esm-env';\nimport { define_property, get_descriptors, get_prototype_of, index_of } from '../shared/utils.js';\nimport {\n\tdestroy_block_effect_children,\n\tdestroy_effect_children,\n\texecute_effect_teardown,\n\tunlink_effect\n} from './reactivity/effects.js';\nimport {\n\tEFFECT,\n\tRENDER_EFFECT,\n\tDIRTY,\n\tMAYBE_DIRTY,\n\tCLEAN,\n\tDERIVED,\n\tUNOWNED,\n\tDESTROYED,\n\tINERT,\n\tBRANCH_EFFECT,\n\tSTATE_SYMBOL,\n\tBLOCK_EFFECT,\n\tROOT_EFFECT,\n\tLEGACY_DERIVED_PROP,\n\tDISCONNECTED,\n\tBOUNDARY_EFFECT\n} from './constants.js';\nimport { flush_tasks } from './dom/task.js';\nimport { internal_set } from './reactivity/sources.js';\nimport {\n\tdestroy_derived,\n\tdestroy_derived_effects,\n\texecute_derived,\n\tupdate_derived\n} from './reactivity/deriveds.js';\nimport * as e from './errors.js';\nimport { FILENAME } from '../../constants.js';\nimport { tracing_mode_flag } from '../flags/index.js';\nimport { tracing_expressions, get_stack } from './dev/tracing.js';\nimport {\n\tcomponent_context,\n\tdev_current_component_function,\n\tis_runes,\n\tset_component_context,\n\tset_dev_current_component_function\n} from './context.js';\n\nconst FLUSH_MICROTASK = 0;\nconst FLUSH_SYNC = 1;\n// Used for DEV time error handling\n/** @param {WeakSet<Error>} value */\nconst handled_errors = new WeakSet();\nexport let is_throwing_error = false;\n\n// Used for controlling the flush of effects.\nlet scheduler_mode = FLUSH_MICROTASK;\n// Used for handling scheduling\nlet is_micro_task_queued = false;\n\n/** @type {Effect | null} */\nlet last_scheduled_effect = null;\n\nexport let is_flushing_effect = false;\nexport let is_destroying_effect = false;\n\n/** @param {boolean} value */\nexport function set_is_flushing_effect(value) {\n\tis_flushing_effect = value;\n}\n\n/** @param {boolean} value */\nexport function set_is_destroying_effect(value) {\n\tis_destroying_effect = value;\n}\n\n// Handle effect queues\n\n/** @type {Effect[]} */\nlet queued_root_effects = [];\n\nlet flush_count = 0;\n/** @type {Effect[]} Stack of effects, dev only */\nlet dev_effect_stack = [];\n// Handle signal reactivity tree dependencies and reactions\n\n/** @type {null | Reaction} */\nexport let active_reaction = null;\n\nexport let untracking = false;\n\n/** @param {null | Reaction} reaction */\nexport function set_active_reaction(reaction) {\n\tactive_reaction = reaction;\n}\n\n/** @type {null | Effect} */\nexport let active_effect = null;\n\n/** @param {null | Effect} effect */\nexport function set_active_effect(effect) {\n\tactive_effect = effect;\n}\n\n/**\n * When sources are created within a derived, we record them so that we can safely allow\n * local mutations to these sources without the side-effect error being invoked unnecessarily.\n * @type {null | Source[]}\n */\nexport let derived_sources = null;\n\n/**\n * @param {Source[] | null} sources\n */\nexport function set_derived_sources(sources) {\n\tderived_sources = sources;\n}\n\n/**\n * The dependencies of the reaction that is currently being executed. In many cases,\n * the dependencies are unchanged between runs, and so this will be `null` unless\n * and until a new dependency is accessed — we track this via `skipped_deps`\n * @type {null | Value[]}\n */\nexport let new_deps = null;\n\nlet skipped_deps = 0;\n\n/**\n * Tracks writes that the effect it's executed in doesn't listen to yet,\n * so that the dependency can be added to the effect later on if it then reads it\n * @type {null | Source[]}\n */\nexport let untracked_writes = null;\n\n/** @param {null | Source[]} value */\nexport function set_untracked_writes(value) {\n\tuntracked_writes = value;\n}\n\n/**\n * @type {number} Used by sources and deriveds for handling updates.\n * Version starts from 1 so that unowned deriveds differentiate between a created effect and a run one for tracing\n **/\nlet write_version = 1;\n\n/** @type {number} Used to version each read of a source of derived to avoid duplicating depedencies inside a reaction */\nlet read_version = 0;\n\n// If we are working with a get() chain that has no active container,\n// to prevent memory leaks, we skip adding the reaction.\nexport let skip_reaction = false;\n// Handle collecting all signals which are read during a specific time frame\n/** @type {Set<Value> | null} */\nexport let captured_signals = null;\n\n/** @param {Set<Value> | null} value */\nexport function set_captured_signals(value) {\n\tcaptured_signals = value;\n}\n\nexport function increment_write_version() {\n\treturn ++write_version;\n}\n\n/**\n * Determines whether a derived or effect is dirty.\n * If it is MAYBE_DIRTY, will set the status to CLEAN\n * @param {Reaction} reaction\n * @returns {boolean}\n */\nexport function check_dirtiness(reaction) {\n\tvar flags = reaction.f;\n\n\tif ((flags & DIRTY) !== 0) {\n\t\treturn true;\n\t}\n\n\tif ((flags & MAYBE_DIRTY) !== 0) {\n\t\tvar dependencies = reaction.deps;\n\t\tvar is_unowned = (flags & UNOWNED) !== 0;\n\n\t\tif (dependencies !== null) {\n\t\t\tvar i;\n\t\t\tvar dependency;\n\t\t\tvar is_disconnected = (flags & DISCONNECTED) !== 0;\n\t\t\tvar is_unowned_connected = is_unowned && active_effect !== null && !skip_reaction;\n\t\t\tvar length = dependencies.length;\n\n\t\t\t// If we are working with a disconnected or an unowned signal that is now connected (due to an active effect)\n\t\t\t// then we need to re-connect the reaction to the dependency\n\t\t\tif (is_disconnected || is_unowned_connected) {\n\t\t\t\tfor (i = 0; i < length; i++) {\n\t\t\t\t\tdependency = dependencies[i];\n\n\t\t\t\t\t// We always re-add all reactions (even duplicates) if the derived was\n\t\t\t\t\t// previously disconnected\n\t\t\t\t\tif (is_disconnected || !dependency?.reactions?.includes(reaction)) {\n\t\t\t\t\t\t(dependency.reactions ??= []).push(reaction);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (is_disconnected) {\n\t\t\t\t\treaction.f ^= DISCONNECTED;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (i = 0; i < length; i++) {\n\t\t\t\tdependency = dependencies[i];\n\n\t\t\t\tif (check_dirtiness(/** @type {Derived} */ (dependency))) {\n\t\t\t\t\tupdate_derived(/** @type {Derived} */ (dependency));\n\t\t\t\t}\n\n\t\t\t\tif (dependency.wv > reaction.wv) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Unowned signals should never be marked as clean unless they\n\t\t// are used within an active_effect without skip_reaction\n\t\tif (!is_unowned || (active_effect !== null && !skip_reaction)) {\n\t\t\tset_signal_status(reaction, CLEAN);\n\t\t}\n\t}\n\n\treturn false;\n}\n\n/**\n * @param {unknown} error\n * @param {Effect} effect\n */\nfunction propagate_error(error, effect) {\n\t/** @type {Effect | null} */\n\tvar current = effect;\n\n\twhile (current !== null) {\n\t\tif ((current.f & BOUNDARY_EFFECT) !== 0) {\n\t\t\ttry {\n\t\t\t\t// @ts-expect-error\n\t\t\t\tcurrent.fn(error);\n\t\t\t\treturn;\n\t\t\t} catch {\n\t\t\t\t// Remove boundary flag from effect\n\t\t\t\tcurrent.f ^= BOUNDARY_EFFECT;\n\t\t\t}\n\t\t}\n\n\t\tcurrent = current.parent;\n\t}\n\n\tis_throwing_error = false;\n\tthrow error;\n}\n\n/**\n * @param {Effect} effect\n */\nfunction should_rethrow_error(effect) {\n\treturn (\n\t\t(effect.f & DESTROYED) === 0 &&\n\t\t(effect.parent === null || (effect.parent.f & BOUNDARY_EFFECT) === 0)\n\t);\n}\n\nexport function reset_is_throwing_error() {\n\tis_throwing_error = false;\n}\n\n/**\n * @param {unknown} error\n * @param {Effect} effect\n * @param {Effect | null} previous_effect\n * @param {ComponentContext | null} component_context\n */\nexport function handle_error(error, effect, previous_effect, component_context) {\n\tif (is_throwing_error) {\n\t\tif (previous_effect === null) {\n\t\t\tis_throwing_error = false;\n\t\t}\n\n\t\tif (should_rethrow_error(effect)) {\n\t\t\tthrow error;\n\t\t}\n\n\t\treturn;\n\t}\n\n\tif (previous_effect !== null) {\n\t\tis_throwing_error = true;\n\t}\n\n\tif (\n\t\t!DEV ||\n\t\tcomponent_context === null ||\n\t\t!(error instanceof Error) ||\n\t\thandled_errors.has(error)\n\t) {\n\t\tpropagate_error(error, effect);\n\t\treturn;\n\t}\n\n\thandled_errors.add(error);\n\n\tconst component_stack = [];\n\n\tconst effect_name = effect.fn?.name;\n\n\tif (effect_name) {\n\t\tcomponent_stack.push(effect_name);\n\t}\n\n\t/** @type {ComponentContext | null} */\n\tlet current_context = component_context;\n\n\twhile (current_context !== null) {\n\t\tif (DEV) {\n\t\t\t/** @type {string} */\n\t\t\tvar filename = current_context.function?.[FILENAME];\n\n\t\t\tif (filename) {\n\t\t\t\tconst file = filename.split('/').pop();\n\t\t\t\tcomponent_stack.push(file);\n\t\t\t}\n\t\t}\n\n\t\tcurrent_context = current_context.p;\n\t}\n\n\tconst indent = /Firefox/.test(navigator.userAgent) ? '  ' : '\\t';\n\tdefine_property(error, 'message', {\n\t\tvalue: error.message + `\\n${component_stack.map((name) => `\\n${indent}in ${name}`).join('')}\\n`\n\t});\n\tdefine_property(error, 'component_stack', {\n\t\tvalue: component_stack\n\t});\n\n\tconst stack = error.stack;\n\n\t// Filter out internal files from callstack\n\tif (stack) {\n\t\tconst lines = stack.split('\\n');\n\t\tconst new_lines = [];\n\t\tfor (let i = 0; i < lines.length; i++) {\n\t\t\tconst line = lines[i];\n\t\t\tif (line.includes('svelte/src/internal')) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tnew_lines.push(line);\n\t\t}\n\t\tdefine_property(error, 'stack', {\n\t\t\tvalue: new_lines.join('\\n')\n\t\t});\n\t}\n\n\tpropagate_error(error, effect);\n\n\tif (should_rethrow_error(effect)) {\n\t\tthrow error;\n\t}\n}\n\n/**\n * @param {Value} signal\n * @param {Effect} effect\n * @param {number} [depth]\n */\nfunction schedule_possible_effect_self_invalidation(signal, effect, depth = 0) {\n\tvar reactions = signal.reactions;\n\tif (reactions === null) return;\n\n\tfor (var i = 0; i < reactions.length; i++) {\n\t\tvar reaction = reactions[i];\n\t\tif ((reaction.f & DERIVED) !== 0) {\n\t\t\tschedule_possible_effect_self_invalidation(\n\t\t\t\t/** @type {Derived} */ (reaction),\n\t\t\t\teffect,\n\t\t\t\tdepth + 1\n\t\t\t);\n\t\t} else if (effect === reaction) {\n\t\t\tif (depth === 0) {\n\t\t\t\tset_signal_status(reaction, DIRTY);\n\t\t\t} else if ((reaction.f & CLEAN) !== 0) {\n\t\t\t\tset_signal_status(reaction, MAYBE_DIRTY);\n\t\t\t}\n\t\t\tschedule_effect(/** @type {Effect} */ (reaction));\n\t\t}\n\t}\n}\n\n/**\n * @template V\n * @param {Reaction} reaction\n * @returns {V}\n */\nexport function update_reaction(reaction) {\n\tvar previous_deps = new_deps;\n\tvar previous_skipped_deps = skipped_deps;\n\tvar previous_untracked_writes = untracked_writes;\n\tvar previous_reaction = active_reaction;\n\tvar previous_skip_reaction = skip_reaction;\n\tvar prev_derived_sources = derived_sources;\n\tvar previous_component_context = component_context;\n\tvar previous_untracking = untracking;\n\tvar flags = reaction.f;\n\n\tnew_deps = /** @type {null | Value[]} */ (null);\n\tskipped_deps = 0;\n\tuntracked_writes = null;\n\tactive_reaction = (flags & (BRANCH_EFFECT | ROOT_EFFECT)) === 0 ? reaction : null;\n\t// prettier-ignore\n\tskip_reaction =\n\t\t(flags & UNOWNED) !== 0 &&\n\t\t(!is_flushing_effect ||\n\t\t\t// If we were previously not in a reactive context and we're reading an unowned derived\n\t\t\t// that was created inside another reaction, then we don't fully know the real owner and thus\n\t\t\t// we need to skip adding any reactions for this unowned\n\t\t\t\t((previous_reaction === null || previous_untracking) &&\n\t\t\t\t/** @type {Derived} */ (reaction).parent !== null));\n\n\tderived_sources = null;\n\tset_component_context(reaction.ctx);\n\tuntracking = false;\n\tread_version++;\n\n\ttry {\n\t\tvar result = /** @type {Function} */ (0, reaction.fn)();\n\t\tvar deps = reaction.deps;\n\n\t\tif (new_deps !== null) {\n\t\t\tvar i;\n\n\t\t\tremove_reactions(reaction, skipped_deps);\n\n\t\t\tif (deps !== null && skipped_deps > 0) {\n\t\t\t\tdeps.length = skipped_deps + new_deps.length;\n\t\t\t\tfor (i = 0; i < new_deps.length; i++) {\n\t\t\t\t\tdeps[skipped_deps + i] = new_deps[i];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treaction.deps = deps = new_deps;\n\t\t\t}\n\n\t\t\tif (!skip_reaction) {\n\t\t\t\tfor (i = skipped_deps; i < deps.length; i++) {\n\t\t\t\t\t(deps[i].reactions ??= []).push(reaction);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (deps !== null && skipped_deps < deps.length) {\n\t\t\tremove_reactions(reaction, skipped_deps);\n\t\t\tdeps.length = skipped_deps;\n\t\t}\n\n\t\t// If we're inside an effect and we have untracked writes, then we need to\n\t\t// ensure that if any of those untracked writes result in re-invalidation\n\t\t// of the current effect, then that happens accordingly\n\t\tif (\n\t\t\tis_runes() &&\n\t\t\tuntracked_writes !== null &&\n\t\t\t(reaction.f & (DERIVED | MAYBE_DIRTY | DIRTY)) === 0\n\t\t) {\n\t\t\tfor (i = 0; i < /** @type {Source[]} */ (untracked_writes).length; i++) {\n\t\t\t\tschedule_possible_effect_self_invalidation(\n\t\t\t\t\tuntracked_writes[i],\n\t\t\t\t\t/** @type {Effect} */ (reaction)\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\t// If we are returning to an previous reaction then\n\t\t// we need to increment the read version to ensure that\n\t\t// any dependencies in this reaction aren't marked with\n\t\t// the same version\n\t\tif (previous_reaction !== null) {\n\t\t\tread_version++;\n\t\t}\n\n\t\treturn result;\n\t} finally {\n\t\tnew_deps = previous_deps;\n\t\tskipped_deps = previous_skipped_deps;\n\t\tuntracked_writes = previous_untracked_writes;\n\t\tactive_reaction = previous_reaction;\n\t\tskip_reaction = previous_skip_reaction;\n\t\tderived_sources = prev_derived_sources;\n\t\tset_component_context(previous_component_context);\n\t\tuntracking = previous_untracking;\n\t}\n}\n\n/**\n * @template V\n * @param {Reaction} signal\n * @param {Value<V>} dependency\n * @returns {void}\n */\nfunction remove_reaction(signal, dependency) {\n\tlet reactions = dependency.reactions;\n\tif (reactions !== null) {\n\t\tvar index = index_of.call(reactions, signal);\n\t\tif (index !== -1) {\n\t\t\tvar new_length = reactions.length - 1;\n\t\t\tif (new_length === 0) {\n\t\t\t\treactions = dependency.reactions = null;\n\t\t\t} else {\n\t\t\t\t// Swap with last element and then remove.\n\t\t\t\treactions[index] = reactions[new_length];\n\t\t\t\treactions.pop();\n\t\t\t}\n\t\t}\n\t}\n\t// If the derived has no reactions, then we can disconnect it from the graph,\n\t// allowing it to either reconnect in the future, or be GC'd by the VM.\n\tif (\n\t\treactions === null &&\n\t\t(dependency.f & DERIVED) !== 0 &&\n\t\t// Destroying a child effect while updating a parent effect can cause a dependency to appear\n\t\t// to be unused, when in fact it is used by the currently-updating parent. Checking `new_deps`\n\t\t// allows us to skip the expensive work of disconnecting and immediately reconnecting it\n\t\t(new_deps === null || !new_deps.includes(dependency))\n\t) {\n\t\tset_signal_status(dependency, MAYBE_DIRTY);\n\t\t// If we are working with a derived that is owned by an effect, then mark it as being\n\t\t// disconnected.\n\t\tif ((dependency.f & (UNOWNED | DISCONNECTED)) === 0) {\n\t\t\tdependency.f ^= DISCONNECTED;\n\t\t}\n\t\t// Disconnect any reactions owned by this reaction\n\t\tdestroy_derived_effects(/** @type {Derived} **/ (dependency));\n\t\tremove_reactions(/** @type {Derived} **/ (dependency), 0);\n\t}\n}\n\n/**\n * @param {Reaction} signal\n * @param {number} start_index\n * @returns {void}\n */\nexport function remove_reactions(signal, start_index) {\n\tvar dependencies = signal.deps;\n\tif (dependencies === null) return;\n\n\tfor (var i = start_index; i < dependencies.length; i++) {\n\t\tremove_reaction(signal, dependencies[i]);\n\t}\n}\n\n/**\n * @param {Effect} effect\n * @returns {void}\n */\nexport function update_effect(effect) {\n\tvar flags = effect.f;\n\n\tif ((flags & DESTROYED) !== 0) {\n\t\treturn;\n\t}\n\n\tset_signal_status(effect, CLEAN);\n\n\tvar previous_effect = active_effect;\n\tvar previous_component_context = component_context;\n\n\tactive_effect = effect;\n\n\tif (DEV) {\n\t\tvar previous_component_fn = dev_current_component_function;\n\t\tset_dev_current_component_function(effect.component_function);\n\t}\n\n\ttry {\n\t\tif ((flags & BLOCK_EFFECT) !== 0) {\n\t\t\tdestroy_block_effect_children(effect);\n\t\t} else {\n\t\t\tdestroy_effect_children(effect);\n\t\t}\n\n\t\texecute_effect_teardown(effect);\n\t\tvar teardown = update_reaction(effect);\n\t\teffect.teardown = typeof teardown === 'function' ? teardown : null;\n\t\teffect.wv = write_version;\n\n\t\tvar deps = effect.deps;\n\n\t\t// In DEV, we need to handle a case where $inspect.trace() might\n\t\t// incorrectly state a source dependency has not changed when it has.\n\t\t// That's beacuse that source was changed by the same effect, causing\n\t\t// the versions to match. We can avoid this by incrementing the version\n\t\tif (DEV && tracing_mode_flag && (effect.f & DIRTY) !== 0 && deps !== null) {\n\t\t\tfor (let i = 0; i < deps.length; i++) {\n\t\t\t\tvar dep = deps[i];\n\t\t\t\tif (dep.trace_need_increase) {\n\t\t\t\t\tdep.wv = increment_write_version();\n\t\t\t\t\tdep.trace_need_increase = undefined;\n\t\t\t\t\tdep.trace_v = undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (DEV) {\n\t\t\tdev_effect_stack.push(effect);\n\t\t}\n\t} catch (error) {\n\t\thandle_error(error, effect, previous_effect, previous_component_context || effect.ctx);\n\t} finally {\n\t\tactive_effect = previous_effect;\n\n\t\tif (DEV) {\n\t\t\tset_dev_current_component_function(previous_component_fn);\n\t\t}\n\t}\n}\n\nfunction log_effect_stack() {\n\t// eslint-disable-next-line no-console\n\tconsole.error(\n\t\t'Last ten effects were: ',\n\t\tdev_effect_stack.slice(-10).map((d) => d.fn)\n\t);\n\tdev_effect_stack = [];\n}\n\nfunction infinite_loop_guard() {\n\tif (flush_count > 1000) {\n\t\tflush_count = 0;\n\t\ttry {\n\t\t\te.effect_update_depth_exceeded();\n\t\t} catch (error) {\n\t\t\tif (DEV) {\n\t\t\t\t// stack is garbage, ignore. Instead add a console.error message.\n\t\t\t\tdefine_property(error, 'stack', {\n\t\t\t\t\tvalue: ''\n\t\t\t\t});\n\t\t\t}\n\t\t\t// Try and handle the error so it can be caught at a boundary, that's\n\t\t\t// if there's an effect available from when it was last scheduled\n\t\t\tif (last_scheduled_effect !== null) {\n\t\t\t\tif (DEV) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\thandle_error(error, last_scheduled_effect, null, null);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t// Only log the effect stack if the error is re-thrown\n\t\t\t\t\t\tlog_effect_stack();\n\t\t\t\t\t\tthrow e;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\thandle_error(error, last_scheduled_effect, null, null);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (DEV) {\n\t\t\t\t\tlog_effect_stack();\n\t\t\t\t}\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t}\n\t}\n\tflush_count++;\n}\n\n/**\n * @param {Array<Effect>} root_effects\n * @returns {void}\n */\nfunction flush_queued_root_effects(root_effects) {\n\tvar length = root_effects.length;\n\tif (length === 0) {\n\t\treturn;\n\t}\n\tinfinite_loop_guard();\n\n\tvar previously_flushing_effect = is_flushing_effect;\n\tis_flushing_effect = true;\n\n\ttry {\n\t\tfor (var i = 0; i < length; i++) {\n\t\t\tvar effect = root_effects[i];\n\n\t\t\tif ((effect.f & CLEAN) === 0) {\n\t\t\t\teffect.f ^= CLEAN;\n\t\t\t}\n\n\t\t\t/** @type {Effect[]} */\n\t\t\tvar collected_effects = [];\n\n\t\t\tprocess_effects(effect, collected_effects);\n\t\t\tflush_queued_effects(collected_effects);\n\t\t}\n\t} finally {\n\t\tis_flushing_effect = previously_flushing_effect;\n\t}\n}\n\n/**\n * @param {Array<Effect>} effects\n * @returns {void}\n */\nfunction flush_queued_effects(effects) {\n\tvar length = effects.length;\n\tif (length === 0) return;\n\n\tfor (var i = 0; i < length; i++) {\n\t\tvar effect = effects[i];\n\n\t\tif ((effect.f & (DESTROYED | INERT)) === 0) {\n\t\t\ttry {\n\t\t\t\tif (check_dirtiness(effect)) {\n\t\t\t\t\tupdate_effect(effect);\n\n\t\t\t\t\t// Effects with no dependencies or teardown do not get added to the effect tree.\n\t\t\t\t\t// Deferred effects (e.g. `$effect(...)`) _are_ added to the tree because we\n\t\t\t\t\t// don't know if we need to keep them until they are executed. Doing the check\n\t\t\t\t\t// here (rather than in `update_effect`) allows us to skip the work for\n\t\t\t\t\t// immediate effects.\n\t\t\t\t\tif (effect.deps === null && effect.first === null && effect.nodes_start === null) {\n\t\t\t\t\t\tif (effect.teardown === null) {\n\t\t\t\t\t\t\t// remove this effect from the graph\n\t\t\t\t\t\t\tunlink_effect(effect);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// keep the effect in the graph, but free up some memory\n\t\t\t\t\t\t\teffect.fn = null;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\thandle_error(error, effect, null, effect.ctx);\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction process_deferred() {\n\tis_micro_task_queued = false;\n\tif (flush_count > 1001) {\n\t\treturn;\n\t}\n\tconst previous_queued_root_effects = queued_root_effects;\n\tqueued_root_effects = [];\n\tflush_queued_root_effects(previous_queued_root_effects);\n\n\tif (!is_micro_task_queued) {\n\t\tflush_count = 0;\n\t\tlast_scheduled_effect = null;\n\t\tif (DEV) {\n\t\t\tdev_effect_stack = [];\n\t\t}\n\t}\n}\n\n/**\n * @param {Effect} signal\n * @returns {void}\n */\nexport function schedule_effect(signal) {\n\tif (scheduler_mode === FLUSH_MICROTASK) {\n\t\tif (!is_micro_task_queued) {\n\t\t\tis_micro_task_queued = true;\n\t\t\tqueueMicrotask(process_deferred);\n\t\t}\n\t}\n\n\tlast_scheduled_effect = signal;\n\n\tvar effect = signal;\n\n\twhile (effect.parent !== null) {\n\t\teffect = effect.parent;\n\t\tvar flags = effect.f;\n\n\t\tif ((flags & (ROOT_EFFECT | BRANCH_EFFECT)) !== 0) {\n\t\t\tif ((flags & CLEAN) === 0) return;\n\t\t\teffect.f ^= CLEAN;\n\t\t}\n\t}\n\n\tqueued_root_effects.push(effect);\n}\n\n/**\n *\n * This function both runs render effects and collects user effects in topological order\n * from the starting effect passed in. Effects will be collected when they match the filtered\n * bitwise flag passed in only. The collected effects array will be populated with all the user\n * effects to be flushed.\n *\n * @param {Effect} effect\n * @param {Effect[]} collected_effects\n * @returns {void}\n */\nfunction process_effects(effect, collected_effects) {\n\tvar current_effect = effect.first;\n\tvar effects = [];\n\n\tmain_loop: while (current_effect !== null) {\n\t\tvar flags = current_effect.f;\n\t\tvar is_branch = (flags & BRANCH_EFFECT) !== 0;\n\t\tvar is_skippable_branch = is_branch && (flags & CLEAN) !== 0;\n\t\tvar sibling = current_effect.next;\n\n\t\tif (!is_skippable_branch && (flags & INERT) === 0) {\n\t\t\tif ((flags & RENDER_EFFECT) !== 0) {\n\t\t\t\tif (is_branch) {\n\t\t\t\t\tcurrent_effect.f ^= CLEAN;\n\t\t\t\t} else {\n\t\t\t\t\t// Ensure we set the effect to be the active reaction\n\t\t\t\t\t// to ensure that unowned deriveds are correctly tracked\n\t\t\t\t\t// because we're flushing the current effect\n\t\t\t\t\tvar previous_active_reaction = active_reaction;\n\t\t\t\t\ttry {\n\t\t\t\t\t\tactive_reaction = current_effect;\n\t\t\t\t\t\tif (check_dirtiness(current_effect)) {\n\t\t\t\t\t\t\tupdate_effect(current_effect);\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\thandle_error(error, current_effect, null, current_effect.ctx);\n\t\t\t\t\t} finally {\n\t\t\t\t\t\tactive_reaction = previous_active_reaction;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar child = current_effect.first;\n\n\t\t\t\tif (child !== null) {\n\t\t\t\t\tcurrent_effect = child;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t} else if ((flags & EFFECT) !== 0) {\n\t\t\t\teffects.push(current_effect);\n\t\t\t}\n\t\t}\n\n\t\tif (sibling === null) {\n\t\t\tlet parent = current_effect.parent;\n\n\t\t\twhile (parent !== null) {\n\t\t\t\tif (effect === parent) {\n\t\t\t\t\tbreak main_loop;\n\t\t\t\t}\n\t\t\t\tvar parent_sibling = parent.next;\n\t\t\t\tif (parent_sibling !== null) {\n\t\t\t\t\tcurrent_effect = parent_sibling;\n\t\t\t\t\tcontinue main_loop;\n\t\t\t\t}\n\t\t\t\tparent = parent.parent;\n\t\t\t}\n\t\t}\n\n\t\tcurrent_effect = sibling;\n\t}\n\n\t// We might be dealing with many effects here, far more than can be spread into\n\t// an array push call (callstack overflow). So let's deal with each effect in a loop.\n\tfor (var i = 0; i < effects.length; i++) {\n\t\tchild = effects[i];\n\t\tcollected_effects.push(child);\n\t\tprocess_effects(child, collected_effects);\n\t}\n}\n\n/**\n * Internal version of `flushSync` with the option to not flush previous effects.\n * Returns the result of the passed function, if given.\n * @param {() => any} [fn]\n * @returns {any}\n */\nexport function flush_sync(fn) {\n\tvar previous_scheduler_mode = scheduler_mode;\n\tvar previous_queued_root_effects = queued_root_effects;\n\n\ttry {\n\t\tinfinite_loop_guard();\n\n\t\t/** @type {Effect[]} */\n\t\tconst root_effects = [];\n\n\t\tscheduler_mode = FLUSH_SYNC;\n\t\tqueued_root_effects = root_effects;\n\t\tis_micro_task_queued = false;\n\n\t\tflush_queued_root_effects(previous_queued_root_effects);\n\n\t\tvar result = fn?.();\n\n\t\tflush_tasks();\n\t\tif (queued_root_effects.length > 0 || root_effects.length > 0) {\n\t\t\tflush_sync();\n\t\t}\n\n\t\tflush_count = 0;\n\t\tlast_scheduled_effect = null;\n\t\tif (DEV) {\n\t\t\tdev_effect_stack = [];\n\t\t}\n\n\t\treturn result;\n\t} finally {\n\t\tscheduler_mode = previous_scheduler_mode;\n\t\tqueued_root_effects = previous_queued_root_effects;\n\t}\n}\n\n/**\n * Returns a promise that resolves once any pending state changes have been applied.\n * @returns {Promise<void>}\n */\nexport async function tick() {\n\tawait Promise.resolve();\n\t// By calling flush_sync we guarantee that any pending state changes are applied after one tick.\n\t// TODO look into whether we can make flushing subsequent updates synchronously in the future.\n\tflush_sync();\n}\n\n/**\n * @template V\n * @param {Value<V>} signal\n * @returns {V}\n */\nexport function get(signal) {\n\tvar flags = signal.f;\n\tvar is_derived = (flags & DERIVED) !== 0;\n\n\t// If the derived is destroyed, just execute it again without retaining\n\t// its memoisation properties as the derived is stale\n\tif (is_derived && (flags & DESTROYED) !== 0) {\n\t\tvar value = execute_derived(/** @type {Derived} */ (signal));\n\t\t// Ensure the derived remains destroyed\n\t\tdestroy_derived(/** @type {Derived} */ (signal));\n\t\treturn value;\n\t}\n\n\tif (captured_signals !== null) {\n\t\tcaptured_signals.add(signal);\n\t}\n\n\t// Register the dependency on the current reaction signal.\n\tif (active_reaction !== null && !untracking) {\n\t\tif (derived_sources !== null && derived_sources.includes(signal)) {\n\t\t\te.state_unsafe_local_read();\n\t\t}\n\t\tvar deps = active_reaction.deps;\n\t\tif (signal.rv < read_version) {\n\t\t\tsignal.rv = read_version;\n\t\t\t// If the signal is accessing the same dependencies in the same\n\t\t\t// order as it did last time, increment `skipped_deps`\n\t\t\t// rather than updating `new_deps`, which creates GC cost\n\t\t\tif (new_deps === null && deps !== null && deps[skipped_deps] === signal) {\n\t\t\t\tskipped_deps++;\n\t\t\t} else if (new_deps === null) {\n\t\t\t\tnew_deps = [signal];\n\t\t\t} else {\n\t\t\t\tnew_deps.push(signal);\n\t\t\t}\n\t\t}\n\t} else if (\n\t\tis_derived &&\n\t\t/** @type {Derived} */ (signal).deps === null &&\n\t\t/** @type {Derived} */ (signal).effects === null\n\t) {\n\t\tvar derived = /** @type {Derived} */ (signal);\n\t\tvar parent = derived.parent;\n\n\t\tif (parent !== null && (parent.f & UNOWNED) === 0) {\n\t\t\t// If the derived is owned by another derived then mark it as unowned\n\t\t\t// as the derived value might have been referenced in a different context\n\t\t\t// since and thus its parent might not be its true owner anymore\n\t\t\tderived.f ^= UNOWNED;\n\t\t}\n\t}\n\n\tif (is_derived) {\n\t\tderived = /** @type {Derived} */ (signal);\n\n\t\tif (check_dirtiness(derived)) {\n\t\t\tupdate_derived(derived);\n\t\t}\n\t}\n\n\tif (\n\t\tDEV &&\n\t\ttracing_mode_flag &&\n\t\ttracing_expressions !== null &&\n\t\tactive_reaction !== null &&\n\t\ttracing_expressions.reaction === active_reaction\n\t) {\n\t\t// Used when mapping state between special blocks like `each`\n\t\tif (signal.debug) {\n\t\t\tsignal.debug();\n\t\t} else if (signal.created) {\n\t\t\tvar entry = tracing_expressions.entries.get(signal);\n\n\t\t\tif (entry === undefined) {\n\t\t\t\tentry = { read: [] };\n\t\t\t\ttracing_expressions.entries.set(signal, entry);\n\t\t\t}\n\n\t\t\tentry.read.push(get_stack('TracedAt'));\n\t\t}\n\t}\n\n\treturn signal.v;\n}\n\n/**\n * Like `get`, but checks for `undefined`. Used for `var` declarations because they can be accessed before being declared\n * @template V\n * @param {Value<V> | undefined} signal\n * @returns {V | undefined}\n */\nexport function safe_get(signal) {\n\treturn signal && get(signal);\n}\n\n/**\n * Capture an array of all the signals that are read when `fn` is called\n * @template T\n * @param {() => T} fn\n */\nexport function capture_signals(fn) {\n\tvar previous_captured_signals = captured_signals;\n\tcaptured_signals = new Set();\n\n\tvar captured = captured_signals;\n\tvar signal;\n\n\ttry {\n\t\tuntrack(fn);\n\t\tif (previous_captured_signals !== null) {\n\t\t\tfor (signal of captured_signals) {\n\t\t\t\tprevious_captured_signals.add(signal);\n\t\t\t}\n\t\t}\n\t} finally {\n\t\tcaptured_signals = previous_captured_signals;\n\t}\n\n\treturn captured;\n}\n\n/**\n * Invokes a function and captures all signals that are read during the invocation,\n * then invalidates them.\n * @param {() => any} fn\n */\nexport function invalidate_inner_signals(fn) {\n\tvar captured = capture_signals(() => untrack(fn));\n\n\tfor (var signal of captured) {\n\t\t// Go one level up because derived signals created as part of props in legacy mode\n\t\tif ((signal.f & LEGACY_DERIVED_PROP) !== 0) {\n\t\t\tfor (const dep of /** @type {Derived} */ (signal).deps || []) {\n\t\t\t\tif ((dep.f & DERIVED) === 0) {\n\t\t\t\t\t// Use internal_set instead of set here and below to avoid mutation validation\n\t\t\t\t\tinternal_set(dep, dep.v);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tinternal_set(signal, signal.v);\n\t\t}\n\t}\n}\n\n/**\n * When used inside a [`$derived`](https://svelte.dev/docs/svelte/$derived) or [`$effect`](https://svelte.dev/docs/svelte/$effect),\n * any state read inside `fn` will not be treated as a dependency.\n *\n * ```ts\n * $effect(() => {\n *   // this will run when `data` changes, but not when `time` changes\n *   save(data, {\n *     timestamp: untrack(() => time)\n *   });\n * });\n * ```\n * @template T\n * @param {() => T} fn\n * @returns {T}\n */\nexport function untrack(fn) {\n\tvar previous_untracking = untracking;\n\ttry {\n\t\tuntracking = true;\n\t\treturn fn();\n\t} finally {\n\t\tuntracking = previous_untracking;\n\t}\n}\n\nconst STATUS_MASK = ~(DIRTY | MAYBE_DIRTY | CLEAN);\n\n/**\n * @param {Signal} signal\n * @param {number} status\n * @returns {void}\n */\nexport function set_signal_status(signal, status) {\n\tsignal.f = (signal.f & STATUS_MASK) | status;\n}\n\n/**\n * @param {Record<string, unknown>} obj\n * @param {string[]} keys\n * @returns {Record<string, unknown>}\n */\nexport function exclude_from_object(obj, keys) {\n\t/** @type {Record<string, unknown>} */\n\tvar result = {};\n\n\tfor (var key in obj) {\n\t\tif (!keys.includes(key)) {\n\t\t\tresult[key] = obj[key];\n\t\t}\n\t}\n\n\treturn result;\n}\n\n/**\n * Possibly traverse an object and read all its properties so that they're all reactive in case this is `$state`.\n * Does only check first level of an object for performance reasons (heuristic should be good for 99% of all cases).\n * @param {any} value\n * @returns {void}\n */\nexport function deep_read_state(value) {\n\tif (typeof value !== 'object' || !value || value instanceof EventTarget) {\n\t\treturn;\n\t}\n\n\tif (STATE_SYMBOL in value) {\n\t\tdeep_read(value);\n\t} else if (!Array.isArray(value)) {\n\t\tfor (let key in value) {\n\t\t\tconst prop = value[key];\n\t\t\tif (typeof prop === 'object' && prop && STATE_SYMBOL in prop) {\n\t\t\t\tdeep_read(prop);\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * Deeply traverse an object and read all its properties\n * so that they're all reactive in case this is `$state`\n * @param {any} value\n * @param {Set<any>} visited\n * @returns {void}\n */\nexport function deep_read(value, visited = new Set()) {\n\tif (\n\t\ttypeof value === 'object' &&\n\t\tvalue !== null &&\n\t\t// We don't want to traverse DOM elements\n\t\t!(value instanceof EventTarget) &&\n\t\t!visited.has(value)\n\t) {\n\t\tvisited.add(value);\n\t\t// When working with a possible SvelteDate, this\n\t\t// will ensure we capture changes to it.\n\t\tif (value instanceof Date) {\n\t\t\tvalue.getTime();\n\t\t}\n\t\tfor (let key in value) {\n\t\t\ttry {\n\t\t\t\tdeep_read(value[key], visited);\n\t\t\t} catch (e) {\n\t\t\t\t// continue\n\t\t\t}\n\t\t}\n\t\tconst proto = get_prototype_of(value);\n\t\tif (\n\t\t\tproto !== Object.prototype &&\n\t\t\tproto !== Array.prototype &&\n\t\t\tproto !== Map.prototype &&\n\t\t\tproto !== Set.prototype &&\n\t\t\tproto !== Date.prototype\n\t\t) {\n\t\t\tconst descriptors = get_descriptors(proto);\n\t\t\tfor (let key in descriptors) {\n\t\t\t\tconst get = descriptors[key].get;\n\t\t\t\tif (get) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tget.call(value);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t// continue\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n","/* This file is generated by scripts/process-messages/index.js. Do not edit! */\n\nimport { DEV } from 'esm-env';\n\n/**\n * Using `bind:value` together with a checkbox input is not allowed. Use `bind:checked` instead\n * @returns {never}\n */\nexport function bind_invalid_checkbox_value() {\n\tif (DEV) {\n\t\tconst error = new Error(`bind_invalid_checkbox_value\\nUsing \\`bind:value\\` together with a checkbox input is not allowed. Use \\`bind:checked\\` instead\\nhttps://svelte.dev/e/bind_invalid_checkbox_value`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/bind_invalid_checkbox_value`);\n\t}\n}\n\n/**\n * Component %component% has an export named `%key%` that a consumer component is trying to access using `bind:%key%`, which is disallowed. Instead, use `bind:this` (e.g. `<%name% bind:this={component} />`) and then access the property on the bound component instance (e.g. `component.%key%`)\n * @param {string} component\n * @param {string} key\n * @param {string} name\n * @returns {never}\n */\nexport function bind_invalid_export(component, key, name) {\n\tif (DEV) {\n\t\tconst error = new Error(`bind_invalid_export\\nComponent ${component} has an export named \\`${key}\\` that a consumer component is trying to access using \\`bind:${key}\\`, which is disallowed. Instead, use \\`bind:this\\` (e.g. \\`<${name} bind:this={component} />\\`) and then access the property on the bound component instance (e.g. \\`component.${key}\\`)\\nhttps://svelte.dev/e/bind_invalid_export`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/bind_invalid_export`);\n\t}\n}\n\n/**\n * A component is attempting to bind to a non-bindable property `%key%` belonging to %component% (i.e. `<%name% bind:%key%={...}>`). To mark a property as bindable: `let { %key% = $bindable() } = $props()`\n * @param {string} key\n * @param {string} component\n * @param {string} name\n * @returns {never}\n */\nexport function bind_not_bindable(key, component, name) {\n\tif (DEV) {\n\t\tconst error = new Error(`bind_not_bindable\\nA component is attempting to bind to a non-bindable property \\`${key}\\` belonging to ${component} (i.e. \\`<${name} bind:${key}={...}>\\`). To mark a property as bindable: \\`let { ${key} = $bindable() } = $props()\\`\\nhttps://svelte.dev/e/bind_not_bindable`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/bind_not_bindable`);\n\t}\n}\n\n/**\n * %parent% called `%method%` on an instance of %component%, which is no longer valid in Svelte 5\n * @param {string} parent\n * @param {string} method\n * @param {string} component\n * @returns {never}\n */\nexport function component_api_changed(parent, method, component) {\n\tif (DEV) {\n\t\tconst error = new Error(`component_api_changed\\n${parent} called \\`${method}\\` on an instance of ${component}, which is no longer valid in Svelte 5\\nhttps://svelte.dev/e/component_api_changed`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/component_api_changed`);\n\t}\n}\n\n/**\n * Attempted to instantiate %component% with `new %name%`, which is no longer valid in Svelte 5. If this component is not under your control, set the `compatibility.componentApi` compiler option to `4` to keep it working.\n * @param {string} component\n * @param {string} name\n * @returns {never}\n */\nexport function component_api_invalid_new(component, name) {\n\tif (DEV) {\n\t\tconst error = new Error(`component_api_invalid_new\\nAttempted to instantiate ${component} with \\`new ${name}\\`, which is no longer valid in Svelte 5. If this component is not under your control, set the \\`compatibility.componentApi\\` compiler option to \\`4\\` to keep it working.\\nhttps://svelte.dev/e/component_api_invalid_new`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/component_api_invalid_new`);\n\t}\n}\n\n/**\n * A derived value cannot reference itself recursively\n * @returns {never}\n */\nexport function derived_references_self() {\n\tif (DEV) {\n\t\tconst error = new Error(`derived_references_self\\nA derived value cannot reference itself recursively\\nhttps://svelte.dev/e/derived_references_self`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/derived_references_self`);\n\t}\n}\n\n/**\n * Keyed each block has duplicate key `%value%` at indexes %a% and %b%\n * @param {string} a\n * @param {string} b\n * @param {string | undefined | null} [value]\n * @returns {never}\n */\nexport function each_key_duplicate(a, b, value) {\n\tif (DEV) {\n\t\tconst error = new Error(`each_key_duplicate\\n${value ? `Keyed each block has duplicate key \\`${value}\\` at indexes ${a} and ${b}` : `Keyed each block has duplicate key at indexes ${a} and ${b}`}\\nhttps://svelte.dev/e/each_key_duplicate`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/each_key_duplicate`);\n\t}\n}\n\n/**\n * `%rune%` cannot be used inside an effect cleanup function\n * @param {string} rune\n * @returns {never}\n */\nexport function effect_in_teardown(rune) {\n\tif (DEV) {\n\t\tconst error = new Error(`effect_in_teardown\\n\\`${rune}\\` cannot be used inside an effect cleanup function\\nhttps://svelte.dev/e/effect_in_teardown`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/effect_in_teardown`);\n\t}\n}\n\n/**\n * Effect cannot be created inside a `$derived` value that was not itself created inside an effect\n * @returns {never}\n */\nexport function effect_in_unowned_derived() {\n\tif (DEV) {\n\t\tconst error = new Error(`effect_in_unowned_derived\\nEffect cannot be created inside a \\`$derived\\` value that was not itself created inside an effect\\nhttps://svelte.dev/e/effect_in_unowned_derived`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/effect_in_unowned_derived`);\n\t}\n}\n\n/**\n * `%rune%` can only be used inside an effect (e.g. during component initialisation)\n * @param {string} rune\n * @returns {never}\n */\nexport function effect_orphan(rune) {\n\tif (DEV) {\n\t\tconst error = new Error(`effect_orphan\\n\\`${rune}\\` can only be used inside an effect (e.g. during component initialisation)\\nhttps://svelte.dev/e/effect_orphan`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/effect_orphan`);\n\t}\n}\n\n/**\n * Maximum update depth exceeded. This can happen when a reactive block or effect repeatedly sets a new value. Svelte limits the number of nested updates to prevent infinite loops\n * @returns {never}\n */\nexport function effect_update_depth_exceeded() {\n\tif (DEV) {\n\t\tconst error = new Error(`effect_update_depth_exceeded\\nMaximum update depth exceeded. This can happen when a reactive block or effect repeatedly sets a new value. Svelte limits the number of nested updates to prevent infinite loops\\nhttps://svelte.dev/e/effect_update_depth_exceeded`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/effect_update_depth_exceeded`);\n\t}\n}\n\n/**\n * Failed to hydrate the application\n * @returns {never}\n */\nexport function hydration_failed() {\n\tif (DEV) {\n\t\tconst error = new Error(`hydration_failed\\nFailed to hydrate the application\\nhttps://svelte.dev/e/hydration_failed`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/hydration_failed`);\n\t}\n}\n\n/**\n * Could not `{@render}` snippet due to the expression being `null` or `undefined`. Consider using optional chaining `{@render snippet?.()}`\n * @returns {never}\n */\nexport function invalid_snippet() {\n\tif (DEV) {\n\t\tconst error = new Error(`invalid_snippet\\nCould not \\`{@render}\\` snippet due to the expression being \\`null\\` or \\`undefined\\`. Consider using optional chaining \\`{@render snippet?.()}\\`\\nhttps://svelte.dev/e/invalid_snippet`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/invalid_snippet`);\n\t}\n}\n\n/**\n * `%name%(...)` cannot be used in runes mode\n * @param {string} name\n * @returns {never}\n */\nexport function lifecycle_legacy_only(name) {\n\tif (DEV) {\n\t\tconst error = new Error(`lifecycle_legacy_only\\n\\`${name}(...)\\` cannot be used in runes mode\\nhttps://svelte.dev/e/lifecycle_legacy_only`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/lifecycle_legacy_only`);\n\t}\n}\n\n/**\n * Cannot do `bind:%key%={undefined}` when `%key%` has a fallback value\n * @param {string} key\n * @returns {never}\n */\nexport function props_invalid_value(key) {\n\tif (DEV) {\n\t\tconst error = new Error(`props_invalid_value\\nCannot do \\`bind:${key}={undefined}\\` when \\`${key}\\` has a fallback value\\nhttps://svelte.dev/e/props_invalid_value`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/props_invalid_value`);\n\t}\n}\n\n/**\n * Rest element properties of `$props()` such as `%property%` are readonly\n * @param {string} property\n * @returns {never}\n */\nexport function props_rest_readonly(property) {\n\tif (DEV) {\n\t\tconst error = new Error(`props_rest_readonly\\nRest element properties of \\`$props()\\` such as \\`${property}\\` are readonly\\nhttps://svelte.dev/e/props_rest_readonly`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/props_rest_readonly`);\n\t}\n}\n\n/**\n * The `%rune%` rune is only available inside `.svelte` and `.svelte.js/ts` files\n * @param {string} rune\n * @returns {never}\n */\nexport function rune_outside_svelte(rune) {\n\tif (DEV) {\n\t\tconst error = new Error(`rune_outside_svelte\\nThe \\`${rune}\\` rune is only available inside \\`.svelte\\` and \\`.svelte.js/ts\\` files\\nhttps://svelte.dev/e/rune_outside_svelte`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/rune_outside_svelte`);\n\t}\n}\n\n/**\n * Property descriptors defined on `$state` objects must contain `value` and always be `enumerable`, `configurable` and `writable`.\n * @returns {never}\n */\nexport function state_descriptors_fixed() {\n\tif (DEV) {\n\t\tconst error = new Error(`state_descriptors_fixed\\nProperty descriptors defined on \\`$state\\` objects must contain \\`value\\` and always be \\`enumerable\\`, \\`configurable\\` and \\`writable\\`.\\nhttps://svelte.dev/e/state_descriptors_fixed`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/state_descriptors_fixed`);\n\t}\n}\n\n/**\n * Cannot set prototype of `$state` object\n * @returns {never}\n */\nexport function state_prototype_fixed() {\n\tif (DEV) {\n\t\tconst error = new Error(`state_prototype_fixed\\nCannot set prototype of \\`$state\\` object\\nhttps://svelte.dev/e/state_prototype_fixed`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/state_prototype_fixed`);\n\t}\n}\n\n/**\n * Reading state that was created inside the same derived is forbidden. Consider using `untrack` to read locally created state\n * @returns {never}\n */\nexport function state_unsafe_local_read() {\n\tif (DEV) {\n\t\tconst error = new Error(`state_unsafe_local_read\\nReading state that was created inside the same derived is forbidden. Consider using \\`untrack\\` to read locally created state\\nhttps://svelte.dev/e/state_unsafe_local_read`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/state_unsafe_local_read`);\n\t}\n}\n\n/**\n * Updating state inside a derived or a template expression is forbidden. If the value should not be reactive, declare it without `$state`\n * @returns {never}\n */\nexport function state_unsafe_mutation() {\n\tif (DEV) {\n\t\tconst error = new Error(`state_unsafe_mutation\\nUpdating state inside a derived or a template expression is forbidden. If the value should not be reactive, declare it without \\`$state\\`\\nhttps://svelte.dev/e/state_unsafe_mutation`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/state_unsafe_mutation`);\n\t}\n}","/** @import { ProxyMetadata, Source } from '#client' */\nimport { DEV } from 'esm-env';\nimport { get, active_effect } from './runtime.js';\nimport { component_context } from './context.js';\nimport {\n\tarray_prototype,\n\tget_descriptor,\n\tget_prototype_of,\n\tis_array,\n\tobject_prototype\n} from '../shared/utils.js';\nimport { check_ownership, widen_ownership } from './dev/ownership.js';\nimport { source, set } from './reactivity/sources.js';\nimport { STATE_SYMBOL, STATE_SYMBOL_METADATA } from './constants.js';\nimport { UNINITIALIZED } from '../../constants.js';\nimport * as e from './errors.js';\nimport { get_stack } from './dev/tracing.js';\nimport { tracing_mode_flag } from '../flags/index.js';\n\n/**\n * @template T\n * @param {T} value\n * @param {ProxyMetadata | null} [parent]\n * @param {Source<T>} [prev] dev mode only\n * @returns {T}\n */\nexport function proxy(value, parent = null, prev) {\n\t/** @type {Error | null} */\n\tvar stack = null;\n\tif (DEV && tracing_mode_flag) {\n\t\tstack = get_stack('CreatedAt');\n\t}\n\t// if non-proxyable, or is already a proxy, return `value`\n\tif (typeof value !== 'object' || value === null || STATE_SYMBOL in value) {\n\t\treturn value;\n\t}\n\n\tconst prototype = get_prototype_of(value);\n\n\tif (prototype !== object_prototype && prototype !== array_prototype) {\n\t\treturn value;\n\t}\n\n\t/** @type {Map<any, Source<any>>} */\n\tvar sources = new Map();\n\tvar is_proxied_array = is_array(value);\n\tvar version = source(0);\n\n\tif (is_proxied_array) {\n\t\t// We need to create the length source eagerly to ensure that\n\t\t// mutations to the array are properly synced with our proxy\n\t\tsources.set('length', source(/** @type {any[]} */ (value).length, stack));\n\t}\n\n\t/** @type {ProxyMetadata} */\n\tvar metadata;\n\n\tif (DEV) {\n\t\tmetadata = {\n\t\t\tparent,\n\t\t\towners: null\n\t\t};\n\n\t\tif (prev) {\n\t\t\t// Reuse owners from previous state; necessary because reassignment is not guaranteed to have correct component context.\n\t\t\t// If no previous proxy exists we play it safe and assume ownerless state\n\t\t\t// @ts-expect-error\n\t\t\tconst prev_owners = prev.v?.[STATE_SYMBOL_METADATA]?.owners;\n\t\t\tmetadata.owners = prev_owners ? new Set(prev_owners) : null;\n\t\t} else {\n\t\t\tmetadata.owners =\n\t\t\t\tparent === null\n\t\t\t\t\t? component_context !== null\n\t\t\t\t\t\t? new Set([component_context.function])\n\t\t\t\t\t\t: null\n\t\t\t\t\t: new Set();\n\t\t}\n\t}\n\n\treturn new Proxy(/** @type {any} */ (value), {\n\t\tdefineProperty(_, prop, descriptor) {\n\t\t\tif (\n\t\t\t\t!('value' in descriptor) ||\n\t\t\t\tdescriptor.configurable === false ||\n\t\t\t\tdescriptor.enumerable === false ||\n\t\t\t\tdescriptor.writable === false\n\t\t\t) {\n\t\t\t\t// we disallow non-basic descriptors, because unless they are applied to the\n\t\t\t\t// target object — which we avoid, so that state can be forked — we will run\n\t\t\t\t// afoul of the various invariants\n\t\t\t\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/Proxy/getOwnPropertyDescriptor#invariants\n\t\t\t\te.state_descriptors_fixed();\n\t\t\t}\n\n\t\t\tvar s = sources.get(prop);\n\n\t\t\tif (s === undefined) {\n\t\t\t\ts = source(descriptor.value, stack);\n\t\t\t\tsources.set(prop, s);\n\t\t\t} else {\n\t\t\t\tset(s, proxy(descriptor.value, metadata));\n\t\t\t}\n\n\t\t\treturn true;\n\t\t},\n\n\t\tdeleteProperty(target, prop) {\n\t\t\tvar s = sources.get(prop);\n\n\t\t\tif (s === undefined) {\n\t\t\t\tif (prop in target) {\n\t\t\t\t\tsources.set(prop, source(UNINITIALIZED, stack));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// When working with arrays, we need to also ensure we update the length when removing\n\t\t\t\t// an indexed property\n\t\t\t\tif (is_proxied_array && typeof prop === 'string') {\n\t\t\t\t\tvar ls = /** @type {Source<number>} */ (sources.get('length'));\n\t\t\t\t\tvar n = Number(prop);\n\n\t\t\t\t\tif (Number.isInteger(n) && n < ls.v) {\n\t\t\t\t\t\tset(ls, n);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tset(s, UNINITIALIZED);\n\t\t\t\tupdate_version(version);\n\t\t\t}\n\n\t\t\treturn true;\n\t\t},\n\n\t\tget(target, prop, receiver) {\n\t\t\tif (DEV && prop === STATE_SYMBOL_METADATA) {\n\t\t\t\treturn metadata;\n\t\t\t}\n\n\t\t\tif (prop === STATE_SYMBOL) {\n\t\t\t\treturn value;\n\t\t\t}\n\n\t\t\tvar s = sources.get(prop);\n\t\t\tvar exists = prop in target;\n\n\t\t\t// create a source, but only if it's an own property and not a prototype property\n\t\t\tif (s === undefined && (!exists || get_descriptor(target, prop)?.writable)) {\n\t\t\t\ts = source(proxy(exists ? target[prop] : UNINITIALIZED, metadata), stack);\n\t\t\t\tsources.set(prop, s);\n\t\t\t}\n\n\t\t\tif (s !== undefined) {\n\t\t\t\tvar v = get(s);\n\n\t\t\t\t// In case of something like `foo = bar.map(...)`, foo would have ownership\n\t\t\t\t// of the array itself, while the individual items would have ownership\n\t\t\t\t// of the component that created bar. That means if we later do `foo[0].baz = 42`,\n\t\t\t\t// we could get a false-positive ownership violation, since the two proxies\n\t\t\t\t// are not connected to each other via the parent metadata relationship.\n\t\t\t\t// For this reason, we need to widen the ownership of the children\n\t\t\t\t// upon access when we detect they are not connected.\n\t\t\t\tif (DEV) {\n\t\t\t\t\t/** @type {ProxyMetadata | undefined} */\n\t\t\t\t\tvar prop_metadata = v?.[STATE_SYMBOL_METADATA];\n\t\t\t\t\tif (prop_metadata && prop_metadata?.parent !== metadata) {\n\t\t\t\t\t\twiden_ownership(metadata, prop_metadata);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn v === UNINITIALIZED ? undefined : v;\n\t\t\t}\n\n\t\t\treturn Reflect.get(target, prop, receiver);\n\t\t},\n\n\t\tgetOwnPropertyDescriptor(target, prop) {\n\t\t\tvar descriptor = Reflect.getOwnPropertyDescriptor(target, prop);\n\n\t\t\tif (descriptor && 'value' in descriptor) {\n\t\t\t\tvar s = sources.get(prop);\n\t\t\t\tif (s) descriptor.value = get(s);\n\t\t\t} else if (descriptor === undefined) {\n\t\t\t\tvar source = sources.get(prop);\n\t\t\t\tvar value = source?.v;\n\n\t\t\t\tif (source !== undefined && value !== UNINITIALIZED) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tenumerable: true,\n\t\t\t\t\t\tconfigurable: true,\n\t\t\t\t\t\tvalue,\n\t\t\t\t\t\twritable: true\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn descriptor;\n\t\t},\n\n\t\thas(target, prop) {\n\t\t\tif (DEV && prop === STATE_SYMBOL_METADATA) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tif (prop === STATE_SYMBOL) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tvar s = sources.get(prop);\n\t\t\tvar has = (s !== undefined && s.v !== UNINITIALIZED) || Reflect.has(target, prop);\n\n\t\t\tif (\n\t\t\t\ts !== undefined ||\n\t\t\t\t(active_effect !== null && (!has || get_descriptor(target, prop)?.writable))\n\t\t\t) {\n\t\t\t\tif (s === undefined) {\n\t\t\t\t\ts = source(has ? proxy(target[prop], metadata) : UNINITIALIZED, stack);\n\t\t\t\t\tsources.set(prop, s);\n\t\t\t\t}\n\n\t\t\t\tvar value = get(s);\n\t\t\t\tif (value === UNINITIALIZED) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn has;\n\t\t},\n\n\t\tset(target, prop, value, receiver) {\n\t\t\tvar s = sources.get(prop);\n\t\t\tvar has = prop in target;\n\n\t\t\t// variable.length = value -> clear all signals with index >= value\n\t\t\tif (is_proxied_array && prop === 'length') {\n\t\t\t\tfor (var i = value; i < /** @type {Source<number>} */ (s).v; i += 1) {\n\t\t\t\t\tvar other_s = sources.get(i + '');\n\t\t\t\t\tif (other_s !== undefined) {\n\t\t\t\t\t\tset(other_s, UNINITIALIZED);\n\t\t\t\t\t} else if (i in target) {\n\t\t\t\t\t\t// If the item exists in the original, we need to create a uninitialized source,\n\t\t\t\t\t\t// else a later read of the property would result in a source being created with\n\t\t\t\t\t\t// the value of the original item at that index.\n\t\t\t\t\t\tother_s = source(UNINITIALIZED, stack);\n\t\t\t\t\t\tsources.set(i + '', other_s);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// If we haven't yet created a source for this property, we need to ensure\n\t\t\t// we do so otherwise if we read it later, then the write won't be tracked and\n\t\t\t// the heuristics of effects will be different vs if we had read the proxied\n\t\t\t// object property before writing to that property.\n\t\t\tif (s === undefined) {\n\t\t\t\tif (!has || get_descriptor(target, prop)?.writable) {\n\t\t\t\t\ts = source(undefined, stack);\n\t\t\t\t\tset(s, proxy(value, metadata));\n\t\t\t\t\tsources.set(prop, s);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\thas = s.v !== UNINITIALIZED;\n\t\t\t\tset(s, proxy(value, metadata));\n\t\t\t}\n\n\t\t\tif (DEV) {\n\t\t\t\t/** @type {ProxyMetadata | undefined} */\n\t\t\t\tvar prop_metadata = value?.[STATE_SYMBOL_METADATA];\n\t\t\t\tif (prop_metadata && prop_metadata?.parent !== metadata) {\n\t\t\t\t\twiden_ownership(metadata, prop_metadata);\n\t\t\t\t}\n\t\t\t\tcheck_ownership(metadata);\n\t\t\t}\n\n\t\t\tvar descriptor = Reflect.getOwnPropertyDescriptor(target, prop);\n\n\t\t\t// Set the new value before updating any signals so that any listeners get the new value\n\t\t\tif (descriptor?.set) {\n\t\t\t\tdescriptor.set.call(receiver, value);\n\t\t\t}\n\n\t\t\tif (!has) {\n\t\t\t\t// If we have mutated an array directly, we might need to\n\t\t\t\t// signal that length has also changed. Do it before updating metadata\n\t\t\t\t// to ensure that iterating over the array as a result of a metadata update\n\t\t\t\t// will not cause the length to be out of sync.\n\t\t\t\tif (is_proxied_array && typeof prop === 'string') {\n\t\t\t\t\tvar ls = /** @type {Source<number>} */ (sources.get('length'));\n\t\t\t\t\tvar n = Number(prop);\n\n\t\t\t\t\tif (Number.isInteger(n) && n >= ls.v) {\n\t\t\t\t\t\tset(ls, n + 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tupdate_version(version);\n\t\t\t}\n\n\t\t\treturn true;\n\t\t},\n\n\t\townKeys(target) {\n\t\t\tget(version);\n\n\t\t\tvar own_keys = Reflect.ownKeys(target).filter((key) => {\n\t\t\t\tvar source = sources.get(key);\n\t\t\t\treturn source === undefined || source.v !== UNINITIALIZED;\n\t\t\t});\n\n\t\t\tfor (var [key, source] of sources) {\n\t\t\t\tif (source.v !== UNINITIALIZED && !(key in target)) {\n\t\t\t\t\town_keys.push(key);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn own_keys;\n\t\t},\n\n\t\tsetPrototypeOf() {\n\t\t\te.state_prototype_fixed();\n\t\t}\n\t});\n}\n\n/**\n * @param {Source<number>} signal\n * @param {1 | -1} [d]\n */\nfunction update_version(signal, d = 1) {\n\tset(signal, signal.v + d);\n}\n\n/**\n * @param {any} value\n */\nexport function get_proxied_value(value) {\n\tif (value !== null && typeof value === 'object' && STATE_SYMBOL in value) {\n\t\treturn value[STATE_SYMBOL];\n\t}\n\n\treturn value;\n}\n\n/**\n * @param {any} a\n * @param {any} b\n */\nexport function is(a, b) {\n\treturn Object.is(get_proxied_value(a), get_proxied_value(b));\n}\n","/** @import { TemplateNode } from '#client' */\nimport { hydrate_node, hydrating, set_hydrate_node } from './hydration.js';\nimport { DEV } from 'esm-env';\nimport { init_array_prototype_warnings } from '../dev/equality.js';\nimport { get_descriptor } from '../../shared/utils.js';\n\n// export these for reference in the compiled code, making global name deduplication unnecessary\n/** @type {Window} */\nexport var $window;\n\n/** @type {Document} */\nexport var $document;\n\n/** @type {() => Node | null} */\nvar first_child_getter;\n/** @type {() => Node | null} */\nvar next_sibling_getter;\n\n/**\n * Initialize these lazily to avoid issues when using the runtime in a server context\n * where these globals are not available while avoiding a separate server entry point\n */\nexport function init_operations() {\n\tif ($window !== undefined) {\n\t\treturn;\n\t}\n\n\t$window = window;\n\t$document = document;\n\n\tvar element_prototype = Element.prototype;\n\tvar node_prototype = Node.prototype;\n\n\t// @ts-ignore\n\tfirst_child_getter = get_descriptor(node_prototype, 'firstChild').get;\n\t// @ts-ignore\n\tnext_sibling_getter = get_descriptor(node_prototype, 'nextSibling').get;\n\n\t// the following assignments improve perf of lookups on DOM nodes\n\t// @ts-expect-error\n\telement_prototype.__click = undefined;\n\t// @ts-expect-error\n\telement_prototype.__className = '';\n\t// @ts-expect-error\n\telement_prototype.__attributes = null;\n\t// @ts-expect-error\n\telement_prototype.__styles = null;\n\t// @ts-expect-error\n\telement_prototype.__e = undefined;\n\n\t// @ts-expect-error\n\tText.prototype.__t = undefined;\n\n\tif (DEV) {\n\t\t// @ts-expect-error\n\t\telement_prototype.__svelte_meta = null;\n\n\t\tinit_array_prototype_warnings();\n\t}\n}\n\n/**\n * @param {string} value\n * @returns {Text}\n */\nexport function create_text(value = '') {\n\treturn document.createTextNode(value);\n}\n\n/**\n * @template {Node} N\n * @param {N} node\n * @returns {Node | null}\n */\n/*@__NO_SIDE_EFFECTS__*/\nexport function get_first_child(node) {\n\treturn first_child_getter.call(node);\n}\n\n/**\n * @template {Node} N\n * @param {N} node\n * @returns {Node | null}\n */\n/*@__NO_SIDE_EFFECTS__*/\nexport function get_next_sibling(node) {\n\treturn next_sibling_getter.call(node);\n}\n\n/**\n * Don't mark this as side-effect-free, hydration needs to walk all nodes\n * @template {Node} N\n * @param {N} node\n * @param {boolean} is_text\n * @returns {Node | null}\n */\nexport function child(node, is_text) {\n\tif (!hydrating) {\n\t\treturn get_first_child(node);\n\t}\n\n\tvar child = /** @type {TemplateNode} */ (get_first_child(hydrate_node));\n\n\t// Child can be null if we have an element with a single child, like `<p>{text}</p>`, where `text` is empty\n\tif (child === null) {\n\t\tchild = hydrate_node.appendChild(create_text());\n\t} else if (is_text && child.nodeType !== 3) {\n\t\tvar text = create_text();\n\t\tchild?.before(text);\n\t\tset_hydrate_node(text);\n\t\treturn text;\n\t}\n\n\tset_hydrate_node(child);\n\treturn child;\n}\n\n/**\n * Don't mark this as side-effect-free, hydration needs to walk all nodes\n * @param {DocumentFragment | TemplateNode[]} fragment\n * @param {boolean} is_text\n * @returns {Node | null}\n */\nexport function first_child(fragment, is_text) {\n\tif (!hydrating) {\n\t\t// when not hydrating, `fragment` is a `DocumentFragment` (the result of calling `open_frag`)\n\t\tvar first = /** @type {DocumentFragment} */ (get_first_child(/** @type {Node} */ (fragment)));\n\n\t\t// TODO prevent user comments with the empty string when preserveComments is true\n\t\tif (first instanceof Comment && first.data === '') return get_next_sibling(first);\n\n\t\treturn first;\n\t}\n\n\t// if an {expression} is empty during SSR, there might be no\n\t// text node to hydrate — we must therefore create one\n\tif (is_text && hydrate_node?.nodeType !== 3) {\n\t\tvar text = create_text();\n\n\t\thydrate_node?.before(text);\n\t\tset_hydrate_node(text);\n\t\treturn text;\n\t}\n\n\treturn hydrate_node;\n}\n\n/**\n * Don't mark this as side-effect-free, hydration needs to walk all nodes\n * @param {TemplateNode} node\n * @param {number} count\n * @param {boolean} is_text\n * @returns {Node | null}\n */\nexport function sibling(node, count = 1, is_text = false) {\n\tlet next_sibling = hydrating ? hydrate_node : node;\n\tvar last_sibling;\n\n\twhile (count--) {\n\t\tlast_sibling = next_sibling;\n\t\tnext_sibling = /** @type {TemplateNode} */ (get_next_sibling(next_sibling));\n\t}\n\n\tif (!hydrating) {\n\t\treturn next_sibling;\n\t}\n\n\tvar type = next_sibling?.nodeType;\n\n\t// if a sibling {expression} is empty during SSR, there might be no\n\t// text node to hydrate — we must therefore create one\n\tif (is_text && type !== 3) {\n\t\tvar text = create_text();\n\t\t// If the next sibling is `null` and we're handling text then it's because\n\t\t// the SSR content was empty for the text, so we need to generate a new text\n\t\t// node and insert it after the last sibling\n\t\tif (next_sibling === null) {\n\t\t\tlast_sibling?.after(text);\n\t\t} else {\n\t\t\tnext_sibling.before(text);\n\t\t}\n\t\tset_hydrate_node(text);\n\t\treturn text;\n\t}\n\n\tset_hydrate_node(next_sibling);\n\treturn /** @type {TemplateNode} */ (next_sibling);\n}\n\n/**\n * @template {Node} N\n * @param {N} node\n * @returns {void}\n */\nexport function clear_text_content(node) {\n\tnode.textContent = '';\n}\n","import * as w from '../warnings.js';\nimport { get_proxied_value } from '../proxy.js';\n\nexport function init_array_prototype_warnings() {\n\tconst array_prototype = Array.prototype;\n\t// The REPL ends up here over and over, and this prevents it from adding more and more patches\n\t// of the same kind to the prototype, which would slow down everything over time.\n\t// @ts-expect-error\n\tconst cleanup = Array.__svelte_cleanup;\n\tif (cleanup) {\n\t\tcleanup();\n\t}\n\n\tconst { indexOf, lastIndexOf, includes } = array_prototype;\n\n\tarray_prototype.indexOf = function (item, from_index) {\n\t\tconst index = indexOf.call(this, item, from_index);\n\n\t\tif (index === -1) {\n\t\t\tfor (let i = from_index ?? 0; i < this.length; i += 1) {\n\t\t\t\tif (get_proxied_value(this[i]) === item) {\n\t\t\t\t\tw.state_proxy_equality_mismatch('array.indexOf(...)');\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn index;\n\t};\n\n\tarray_prototype.lastIndexOf = function (item, from_index) {\n\t\t// we need to specify this.length - 1 because it's probably using something like\n\t\t// `arguments` inside so passing undefined is different from not passing anything\n\t\tconst index = lastIndexOf.call(this, item, from_index ?? this.length - 1);\n\n\t\tif (index === -1) {\n\t\t\tfor (let i = 0; i <= (from_index ?? this.length - 1); i += 1) {\n\t\t\t\tif (get_proxied_value(this[i]) === item) {\n\t\t\t\t\tw.state_proxy_equality_mismatch('array.lastIndexOf(...)');\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn index;\n\t};\n\n\tarray_prototype.includes = function (item, from_index) {\n\t\tconst has = includes.call(this, item, from_index);\n\n\t\tif (!has) {\n\t\t\tfor (let i = 0; i < this.length; i += 1) {\n\t\t\t\tif (get_proxied_value(this[i]) === item) {\n\t\t\t\t\tw.state_proxy_equality_mismatch('array.includes(...)');\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn has;\n\t};\n\n\t// @ts-expect-error\n\tArray.__svelte_cleanup = () => {\n\t\tarray_prototype.indexOf = indexOf;\n\t\tarray_prototype.lastIndexOf = lastIndexOf;\n\t\tarray_prototype.includes = includes;\n\t};\n}\n\n/**\n * @param {any} a\n * @param {any} b\n * @param {boolean} equal\n * @returns {boolean}\n */\nexport function strict_equals(a, b, equal = true) {\n\t// try-catch needed because this tries to read properties of `a` and `b`,\n\t// which could be disallowed for example in a secure context\n\ttry {\n\t\tif ((a === b) !== (get_proxied_value(a) === get_proxied_value(b))) {\n\t\t\tw.state_proxy_equality_mismatch(equal ? '===' : '!==');\n\t\t}\n\t} catch {}\n\n\treturn (a === b) === equal;\n}\n\n/**\n * @param {any} a\n * @param {any} b\n * @param {boolean} equal\n * @returns {boolean}\n */\nexport function equals(a, b, equal = true) {\n\tif ((a == b) !== (get_proxied_value(a) == get_proxied_value(b))) {\n\t\tw.state_proxy_equality_mismatch(equal ? '==' : '!=');\n\t}\n\n\treturn (a == b) === equal;\n}\n","/** @import { Derived, Effect } from '#client' */\nimport { DEV } from 'esm-env';\nimport {\n\tCLEAN,\n\tDERIVED,\n\tDESTROYED,\n\tDIRTY,\n\tEFFECT_HAS_DERIVED,\n\tMAYBE_DIRTY,\n\tUNOWNED\n} from '../constants.js';\nimport {\n\tactive_reaction,\n\tactive_effect,\n\tremove_reactions,\n\tset_signal_status,\n\tskip_reaction,\n\tupdate_reaction,\n\tincrement_write_version,\n\tset_active_effect\n} from '../runtime.js';\nimport { equals, safe_equals } from './equality.js';\nimport * as e from '../errors.js';\nimport { destroy_effect } from './effects.js';\nimport { inspect_effects, set_inspect_effects } from './sources.js';\nimport { get_stack } from '../dev/tracing.js';\nimport { tracing_mode_flag } from '../../flags/index.js';\nimport { component_context } from '../context.js';\n\n/**\n * @template V\n * @param {() => V} fn\n * @returns {Derived<V>}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function derived(fn) {\n\tvar flags = DERIVED | DIRTY;\n\tvar parent_derived =\n\t\tactive_reaction !== null && (active_reaction.f & DERIVED) !== 0\n\t\t\t? /** @type {Derived} */ (active_reaction)\n\t\t\t: null;\n\n\tif (active_effect === null || (parent_derived !== null && (parent_derived.f & UNOWNED) !== 0)) {\n\t\tflags |= UNOWNED;\n\t} else {\n\t\t// Since deriveds are evaluated lazily, any effects created inside them are\n\t\t// created too late to ensure that the parent effect is added to the tree\n\t\tactive_effect.f |= EFFECT_HAS_DERIVED;\n\t}\n\n\t/** @type {Derived<V>} */\n\tconst signal = {\n\t\tctx: component_context,\n\t\tdeps: null,\n\t\teffects: null,\n\t\tequals,\n\t\tf: flags,\n\t\tfn,\n\t\treactions: null,\n\t\trv: 0,\n\t\tv: /** @type {V} */ (null),\n\t\twv: 0,\n\t\tparent: parent_derived ?? active_effect\n\t};\n\n\tif (DEV && tracing_mode_flag) {\n\t\tsignal.created = get_stack('CreatedAt');\n\t}\n\n\treturn signal;\n}\n\n/**\n * @template V\n * @param {() => V} fn\n * @returns {Derived<V>}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function derived_safe_equal(fn) {\n\tconst signal = derived(fn);\n\tsignal.equals = safe_equals;\n\treturn signal;\n}\n\n/**\n * @param {Derived} derived\n * @returns {void}\n */\nexport function destroy_derived_effects(derived) {\n\tvar effects = derived.effects;\n\n\tif (effects !== null) {\n\t\tderived.effects = null;\n\n\t\tfor (var i = 0; i < effects.length; i += 1) {\n\t\t\tdestroy_effect(/** @type {Effect} */ (effects[i]));\n\t\t}\n\t}\n}\n\n/**\n * The currently updating deriveds, used to detect infinite recursion\n * in dev mode and provide a nicer error than 'too much recursion'\n * @type {Derived[]}\n */\nlet stack = [];\n\n/**\n * @param {Derived} derived\n * @returns {Effect | null}\n */\nfunction get_derived_parent_effect(derived) {\n\tvar parent = derived.parent;\n\twhile (parent !== null) {\n\t\tif ((parent.f & DERIVED) === 0) {\n\t\t\treturn /** @type {Effect} */ (parent);\n\t\t}\n\t\tparent = parent.parent;\n\t}\n\treturn null;\n}\n\n/**\n * @template T\n * @param {Derived} derived\n * @returns {T}\n */\nexport function execute_derived(derived) {\n\tvar value;\n\tvar prev_active_effect = active_effect;\n\n\tset_active_effect(get_derived_parent_effect(derived));\n\n\tif (DEV) {\n\t\tlet prev_inspect_effects = inspect_effects;\n\t\tset_inspect_effects(new Set());\n\t\ttry {\n\t\t\tif (stack.includes(derived)) {\n\t\t\t\te.derived_references_self();\n\t\t\t}\n\n\t\t\tstack.push(derived);\n\n\t\t\tdestroy_derived_effects(derived);\n\t\t\tvalue = update_reaction(derived);\n\t\t} finally {\n\t\t\tset_active_effect(prev_active_effect);\n\t\t\tset_inspect_effects(prev_inspect_effects);\n\t\t\tstack.pop();\n\t\t}\n\t} else {\n\t\ttry {\n\t\t\tdestroy_derived_effects(derived);\n\t\t\tvalue = update_reaction(derived);\n\t\t} finally {\n\t\t\tset_active_effect(prev_active_effect);\n\t\t}\n\t}\n\n\treturn value;\n}\n\n/**\n * @param {Derived} derived\n * @returns {void}\n */\nexport function update_derived(derived) {\n\tvar value = execute_derived(derived);\n\tvar status =\n\t\t(skip_reaction || (derived.f & UNOWNED) !== 0) && derived.deps !== null ? MAYBE_DIRTY : CLEAN;\n\n\tset_signal_status(derived, status);\n\n\tif (!derived.equals(value)) {\n\t\tderived.v = value;\n\t\tderived.wv = increment_write_version();\n\t}\n}\n\n/**\n * @param {Derived} derived\n * @returns {void}\n */\nexport function destroy_derived(derived) {\n\tdestroy_derived_effects(derived);\n\tremove_reactions(derived, 0);\n\tset_signal_status(derived, DESTROYED);\n\n\tderived.v = derived.deps = derived.ctx = derived.reactions = null;\n}\n","/** @import { ComponentContext, ComponentContextLegacy, Derived, Effect, TemplateNode, TransitionManager } from '#client' */\nimport {\n\tcheck_dirtiness,\n\tactive_effect,\n\tactive_reaction,\n\tupdate_effect,\n\tget,\n\tis_destroying_effect,\n\tis_flushing_effect,\n\tremove_reactions,\n\tschedule_effect,\n\tset_active_reaction,\n\tset_is_destroying_effect,\n\tset_is_flushing_effect,\n\tset_signal_status,\n\tuntrack,\n\tskip_reaction,\n\tuntracking\n} from '../runtime.js';\nimport {\n\tDIRTY,\n\tBRANCH_EFFECT,\n\tRENDER_EFFECT,\n\tEFFECT,\n\tDESTROYED,\n\tINERT,\n\tEFFECT_RAN,\n\tBLOCK_EFFECT,\n\tROOT_EFFECT,\n\tEFFECT_TRANSPARENT,\n\tDERIVED,\n\tUNOWNED,\n\tCLEAN,\n\tINSPECT_EFFECT,\n\tHEAD_EFFECT,\n\tMAYBE_DIRTY,\n\tEFFECT_HAS_DERIVED,\n\tBOUNDARY_EFFECT\n} from '../constants.js';\nimport { set } from './sources.js';\nimport * as e from '../errors.js';\nimport { DEV } from 'esm-env';\nimport { define_property } from '../../shared/utils.js';\nimport { get_next_sibling } from '../dom/operations.js';\nimport { derived, destroy_derived } from './deriveds.js';\nimport { component_context, dev_current_component_function } from '../context.js';\n\n/**\n * @param {'$effect' | '$effect.pre' | '$inspect'} rune\n */\nexport function validate_effect(rune) {\n\tif (active_effect === null && active_reaction === null) {\n\t\te.effect_orphan(rune);\n\t}\n\n\tif (active_reaction !== null && (active_reaction.f & UNOWNED) !== 0 && active_effect === null) {\n\t\te.effect_in_unowned_derived();\n\t}\n\n\tif (is_destroying_effect) {\n\t\te.effect_in_teardown(rune);\n\t}\n}\n\n/**\n * @param {Effect} effect\n * @param {Effect} parent_effect\n */\nfunction push_effect(effect, parent_effect) {\n\tvar parent_last = parent_effect.last;\n\tif (parent_last === null) {\n\t\tparent_effect.last = parent_effect.first = effect;\n\t} else {\n\t\tparent_last.next = effect;\n\t\teffect.prev = parent_last;\n\t\tparent_effect.last = effect;\n\t}\n}\n\n/**\n * @param {number} type\n * @param {null | (() => void | (() => void))} fn\n * @param {boolean} sync\n * @param {boolean} push\n * @returns {Effect}\n */\nfunction create_effect(type, fn, sync, push = true) {\n\tvar is_root = (type & ROOT_EFFECT) !== 0;\n\tvar parent_effect = active_effect;\n\n\tif (DEV) {\n\t\t// Ensure the parent is never an inspect effect\n\t\twhile (parent_effect !== null && (parent_effect.f & INSPECT_EFFECT) !== 0) {\n\t\t\tparent_effect = parent_effect.parent;\n\t\t}\n\t}\n\n\t/** @type {Effect} */\n\tvar effect = {\n\t\tctx: component_context,\n\t\tdeps: null,\n\t\tnodes_start: null,\n\t\tnodes_end: null,\n\t\tf: type | DIRTY,\n\t\tfirst: null,\n\t\tfn,\n\t\tlast: null,\n\t\tnext: null,\n\t\tparent: is_root ? null : parent_effect,\n\t\tprev: null,\n\t\tteardown: null,\n\t\ttransitions: null,\n\t\twv: 0\n\t};\n\n\tif (DEV) {\n\t\teffect.component_function = dev_current_component_function;\n\t}\n\n\tif (sync) {\n\t\tvar previously_flushing_effect = is_flushing_effect;\n\n\t\ttry {\n\t\t\tset_is_flushing_effect(true);\n\t\t\tupdate_effect(effect);\n\t\t\teffect.f |= EFFECT_RAN;\n\t\t} catch (e) {\n\t\t\tdestroy_effect(effect);\n\t\t\tthrow e;\n\t\t} finally {\n\t\t\tset_is_flushing_effect(previously_flushing_effect);\n\t\t}\n\t} else if (fn !== null) {\n\t\tschedule_effect(effect);\n\t}\n\n\t// if an effect has no dependencies, no DOM and no teardown function,\n\t// don't bother adding it to the effect tree\n\tvar inert =\n\t\tsync &&\n\t\teffect.deps === null &&\n\t\teffect.first === null &&\n\t\teffect.nodes_start === null &&\n\t\teffect.teardown === null &&\n\t\t(effect.f & (EFFECT_HAS_DERIVED | BOUNDARY_EFFECT)) === 0;\n\n\tif (!inert && !is_root && push) {\n\t\tif (parent_effect !== null) {\n\t\t\tpush_effect(effect, parent_effect);\n\t\t}\n\n\t\t// if we're in a derived, add the effect there too\n\t\tif (active_reaction !== null && (active_reaction.f & DERIVED) !== 0) {\n\t\t\tvar derived = /** @type {Derived} */ (active_reaction);\n\t\t\t(derived.effects ??= []).push(effect);\n\t\t}\n\t}\n\n\treturn effect;\n}\n\n/**\n * Internal representation of `$effect.tracking()`\n * @returns {boolean}\n */\nexport function effect_tracking() {\n\tif (active_reaction === null || untracking) {\n\t\treturn false;\n\t}\n\n\t// If it's skipped, that's because we're inside an unowned\n\t// that is not being tracked by another reaction\n\treturn !skip_reaction;\n}\n\n/**\n * @param {() => void} fn\n */\nexport function teardown(fn) {\n\tconst effect = create_effect(RENDER_EFFECT, null, false);\n\tset_signal_status(effect, CLEAN);\n\teffect.teardown = fn;\n\treturn effect;\n}\n\n/**\n * Internal representation of `$effect(...)`\n * @param {() => void | (() => void)} fn\n */\nexport function user_effect(fn) {\n\tvalidate_effect('$effect');\n\n\t// Non-nested `$effect(...)` in a component should be deferred\n\t// until the component is mounted\n\tvar defer =\n\t\tactive_effect !== null &&\n\t\t(active_effect.f & BRANCH_EFFECT) !== 0 &&\n\t\tcomponent_context !== null &&\n\t\t!component_context.m;\n\n\tif (DEV) {\n\t\tdefine_property(fn, 'name', {\n\t\t\tvalue: '$effect'\n\t\t});\n\t}\n\n\tif (defer) {\n\t\tvar context = /** @type {ComponentContext} */ (component_context);\n\t\t(context.e ??= []).push({\n\t\t\tfn,\n\t\t\teffect: active_effect,\n\t\t\treaction: active_reaction\n\t\t});\n\t} else {\n\t\tvar signal = effect(fn);\n\t\treturn signal;\n\t}\n}\n\n/**\n * Internal representation of `$effect.pre(...)`\n * @param {() => void | (() => void)} fn\n * @returns {Effect}\n */\nexport function user_pre_effect(fn) {\n\tvalidate_effect('$effect.pre');\n\tif (DEV) {\n\t\tdefine_property(fn, 'name', {\n\t\t\tvalue: '$effect.pre'\n\t\t});\n\t}\n\treturn render_effect(fn);\n}\n\n/** @param {() => void | (() => void)} fn */\nexport function inspect_effect(fn) {\n\treturn create_effect(INSPECT_EFFECT, fn, true);\n}\n\n/**\n * Internal representation of `$effect.root(...)`\n * @param {() => void | (() => void)} fn\n * @returns {() => void}\n */\nexport function effect_root(fn) {\n\tconst effect = create_effect(ROOT_EFFECT, fn, true);\n\n\treturn () => {\n\t\tdestroy_effect(effect);\n\t};\n}\n\n/**\n * An effect root whose children can transition out\n * @param {() => void} fn\n * @returns {(options?: { outro?: boolean }) => Promise<void>}\n */\nexport function component_root(fn) {\n\tconst effect = create_effect(ROOT_EFFECT, fn, true);\n\n\treturn (options = {}) => {\n\t\treturn new Promise((fulfil) => {\n\t\t\tif (options.outro) {\n\t\t\t\tpause_effect(effect, () => {\n\t\t\t\t\tdestroy_effect(effect);\n\t\t\t\t\tfulfil(undefined);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tdestroy_effect(effect);\n\t\t\t\tfulfil(undefined);\n\t\t\t}\n\t\t});\n\t};\n}\n\n/**\n * @param {() => void | (() => void)} fn\n * @returns {Effect}\n */\nexport function effect(fn) {\n\treturn create_effect(EFFECT, fn, false);\n}\n\n/**\n * Internal representation of `$: ..`\n * @param {() => any} deps\n * @param {() => void | (() => void)} fn\n */\nexport function legacy_pre_effect(deps, fn) {\n\tvar context = /** @type {ComponentContextLegacy} */ (component_context);\n\n\t/** @type {{ effect: null | Effect, ran: boolean }} */\n\tvar token = { effect: null, ran: false };\n\tcontext.l.r1.push(token);\n\n\ttoken.effect = render_effect(() => {\n\t\tdeps();\n\n\t\t// If this legacy pre effect has already run before the end of the reset, then\n\t\t// bail out to emulate the same behavior.\n\t\tif (token.ran) return;\n\n\t\ttoken.ran = true;\n\t\tset(context.l.r2, true);\n\t\tuntrack(fn);\n\t});\n}\n\nexport function legacy_pre_effect_reset() {\n\tvar context = /** @type {ComponentContextLegacy} */ (component_context);\n\n\trender_effect(() => {\n\t\tif (!get(context.l.r2)) return;\n\n\t\t// Run dirty `$:` statements\n\t\tfor (var token of context.l.r1) {\n\t\t\tvar effect = token.effect;\n\n\t\t\t// If the effect is CLEAN, then make it MAYBE_DIRTY. This ensures we traverse through\n\t\t\t// the effects dependencies and correctly ensure each dependency is up-to-date.\n\t\t\tif ((effect.f & CLEAN) !== 0) {\n\t\t\t\tset_signal_status(effect, MAYBE_DIRTY);\n\t\t\t}\n\n\t\t\tif (check_dirtiness(effect)) {\n\t\t\t\tupdate_effect(effect);\n\t\t\t}\n\n\t\t\ttoken.ran = false;\n\t\t}\n\n\t\tcontext.l.r2.v = false; // set directly to avoid rerunning this effect\n\t});\n}\n\n/**\n * @param {() => void | (() => void)} fn\n * @returns {Effect}\n */\nexport function render_effect(fn) {\n\treturn create_effect(RENDER_EFFECT, fn, true);\n}\n\n/**\n * @param {(...expressions: any) => void | (() => void)} fn\n * @param {Array<() => any>} thunks\n * @returns {Effect}\n */\nexport function template_effect(fn, thunks = [], d = derived) {\n\tconst deriveds = thunks.map(d);\n\tconst effect = () => fn(...deriveds.map(get));\n\n\tif (DEV) {\n\t\tdefine_property(effect, 'name', {\n\t\t\tvalue: '{expression}'\n\t\t});\n\t}\n\n\treturn block(effect);\n}\n\n/**\n * @param {(() => void)} fn\n * @param {number} flags\n */\nexport function block(fn, flags = 0) {\n\treturn create_effect(RENDER_EFFECT | BLOCK_EFFECT | flags, fn, true);\n}\n\n/**\n * @param {(() => void)} fn\n * @param {boolean} [push]\n */\nexport function branch(fn, push = true) {\n\treturn create_effect(RENDER_EFFECT | BRANCH_EFFECT, fn, true, push);\n}\n\n/**\n * @param {Effect} effect\n */\nexport function execute_effect_teardown(effect) {\n\tvar teardown = effect.teardown;\n\tif (teardown !== null) {\n\t\tconst previously_destroying_effect = is_destroying_effect;\n\t\tconst previous_reaction = active_reaction;\n\t\tset_is_destroying_effect(true);\n\t\tset_active_reaction(null);\n\t\ttry {\n\t\t\tteardown.call(null);\n\t\t} finally {\n\t\t\tset_is_destroying_effect(previously_destroying_effect);\n\t\t\tset_active_reaction(previous_reaction);\n\t\t}\n\t}\n}\n\n/**\n * @param {Effect} signal\n * @param {boolean} remove_dom\n * @returns {void}\n */\nexport function destroy_effect_children(signal, remove_dom = false) {\n\tvar effect = signal.first;\n\tsignal.first = signal.last = null;\n\n\twhile (effect !== null) {\n\t\tvar next = effect.next;\n\t\tdestroy_effect(effect, remove_dom);\n\t\teffect = next;\n\t}\n}\n\n/**\n * @param {Effect} signal\n * @returns {void}\n */\nexport function destroy_block_effect_children(signal) {\n\tvar effect = signal.first;\n\n\twhile (effect !== null) {\n\t\tvar next = effect.next;\n\t\tif ((effect.f & BRANCH_EFFECT) === 0) {\n\t\t\tdestroy_effect(effect);\n\t\t}\n\t\teffect = next;\n\t}\n}\n\n/**\n * @param {Effect} effect\n * @param {boolean} [remove_dom]\n * @returns {void}\n */\nexport function destroy_effect(effect, remove_dom = true) {\n\tvar removed = false;\n\n\tif ((remove_dom || (effect.f & HEAD_EFFECT) !== 0) && effect.nodes_start !== null) {\n\t\t/** @type {TemplateNode | null} */\n\t\tvar node = effect.nodes_start;\n\t\tvar end = effect.nodes_end;\n\n\t\twhile (node !== null) {\n\t\t\t/** @type {TemplateNode | null} */\n\t\t\tvar next = node === end ? null : /** @type {TemplateNode} */ (get_next_sibling(node));\n\n\t\t\tnode.remove();\n\t\t\tnode = next;\n\t\t}\n\n\t\tremoved = true;\n\t}\n\n\tdestroy_effect_children(effect, remove_dom && !removed);\n\tremove_reactions(effect, 0);\n\tset_signal_status(effect, DESTROYED);\n\n\tvar transitions = effect.transitions;\n\n\tif (transitions !== null) {\n\t\tfor (const transition of transitions) {\n\t\t\ttransition.stop();\n\t\t}\n\t}\n\n\texecute_effect_teardown(effect);\n\n\tvar parent = effect.parent;\n\n\t// If the parent doesn't have any children, then skip this work altogether\n\tif (parent !== null && parent.first !== null) {\n\t\tunlink_effect(effect);\n\t}\n\n\tif (DEV) {\n\t\teffect.component_function = null;\n\t}\n\n\t// `first` and `child` are nulled out in destroy_effect_children\n\t// we don't null out `parent` so that error propagation can work correctly\n\teffect.next =\n\t\teffect.prev =\n\t\teffect.teardown =\n\t\teffect.ctx =\n\t\teffect.deps =\n\t\teffect.fn =\n\t\teffect.nodes_start =\n\t\teffect.nodes_end =\n\t\t\tnull;\n}\n\n/**\n * Detach an effect from the effect tree, freeing up memory and\n * reducing the amount of work that happens on subsequent traversals\n * @param {Effect} effect\n */\nexport function unlink_effect(effect) {\n\tvar parent = effect.parent;\n\tvar prev = effect.prev;\n\tvar next = effect.next;\n\n\tif (prev !== null) prev.next = next;\n\tif (next !== null) next.prev = prev;\n\n\tif (parent !== null) {\n\t\tif (parent.first === effect) parent.first = next;\n\t\tif (parent.last === effect) parent.last = prev;\n\t}\n}\n\n/**\n * When a block effect is removed, we don't immediately destroy it or yank it\n * out of the DOM, because it might have transitions. Instead, we 'pause' it.\n * It stays around (in memory, and in the DOM) until outro transitions have\n * completed, and if the state change is reversed then we _resume_ it.\n * A paused effect does not update, and the DOM subtree becomes inert.\n * @param {Effect} effect\n * @param {() => void} [callback]\n */\nexport function pause_effect(effect, callback) {\n\t/** @type {TransitionManager[]} */\n\tvar transitions = [];\n\n\tpause_children(effect, transitions, true);\n\n\trun_out_transitions(transitions, () => {\n\t\tdestroy_effect(effect);\n\t\tif (callback) callback();\n\t});\n}\n\n/**\n * @param {TransitionManager[]} transitions\n * @param {() => void} fn\n */\nexport function run_out_transitions(transitions, fn) {\n\tvar remaining = transitions.length;\n\tif (remaining > 0) {\n\t\tvar check = () => --remaining || fn();\n\t\tfor (var transition of transitions) {\n\t\t\ttransition.out(check);\n\t\t}\n\t} else {\n\t\tfn();\n\t}\n}\n\n/**\n * @param {Effect} effect\n * @param {TransitionManager[]} transitions\n * @param {boolean} local\n */\nexport function pause_children(effect, transitions, local) {\n\tif ((effect.f & INERT) !== 0) return;\n\teffect.f ^= INERT;\n\n\tif (effect.transitions !== null) {\n\t\tfor (const transition of effect.transitions) {\n\t\t\tif (transition.is_global || local) {\n\t\t\t\ttransitions.push(transition);\n\t\t\t}\n\t\t}\n\t}\n\n\tvar child = effect.first;\n\n\twhile (child !== null) {\n\t\tvar sibling = child.next;\n\t\tvar transparent = (child.f & EFFECT_TRANSPARENT) !== 0 || (child.f & BRANCH_EFFECT) !== 0;\n\t\t// TODO we don't need to call pause_children recursively with a linked list in place\n\t\t// it's slightly more involved though as we have to account for `transparent` changing\n\t\t// through the tree.\n\t\tpause_children(child, transitions, transparent ? local : false);\n\t\tchild = sibling;\n\t}\n}\n\n/**\n * The opposite of `pause_effect`. We call this if (for example)\n * `x` becomes falsy then truthy: `{#if x}...{/if}`\n * @param {Effect} effect\n */\nexport function resume_effect(effect) {\n\tresume_children(effect, true);\n}\n\n/**\n * @param {Effect} effect\n * @param {boolean} local\n */\nfunction resume_children(effect, local) {\n\tif ((effect.f & INERT) === 0) return;\n\teffect.f ^= INERT;\n\n\t// Ensure the effect is marked as clean again so that any dirty child\n\t// effects can schedule themselves for execution\n\tif ((effect.f & CLEAN) === 0) {\n\t\teffect.f ^= CLEAN;\n\t}\n\n\t// If a dependency of this effect changed while it was paused,\n\t// schedule the effect to update\n\tif (check_dirtiness(effect)) {\n\t\tset_signal_status(effect, DIRTY);\n\t\tschedule_effect(effect);\n\t}\n\n\tvar child = effect.first;\n\n\twhile (child !== null) {\n\t\tvar sibling = child.next;\n\t\tvar transparent = (child.f & EFFECT_TRANSPARENT) !== 0 || (child.f & BRANCH_EFFECT) !== 0;\n\t\t// TODO we don't need to call resume_children recursively with a linked list in place\n\t\t// it's slightly more involved though as we have to account for `transparent` changing\n\t\t// through the tree.\n\t\tresume_children(child, transparent ? local : false);\n\t\tchild = sibling;\n\t}\n\n\tif (effect.transitions !== null) {\n\t\tfor (const transition of effect.transitions) {\n\t\t\tif (transition.is_global || local) {\n\t\t\t\ttransition.in();\n\t\t\t}\n\t\t}\n\t}\n}\n","import { run_all } from '../../shared/utils.js';\n\n// Fallback for when requestIdleCallback is not available\nexport const request_idle_callback =\n\ttypeof requestIdleCallback === 'undefined'\n\t\t? (/** @type {() => void} */ cb) => setTimeout(cb, 1)\n\t\t: requestIdleCallback;\n\nlet is_micro_task_queued = false;\nlet is_idle_task_queued = false;\n\n/** @type {Array<() => void>} */\nlet current_queued_micro_tasks = [];\n/** @type {Array<() => void>} */\nlet current_queued_idle_tasks = [];\n\nfunction process_micro_tasks() {\n\tis_micro_task_queued = false;\n\tconst tasks = current_queued_micro_tasks.slice();\n\tcurrent_queued_micro_tasks = [];\n\trun_all(tasks);\n}\n\nfunction process_idle_tasks() {\n\tis_idle_task_queued = false;\n\tconst tasks = current_queued_idle_tasks.slice();\n\tcurrent_queued_idle_tasks = [];\n\trun_all(tasks);\n}\n\n/**\n * @param {() => void} fn\n */\nexport function queue_micro_task(fn) {\n\tif (!is_micro_task_queued) {\n\t\tis_micro_task_queued = true;\n\t\tqueueMicrotask(process_micro_tasks);\n\t}\n\tcurrent_queued_micro_tasks.push(fn);\n}\n\n/**\n * @param {() => void} fn\n */\nexport function queue_idle_task(fn) {\n\tif (!is_idle_task_queued) {\n\t\tis_idle_task_queued = true;\n\t\trequest_idle_callback(process_idle_tasks);\n\t}\n\tcurrent_queued_idle_tasks.push(fn);\n}\n\n/**\n * Synchronously run any queued tasks.\n */\nexport function flush_tasks() {\n\tif (is_micro_task_queued) {\n\t\tprocess_micro_tasks();\n\t}\n\tif (is_idle_task_queued) {\n\t\tprocess_idle_tasks();\n\t}\n}\n","const regex_return_characters = /\\r/g;\n\n/**\n * @param {string} str\n * @returns {string}\n */\nexport function hash(str) {\n\tstr = str.replace(regex_return_characters, '');\n\tlet hash = 5381;\n\tlet i = str.length;\n\n\twhile (i--) hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n\treturn (hash >>> 0).toString(36);\n}\n\nconst VOID_ELEMENT_NAMES = [\n\t'area',\n\t'base',\n\t'br',\n\t'col',\n\t'command',\n\t'embed',\n\t'hr',\n\t'img',\n\t'input',\n\t'keygen',\n\t'link',\n\t'meta',\n\t'param',\n\t'source',\n\t'track',\n\t'wbr'\n];\n\n/**\n * Returns `true` if `name` is of a void element\n * @param {string} name\n */\nexport function is_void(name) {\n\treturn VOID_ELEMENT_NAMES.includes(name) || name.toLowerCase() === '!doctype';\n}\n\nconst RESERVED_WORDS = [\n\t'arguments',\n\t'await',\n\t'break',\n\t'case',\n\t'catch',\n\t'class',\n\t'const',\n\t'continue',\n\t'debugger',\n\t'default',\n\t'delete',\n\t'do',\n\t'else',\n\t'enum',\n\t'eval',\n\t'export',\n\t'extends',\n\t'false',\n\t'finally',\n\t'for',\n\t'function',\n\t'if',\n\t'implements',\n\t'import',\n\t'in',\n\t'instanceof',\n\t'interface',\n\t'let',\n\t'new',\n\t'null',\n\t'package',\n\t'private',\n\t'protected',\n\t'public',\n\t'return',\n\t'static',\n\t'super',\n\t'switch',\n\t'this',\n\t'throw',\n\t'true',\n\t'try',\n\t'typeof',\n\t'var',\n\t'void',\n\t'while',\n\t'with',\n\t'yield'\n];\n\n/**\n * Returns `true` if `word` is a reserved JavaScript keyword\n * @param {string} word\n */\nexport function is_reserved(word) {\n\treturn RESERVED_WORDS.includes(word);\n}\n\n/**\n * @param {string} name\n */\nexport function is_capture_event(name) {\n\treturn name.endsWith('capture') && name !== 'gotpointercapture' && name !== 'lostpointercapture';\n}\n\n/** List of Element events that will be delegated */\nconst DELEGATED_EVENTS = [\n\t'beforeinput',\n\t'click',\n\t'change',\n\t'dblclick',\n\t'contextmenu',\n\t'focusin',\n\t'focusout',\n\t'input',\n\t'keydown',\n\t'keyup',\n\t'mousedown',\n\t'mousemove',\n\t'mouseout',\n\t'mouseover',\n\t'mouseup',\n\t'pointerdown',\n\t'pointermove',\n\t'pointerout',\n\t'pointerover',\n\t'pointerup',\n\t'touchend',\n\t'touchmove',\n\t'touchstart'\n];\n\n/**\n * Returns `true` if `event_name` is a delegated event\n * @param {string} event_name\n */\nexport function is_delegated(event_name) {\n\treturn DELEGATED_EVENTS.includes(event_name);\n}\n\n/**\n * Attributes that are boolean, i.e. they are present or not present.\n */\nconst DOM_BOOLEAN_ATTRIBUTES = [\n\t'allowfullscreen',\n\t'async',\n\t'autofocus',\n\t'autoplay',\n\t'checked',\n\t'controls',\n\t'default',\n\t'disabled',\n\t'formnovalidate',\n\t'hidden',\n\t'indeterminate',\n\t'inert',\n\t'ismap',\n\t'loop',\n\t'multiple',\n\t'muted',\n\t'nomodule',\n\t'novalidate',\n\t'open',\n\t'playsinline',\n\t'readonly',\n\t'required',\n\t'reversed',\n\t'seamless',\n\t'selected',\n\t'webkitdirectory',\n\t'defer',\n\t'disablepictureinpicture',\n\t'disableremoteplayback'\n];\n\n/**\n * Returns `true` if `name` is a boolean attribute\n * @param {string} name\n */\nexport function is_boolean_attribute(name) {\n\treturn DOM_BOOLEAN_ATTRIBUTES.includes(name);\n}\n\n/**\n * @type {Record<string, string>}\n * List of attribute names that should be aliased to their property names\n * because they behave differently between setting them as an attribute and\n * setting them as a property.\n */\nconst ATTRIBUTE_ALIASES = {\n\t// no `class: 'className'` because we handle that separately\n\tformnovalidate: 'formNoValidate',\n\tismap: 'isMap',\n\tnomodule: 'noModule',\n\tplaysinline: 'playsInline',\n\treadonly: 'readOnly',\n\tdefaultvalue: 'defaultValue',\n\tdefaultchecked: 'defaultChecked',\n\tsrcobject: 'srcObject',\n\tnovalidate: 'noValidate',\n\tallowfullscreen: 'allowFullscreen',\n\tdisablepictureinpicture: 'disablePictureInPicture',\n\tdisableremoteplayback: 'disableRemotePlayback'\n};\n\n/**\n * @param {string} name\n */\nexport function normalize_attribute(name) {\n\tname = name.toLowerCase();\n\treturn ATTRIBUTE_ALIASES[name] ?? name;\n}\n\nconst DOM_PROPERTIES = [\n\t...DOM_BOOLEAN_ATTRIBUTES,\n\t'formNoValidate',\n\t'isMap',\n\t'noModule',\n\t'playsInline',\n\t'readOnly',\n\t'value',\n\t'volume',\n\t'defaultValue',\n\t'defaultChecked',\n\t'srcObject',\n\t'noValidate',\n\t'allowFullscreen',\n\t'disablePictureInPicture',\n\t'disableRemotePlayback'\n];\n\n/**\n * @param {string} name\n */\nexport function is_dom_property(name) {\n\treturn DOM_PROPERTIES.includes(name);\n}\n\nconst NON_STATIC_PROPERTIES = ['autofocus', 'muted', 'defaultValue', 'defaultChecked'];\n\n/**\n * Returns `true` if the given attribute cannot be set through the template\n * string, i.e. needs some kind of JavaScript handling to work.\n * @param {string} name\n */\nexport function cannot_be_set_statically(name) {\n\treturn NON_STATIC_PROPERTIES.includes(name);\n}\n\n/**\n * Subset of delegated events which should be passive by default.\n * These two are already passive via browser defaults on window, document and body.\n * But since\n * - we're delegating them\n * - they happen often\n * - they apply to mobile which is generally less performant\n * we're marking them as passive by default for other elements, too.\n */\nconst PASSIVE_EVENTS = ['touchstart', 'touchmove'];\n\n/**\n * Returns `true` if `name` is a passive event\n * @param {string} name\n */\nexport function is_passive_event(name) {\n\treturn PASSIVE_EVENTS.includes(name);\n}\n\nconst CONTENT_EDITABLE_BINDINGS = ['textContent', 'innerHTML', 'innerText'];\n\n/** @param {string} name */\nexport function is_content_editable_binding(name) {\n\treturn CONTENT_EDITABLE_BINDINGS.includes(name);\n}\n\nconst LOAD_ERROR_ELEMENTS = [\n\t'body',\n\t'embed',\n\t'iframe',\n\t'img',\n\t'link',\n\t'object',\n\t'script',\n\t'style',\n\t'track'\n];\n\n/**\n * Returns `true` if the element emits `load` and `error` events\n * @param {string} name\n */\nexport function is_load_error_element(name) {\n\treturn LOAD_ERROR_ELEMENTS.includes(name);\n}\n\nconst SVG_ELEMENTS = [\n\t'altGlyph',\n\t'altGlyphDef',\n\t'altGlyphItem',\n\t'animate',\n\t'animateColor',\n\t'animateMotion',\n\t'animateTransform',\n\t'circle',\n\t'clipPath',\n\t'color-profile',\n\t'cursor',\n\t'defs',\n\t'desc',\n\t'discard',\n\t'ellipse',\n\t'feBlend',\n\t'feColorMatrix',\n\t'feComponentTransfer',\n\t'feComposite',\n\t'feConvolveMatrix',\n\t'feDiffuseLighting',\n\t'feDisplacementMap',\n\t'feDistantLight',\n\t'feDropShadow',\n\t'feFlood',\n\t'feFuncA',\n\t'feFuncB',\n\t'feFuncG',\n\t'feFuncR',\n\t'feGaussianBlur',\n\t'feImage',\n\t'feMerge',\n\t'feMergeNode',\n\t'feMorphology',\n\t'feOffset',\n\t'fePointLight',\n\t'feSpecularLighting',\n\t'feSpotLight',\n\t'feTile',\n\t'feTurbulence',\n\t'filter',\n\t'font',\n\t'font-face',\n\t'font-face-format',\n\t'font-face-name',\n\t'font-face-src',\n\t'font-face-uri',\n\t'foreignObject',\n\t'g',\n\t'glyph',\n\t'glyphRef',\n\t'hatch',\n\t'hatchpath',\n\t'hkern',\n\t'image',\n\t'line',\n\t'linearGradient',\n\t'marker',\n\t'mask',\n\t'mesh',\n\t'meshgradient',\n\t'meshpatch',\n\t'meshrow',\n\t'metadata',\n\t'missing-glyph',\n\t'mpath',\n\t'path',\n\t'pattern',\n\t'polygon',\n\t'polyline',\n\t'radialGradient',\n\t'rect',\n\t'set',\n\t'solidcolor',\n\t'stop',\n\t'svg',\n\t'switch',\n\t'symbol',\n\t'text',\n\t'textPath',\n\t'tref',\n\t'tspan',\n\t'unknown',\n\t'use',\n\t'view',\n\t'vkern'\n];\n\n/** @param {string} name */\nexport function is_svg(name) {\n\treturn SVG_ELEMENTS.includes(name);\n}\n\nconst MATHML_ELEMENTS = [\n\t'annotation',\n\t'annotation-xml',\n\t'maction',\n\t'math',\n\t'merror',\n\t'mfrac',\n\t'mi',\n\t'mmultiscripts',\n\t'mn',\n\t'mo',\n\t'mover',\n\t'mpadded',\n\t'mphantom',\n\t'mprescripts',\n\t'mroot',\n\t'mrow',\n\t'ms',\n\t'mspace',\n\t'msqrt',\n\t'mstyle',\n\t'msub',\n\t'msubsup',\n\t'msup',\n\t'mtable',\n\t'mtd',\n\t'mtext',\n\t'mtr',\n\t'munder',\n\t'munderover',\n\t'semantics'\n];\n\n/** @param {string} name */\nexport function is_mathml(name) {\n\treturn MATHML_ELEMENTS.includes(name);\n}\n\nconst RUNES = /** @type {const} */ ([\n\t'$state',\n\t'$state.raw',\n\t'$state.snapshot',\n\t'$props',\n\t'$bindable',\n\t'$derived',\n\t'$derived.by',\n\t'$effect',\n\t'$effect.pre',\n\t'$effect.tracking',\n\t'$effect.root',\n\t'$inspect',\n\t'$inspect().with',\n\t'$inspect.trace',\n\t'$host'\n]);\n\n/**\n * @param {string} name\n * @returns {name is RUNES[number]}\n */\nexport function is_rune(name) {\n\treturn RUNES.includes(/** @type {RUNES[number]} */ (name));\n}\n\n/** List of elements that require raw contents and should not have SSR comments put in them */\nconst RAW_TEXT_ELEMENTS = /** @type {const} */ (['textarea', 'script', 'style', 'title']);\n\n/** @param {string} name */\nexport function is_raw_text_element(name) {\n\treturn RAW_TEXT_ELEMENTS.includes(/** @type {RAW_TEXT_ELEMENTS[number]} */ (name));\n}\n\n/**\n * Prevent devtools trying to make `location` a clickable link by inserting a zero-width space\n * @param {string | undefined} location\n */\nexport function sanitize_location(location) {\n\treturn location?.replace(/\\//g, '/\\u200b');\n}\n","/** @import { Location } from 'locate-character' */\nimport { teardown } from '../../reactivity/effects.js';\nimport { define_property, is_array } from '../../../shared/utils.js';\nimport { hydrating } from '../hydration.js';\nimport { queue_micro_task } from '../task.js';\nimport { FILENAME } from '../../../../constants.js';\nimport * as w from '../../warnings.js';\nimport {\n\tactive_effect,\n\tactive_reaction,\n\tset_active_effect,\n\tset_active_reaction\n} from '../../runtime.js';\nimport { without_reactive_context } from './bindings/shared.js';\n\n/** @type {Set<string>} */\nexport const all_registered_events = new Set();\n\n/** @type {Set<(events: Array<string>) => void>} */\nexport const root_event_handles = new Set();\n\n/**\n * SSR adds onload and onerror attributes to catch those events before the hydration.\n * This function detects those cases, removes the attributes and replays the events.\n * @param {HTMLElement} dom\n */\nexport function replay_events(dom) {\n\tif (!hydrating) return;\n\n\tif (dom.onload) {\n\t\tdom.removeAttribute('onload');\n\t}\n\tif (dom.onerror) {\n\t\tdom.removeAttribute('onerror');\n\t}\n\t// @ts-expect-error\n\tconst event = dom.__e;\n\tif (event !== undefined) {\n\t\t// @ts-expect-error\n\t\tdom.__e = undefined;\n\t\tqueueMicrotask(() => {\n\t\t\tif (dom.isConnected) {\n\t\t\t\tdom.dispatchEvent(event);\n\t\t\t}\n\t\t});\n\t}\n}\n\n/**\n * @param {string} event_name\n * @param {EventTarget} dom\n * @param {EventListener} [handler]\n * @param {AddEventListenerOptions} [options]\n */\nexport function create_event(event_name, dom, handler, options = {}) {\n\t/**\n\t * @this {EventTarget}\n\t */\n\tfunction target_handler(/** @type {Event} */ event) {\n\t\tif (!options.capture) {\n\t\t\t// Only call in the bubble phase, else delegated events would be called before the capturing events\n\t\t\thandle_event_propagation.call(dom, event);\n\t\t}\n\t\tif (!event.cancelBubble) {\n\t\t\treturn without_reactive_context(() => {\n\t\t\t\treturn handler?.call(this, event);\n\t\t\t});\n\t\t}\n\t}\n\n\t// Chrome has a bug where pointer events don't work when attached to a DOM element that has been cloned\n\t// with cloneNode() and the DOM element is disconnected from the document. To ensure the event works, we\n\t// defer the attachment till after it's been appended to the document. TODO: remove this once Chrome fixes\n\t// this bug. The same applies to wheel events and touch events.\n\tif (\n\t\tevent_name.startsWith('pointer') ||\n\t\tevent_name.startsWith('touch') ||\n\t\tevent_name === 'wheel'\n\t) {\n\t\tqueue_micro_task(() => {\n\t\t\tdom.addEventListener(event_name, target_handler, options);\n\t\t});\n\t} else {\n\t\tdom.addEventListener(event_name, target_handler, options);\n\t}\n\n\treturn target_handler;\n}\n\n/**\n * Attaches an event handler to an element and returns a function that removes the handler. Using this\n * rather than `addEventListener` will preserve the correct order relative to handlers added declaratively\n * (with attributes like `onclick`), which use event delegation for performance reasons\n *\n * @param {EventTarget} element\n * @param {string} type\n * @param {EventListener} handler\n * @param {AddEventListenerOptions} [options]\n */\nexport function on(element, type, handler, options = {}) {\n\tvar target_handler = create_event(type, element, handler, options);\n\n\treturn () => {\n\t\telement.removeEventListener(type, target_handler, options);\n\t};\n}\n\n/**\n * @param {string} event_name\n * @param {Element} dom\n * @param {EventListener} [handler]\n * @param {boolean} [capture]\n * @param {boolean} [passive]\n * @returns {void}\n */\nexport function event(event_name, dom, handler, capture, passive) {\n\tvar options = { capture, passive };\n\tvar target_handler = create_event(event_name, dom, handler, options);\n\n\t// @ts-ignore\n\tif (dom === document.body || dom === window || dom === document) {\n\t\tteardown(() => {\n\t\t\tdom.removeEventListener(event_name, target_handler, options);\n\t\t});\n\t}\n}\n\n/**\n * @param {Array<string>} events\n * @returns {void}\n */\nexport function delegate(events) {\n\tfor (var i = 0; i < events.length; i++) {\n\t\tall_registered_events.add(events[i]);\n\t}\n\n\tfor (var fn of root_event_handles) {\n\t\tfn(events);\n\t}\n}\n\n/**\n * @this {EventTarget}\n * @param {Event} event\n * @returns {void}\n */\nexport function handle_event_propagation(event) {\n\tvar handler_element = this;\n\tvar owner_document = /** @type {Node} */ (handler_element).ownerDocument;\n\tvar event_name = event.type;\n\tvar path = event.composedPath?.() || [];\n\tvar current_target = /** @type {null | Element} */ (path[0] || event.target);\n\n\t// composedPath contains list of nodes the event has propagated through.\n\t// We check __root to skip all nodes below it in case this is a\n\t// parent of the __root node, which indicates that there's nested\n\t// mounted apps. In this case we don't want to trigger events multiple times.\n\tvar path_idx = 0;\n\n\t// @ts-expect-error is added below\n\tvar handled_at = event.__root;\n\n\tif (handled_at) {\n\t\tvar at_idx = path.indexOf(handled_at);\n\t\tif (\n\t\t\tat_idx !== -1 &&\n\t\t\t(handler_element === document || handler_element === /** @type {any} */ (window))\n\t\t) {\n\t\t\t// This is the fallback document listener or a window listener, but the event was already handled\n\t\t\t// -> ignore, but set handle_at to document/window so that we're resetting the event\n\t\t\t// chain in case someone manually dispatches the same event object again.\n\t\t\t// @ts-expect-error\n\t\t\tevent.__root = handler_element;\n\t\t\treturn;\n\t\t}\n\n\t\t// We're deliberately not skipping if the index is higher, because\n\t\t// someone could create an event programmatically and emit it multiple times,\n\t\t// in which case we want to handle the whole propagation chain properly each time.\n\t\t// (this will only be a false negative if the event is dispatched multiple times and\n\t\t// the fallback document listener isn't reached in between, but that's super rare)\n\t\tvar handler_idx = path.indexOf(handler_element);\n\t\tif (handler_idx === -1) {\n\t\t\t// handle_idx can theoretically be -1 (happened in some JSDOM testing scenarios with an event listener on the window object)\n\t\t\t// so guard against that, too, and assume that everything was handled at this point.\n\t\t\treturn;\n\t\t}\n\n\t\tif (at_idx <= handler_idx) {\n\t\t\tpath_idx = at_idx;\n\t\t}\n\t}\n\n\tcurrent_target = /** @type {Element} */ (path[path_idx] || event.target);\n\t// there can only be one delegated event per element, and we either already handled the current target,\n\t// or this is the very first target in the chain which has a non-delegated listener, in which case it's safe\n\t// to handle a possible delegated event on it later (through the root delegation listener for example).\n\tif (current_target === handler_element) return;\n\n\t// Proxy currentTarget to correct target\n\tdefine_property(event, 'currentTarget', {\n\t\tconfigurable: true,\n\t\tget() {\n\t\t\treturn current_target || owner_document;\n\t\t}\n\t});\n\n\t// This started because of Chromium issue https://chromestatus.com/feature/5128696823545856,\n\t// where removal or moving of of the DOM can cause sync `blur` events to fire, which can cause logic\n\t// to run inside the current `active_reaction`, which isn't what we want at all. However, on reflection,\n\t// it's probably best that all event handled by Svelte have this behaviour, as we don't really want\n\t// an event handler to run in the context of another reaction or effect.\n\tvar previous_reaction = active_reaction;\n\tvar previous_effect = active_effect;\n\tset_active_reaction(null);\n\tset_active_effect(null);\n\n\ttry {\n\t\t/**\n\t\t * @type {unknown}\n\t\t */\n\t\tvar throw_error;\n\t\t/**\n\t\t * @type {unknown[]}\n\t\t */\n\t\tvar other_errors = [];\n\n\t\twhile (current_target !== null) {\n\t\t\t/** @type {null | Element} */\n\t\t\tvar parent_element =\n\t\t\t\tcurrent_target.assignedSlot ||\n\t\t\t\tcurrent_target.parentNode ||\n\t\t\t\t/** @type {any} */ (current_target).host ||\n\t\t\t\tnull;\n\n\t\t\ttry {\n\t\t\t\t// @ts-expect-error\n\t\t\t\tvar delegated = current_target['__' + event_name];\n\n\t\t\t\tif (delegated !== undefined && !(/** @type {any} */ (current_target).disabled)) {\n\t\t\t\t\tif (is_array(delegated)) {\n\t\t\t\t\t\tvar [fn, ...data] = delegated;\n\t\t\t\t\t\tfn.apply(current_target, [event, ...data]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdelegated.call(current_target, event);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tif (throw_error) {\n\t\t\t\t\tother_errors.push(error);\n\t\t\t\t} else {\n\t\t\t\t\tthrow_error = error;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (event.cancelBubble || parent_element === handler_element || parent_element === null) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcurrent_target = parent_element;\n\t\t}\n\n\t\tif (throw_error) {\n\t\t\tfor (let error of other_errors) {\n\t\t\t\t// Throw the rest of the errors, one-by-one on a microtask\n\t\t\t\tqueueMicrotask(() => {\n\t\t\t\t\tthrow error;\n\t\t\t\t});\n\t\t\t}\n\t\t\tthrow throw_error;\n\t\t}\n\t} finally {\n\t\t// @ts-expect-error is used above\n\t\tevent.__root = handler_element;\n\t\t// @ts-ignore remove proxy on currentTarget\n\t\tdelete event.currentTarget;\n\t\tset_active_reaction(previous_reaction);\n\t\tset_active_effect(previous_effect);\n\t}\n}\n\n/**\n * In dev, warn if an event handler is not a function, as it means the\n * user probably called the handler or forgot to add a `() =>`\n * @param {() => (event: Event, ...args: any) => void} thunk\n * @param {EventTarget} element\n * @param {[Event, ...any]} args\n * @param {any} component\n * @param {[number, number]} [loc]\n * @param {boolean} [remove_parens]\n */\nexport function apply(\n\tthunk,\n\telement,\n\targs,\n\tcomponent,\n\tloc,\n\thas_side_effects = false,\n\tremove_parens = false\n) {\n\tlet handler;\n\tlet error;\n\n\ttry {\n\t\thandler = thunk();\n\t} catch (e) {\n\t\terror = e;\n\t}\n\n\tif (typeof handler === 'function') {\n\t\thandler.apply(element, args);\n\t} else if (has_side_effects || handler != null || error) {\n\t\tconst filename = component?.[FILENAME];\n\t\tconst location = loc ? ` at ${filename}:${loc[0]}:${loc[1]}` : ` in ${filename}`;\n\n\t\tconst event_name = args[0].type;\n\t\tconst description = `\\`${event_name}\\` handler${location}`;\n\t\tconst suggestion = remove_parens ? 'remove the trailing `()`' : 'add a leading `() =>`';\n\n\t\tw.event_handler_invalid(description, suggestion);\n\n\t\tif (error) {\n\t\t\tthrow error;\n\t\t}\n\t}\n}\n","import { teardown } from '../../../reactivity/effects.js';\nimport {\n\tactive_effect,\n\tactive_reaction,\n\tset_active_effect,\n\tset_active_reaction\n} from '../../../runtime.js';\nimport { add_form_reset_listener } from '../misc.js';\n\n/**\n * Fires the handler once immediately (unless corresponding arg is set to `false`),\n * then listens to the given events until the render effect context is destroyed\n * @param {EventTarget} target\n * @param {Array<string>} events\n * @param {(event?: Event) => void} handler\n * @param {any} call_handler_immediately\n */\nexport function listen(target, events, handler, call_handler_immediately = true) {\n\tif (call_handler_immediately) {\n\t\thandler();\n\t}\n\n\tfor (var name of events) {\n\t\ttarget.addEventListener(name, handler);\n\t}\n\n\tteardown(() => {\n\t\tfor (var name of events) {\n\t\t\ttarget.removeEventListener(name, handler);\n\t\t}\n\t});\n}\n\n/**\n * @template T\n * @param {() => T} fn\n */\nexport function without_reactive_context(fn) {\n\tvar previous_reaction = active_reaction;\n\tvar previous_effect = active_effect;\n\tset_active_reaction(null);\n\tset_active_effect(null);\n\ttry {\n\t\treturn fn();\n\t} finally {\n\t\tset_active_reaction(previous_reaction);\n\t\tset_active_effect(previous_effect);\n\t}\n}\n\n/**\n * Listen to the given event, and then instantiate a global form reset listener if not already done,\n * to notify all bindings when the form is reset\n * @param {HTMLElement} element\n * @param {string} event\n * @param {(is_reset?: true) => void} handler\n * @param {(is_reset?: true) => void} [on_reset]\n */\nexport function listen_to_event_and_reset_event(element, event, handler, on_reset = handler) {\n\telement.addEventListener(event, () => without_reactive_context(handler));\n\t// @ts-expect-error\n\tconst prev = element.__on_r;\n\tif (prev) {\n\t\t// special case for checkbox that can have multiple binds (group & checked)\n\t\t// @ts-expect-error\n\t\telement.__on_r = () => {\n\t\t\tprev();\n\t\t\ton_reset(true);\n\t\t};\n\t} else {\n\t\t// @ts-expect-error\n\t\telement.__on_r = () => on_reset(true);\n\t}\n\n\tadd_form_reset_listener();\n}\n","/** @import { Effect, TemplateNode } from '#client' */\nimport { hydrate_next, hydrate_node, hydrating, set_hydrate_node } from './hydration.js';\nimport { create_text, get_first_child } from './operations.js';\nimport { create_fragment_from_html } from './reconciler.js';\nimport { active_effect } from '../runtime.js';\nimport { TEMPLATE_FRAGMENT, TEMPLATE_USE_IMPORT_NODE } from '../../../constants.js';\n\n/**\n * @param {TemplateNode} start\n * @param {TemplateNode | null} end\n */\nexport function assign_nodes(start, end) {\n\tvar effect = /** @type {Effect} */ (active_effect);\n\tif (effect.nodes_start === null) {\n\t\teffect.nodes_start = start;\n\t\teffect.nodes_end = end;\n\t}\n}\n\n/**\n * @param {string} content\n * @param {number} flags\n * @returns {() => Node | Node[]}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function template(content, flags) {\n\tvar is_fragment = (flags & TEMPLATE_FRAGMENT) !== 0;\n\tvar use_import_node = (flags & TEMPLATE_USE_IMPORT_NODE) !== 0;\n\n\t/** @type {Node} */\n\tvar node;\n\n\t/**\n\t * Whether or not the first item is a text/element node. If not, we need to\n\t * create an additional comment node to act as `effect.nodes.start`\n\t */\n\tvar has_start = !content.startsWith('<!>');\n\n\treturn () => {\n\t\tif (hydrating) {\n\t\t\tassign_nodes(hydrate_node, null);\n\t\t\treturn hydrate_node;\n\t\t}\n\n\t\tif (node === undefined) {\n\t\t\tnode = create_fragment_from_html(has_start ? content : '<!>' + content);\n\t\t\tif (!is_fragment) node = /** @type {Node} */ (get_first_child(node));\n\t\t}\n\n\t\tvar clone = /** @type {TemplateNode} */ (\n\t\t\tuse_import_node ? document.importNode(node, true) : node.cloneNode(true)\n\t\t);\n\n\t\tif (is_fragment) {\n\t\t\tvar start = /** @type {TemplateNode} */ (get_first_child(clone));\n\t\t\tvar end = /** @type {TemplateNode} */ (clone.lastChild);\n\n\t\t\tassign_nodes(start, end);\n\t\t} else {\n\t\t\tassign_nodes(clone, clone);\n\t\t}\n\n\t\treturn clone;\n\t};\n}\n\n/**\n * @param {string} content\n * @param {number} flags\n * @returns {() => Node | Node[]}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function template_with_script(content, flags) {\n\tvar fn = template(content, flags);\n\treturn () => run_scripts(/** @type {Element | DocumentFragment} */ (fn()));\n}\n\n/**\n * @param {string} content\n * @param {number} flags\n * @param {'svg' | 'math'} ns\n * @returns {() => Node | Node[]}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function ns_template(content, flags, ns = 'svg') {\n\t/**\n\t * Whether or not the first item is a text/element node. If not, we need to\n\t * create an additional comment node to act as `effect.nodes.start`\n\t */\n\tvar has_start = !content.startsWith('<!>');\n\n\tvar is_fragment = (flags & TEMPLATE_FRAGMENT) !== 0;\n\tvar wrapped = `<${ns}>${has_start ? content : '<!>' + content}</${ns}>`;\n\n\t/** @type {Element | DocumentFragment} */\n\tvar node;\n\n\treturn () => {\n\t\tif (hydrating) {\n\t\t\tassign_nodes(hydrate_node, null);\n\t\t\treturn hydrate_node;\n\t\t}\n\n\t\tif (!node) {\n\t\t\tvar fragment = /** @type {DocumentFragment} */ (create_fragment_from_html(wrapped));\n\t\t\tvar root = /** @type {Element} */ (get_first_child(fragment));\n\n\t\t\tif (is_fragment) {\n\t\t\t\tnode = document.createDocumentFragment();\n\t\t\t\twhile (get_first_child(root)) {\n\t\t\t\t\tnode.appendChild(/** @type {Node} */ (get_first_child(root)));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tnode = /** @type {Element} */ (get_first_child(root));\n\t\t\t}\n\t\t}\n\n\t\tvar clone = /** @type {TemplateNode} */ (node.cloneNode(true));\n\n\t\tif (is_fragment) {\n\t\t\tvar start = /** @type {TemplateNode} */ (get_first_child(clone));\n\t\t\tvar end = /** @type {TemplateNode} */ (clone.lastChild);\n\n\t\t\tassign_nodes(start, end);\n\t\t} else {\n\t\t\tassign_nodes(clone, clone);\n\t\t}\n\n\t\treturn clone;\n\t};\n}\n\n/**\n * @param {string} content\n * @param {number} flags\n * @returns {() => Node | Node[]}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function svg_template_with_script(content, flags) {\n\tvar fn = ns_template(content, flags);\n\treturn () => run_scripts(/** @type {Element | DocumentFragment} */ (fn()));\n}\n\n/**\n * @param {string} content\n * @param {number} flags\n * @returns {() => Node | Node[]}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function mathml_template(content, flags) {\n\treturn ns_template(content, flags, 'math');\n}\n\n/**\n * Creating a document fragment from HTML that contains script tags will not execute\n * the scripts. We need to replace the script tags with new ones so that they are executed.\n * @param {Element | DocumentFragment} node\n * @returns {Node | Node[]}\n */\nfunction run_scripts(node) {\n\t// scripts were SSR'd, in which case they will run\n\tif (hydrating) return node;\n\n\tconst is_fragment = node.nodeType === 11;\n\tconst scripts =\n\t\t/** @type {HTMLElement} */ (node).tagName === 'SCRIPT'\n\t\t\t? [/** @type {HTMLScriptElement} */ (node)]\n\t\t\t: node.querySelectorAll('script');\n\tconst effect = /** @type {Effect} */ (active_effect);\n\n\tfor (const script of scripts) {\n\t\tconst clone = document.createElement('script');\n\t\tfor (var attribute of script.attributes) {\n\t\t\tclone.setAttribute(attribute.name, attribute.value);\n\t\t}\n\n\t\tclone.textContent = script.textContent;\n\n\t\t// The script has changed - if it's at the edges, the effect now points at dead nodes\n\t\tif (is_fragment ? node.firstChild === script : node === script) {\n\t\t\teffect.nodes_start = clone;\n\t\t}\n\t\tif (is_fragment ? node.lastChild === script : node === script) {\n\t\t\teffect.nodes_end = clone;\n\t\t}\n\n\t\tscript.replaceWith(clone);\n\t}\n\treturn node;\n}\n\n/**\n * Don't mark this as side-effect-free, hydration needs to walk all nodes\n * @param {any} value\n */\nexport function text(value = '') {\n\tif (!hydrating) {\n\t\tvar t = create_text(value + '');\n\t\tassign_nodes(t, t);\n\t\treturn t;\n\t}\n\n\tvar node = hydrate_node;\n\n\tif (node.nodeType !== 3) {\n\t\t// if an {expression} is empty during SSR, we need to insert an empty text node\n\t\tnode.before((node = create_text()));\n\t\tset_hydrate_node(node);\n\t}\n\n\tassign_nodes(node, node);\n\treturn node;\n}\n\nexport function comment() {\n\t// we're not delegating to `template` here for performance reasons\n\tif (hydrating) {\n\t\tassign_nodes(hydrate_node, null);\n\t\treturn hydrate_node;\n\t}\n\n\tvar frag = document.createDocumentFragment();\n\tvar start = document.createComment('');\n\tvar anchor = create_text();\n\tfrag.append(start, anchor);\n\n\tassign_nodes(start, anchor);\n\n\treturn frag;\n}\n\n/**\n * Assign the created (or in hydration mode, traversed) dom elements to the current block\n * and insert the elements into the dom (in client mode).\n * @param {Text | Comment | Element} anchor\n * @param {DocumentFragment | Element} dom\n */\nexport function append(anchor, dom) {\n\tif (hydrating) {\n\t\t/** @type {Effect} */ (active_effect).nodes_end = hydrate_node;\n\t\thydrate_next();\n\t\treturn;\n\t}\n\n\tif (anchor === null) {\n\t\t// edge case — void `<svelte:element>` with content\n\t\treturn;\n\t}\n\n\tanchor.before(/** @type {Node} */ (dom));\n}\n","/** @param {string} html */\nexport function create_fragment_from_html(html) {\n\tvar elem = document.createElement('template');\n\telem.innerHTML = html;\n\treturn elem.content;\n}\n","/** @import { ComponentContext, Effect, TemplateNode } from '#client' */\n/** @import { Component, ComponentType, SvelteComponent, MountOptions } from '../../index.js' */\nimport { DEV } from 'esm-env';\nimport {\n\tclear_text_content,\n\tcreate_text,\n\tget_first_child,\n\tget_next_sibling,\n\tinit_operations\n} from './dom/operations.js';\nimport { HYDRATION_END, HYDRATION_ERROR, HYDRATION_START } from '../../constants.js';\nimport { active_effect } from './runtime.js';\nimport { push, pop, component_context } from './context.js';\nimport { component_root, branch } from './reactivity/effects.js';\nimport {\n\thydrate_next,\n\thydrate_node,\n\thydrating,\n\tset_hydrate_node,\n\tset_hydrating\n} from './dom/hydration.js';\nimport { array_from } from '../shared/utils.js';\nimport {\n\tall_registered_events,\n\thandle_event_propagation,\n\troot_event_handles\n} from './dom/elements/events.js';\nimport { reset_head_anchor } from './dom/blocks/svelte-head.js';\nimport * as w from './warnings.js';\nimport * as e from './errors.js';\nimport { assign_nodes } from './dom/template.js';\nimport { is_passive_event } from '../../utils.js';\n\n/**\n * This is normally true — block effects should run their intro transitions —\n * but is false during hydration (unless `options.intro` is `true`) and\n * when creating the children of a `<svelte:element>` that just changed tag\n */\nexport let should_intro = true;\n\n/** @param {boolean} value */\nexport function set_should_intro(value) {\n\tshould_intro = value;\n}\n\n/**\n * @param {Element} text\n * @param {string} value\n * @returns {void}\n */\nexport function set_text(text, value) {\n\t// For objects, we apply string coercion (which might make things like $state array references in the template reactive) before diffing\n\tvar str = value == null ? '' : typeof value === 'object' ? value + '' : value;\n\t// @ts-expect-error\n\tif (str !== (text.__t ??= text.nodeValue)) {\n\t\t// @ts-expect-error\n\t\ttext.__t = str;\n\t\ttext.nodeValue = str == null ? '' : str + '';\n\t}\n}\n\n/**\n * Mounts a component to the given target and returns the exports and potentially the props (if compiled with `accessors: true`) of the component.\n * Transitions will play during the initial render unless the `intro` option is set to `false`.\n *\n * @template {Record<string, any>} Props\n * @template {Record<string, any>} Exports\n * @param {ComponentType<SvelteComponent<Props>> | Component<Props, Exports, any>} component\n * @param {MountOptions<Props>} options\n * @returns {Exports}\n */\nexport function mount(component, options) {\n\treturn _mount(component, options);\n}\n\n/**\n * Hydrates a component on the given target and returns the exports and potentially the props (if compiled with `accessors: true`) of the component\n *\n * @template {Record<string, any>} Props\n * @template {Record<string, any>} Exports\n * @param {ComponentType<SvelteComponent<Props>> | Component<Props, Exports, any>} component\n * @param {{} extends Props ? {\n * \t\ttarget: Document | Element | ShadowRoot;\n * \t\tprops?: Props;\n * \t\tevents?: Record<string, (e: any) => any>;\n *  \tcontext?: Map<any, any>;\n * \t\tintro?: boolean;\n * \t\trecover?: boolean;\n * \t} : {\n * \t\ttarget: Document | Element | ShadowRoot;\n * \t\tprops: Props;\n * \t\tevents?: Record<string, (e: any) => any>;\n *  \tcontext?: Map<any, any>;\n * \t\tintro?: boolean;\n * \t\trecover?: boolean;\n * \t}} options\n * @returns {Exports}\n */\nexport function hydrate(component, options) {\n\tinit_operations();\n\toptions.intro = options.intro ?? false;\n\tconst target = options.target;\n\tconst was_hydrating = hydrating;\n\tconst previous_hydrate_node = hydrate_node;\n\n\ttry {\n\t\tvar anchor = /** @type {TemplateNode} */ (get_first_child(target));\n\t\twhile (\n\t\t\tanchor &&\n\t\t\t(anchor.nodeType !== 8 || /** @type {Comment} */ (anchor).data !== HYDRATION_START)\n\t\t) {\n\t\t\tanchor = /** @type {TemplateNode} */ (get_next_sibling(anchor));\n\t\t}\n\n\t\tif (!anchor) {\n\t\t\tthrow HYDRATION_ERROR;\n\t\t}\n\n\t\tset_hydrating(true);\n\t\tset_hydrate_node(/** @type {Comment} */ (anchor));\n\t\thydrate_next();\n\n\t\tconst instance = _mount(component, { ...options, anchor });\n\n\t\tif (\n\t\t\thydrate_node === null ||\n\t\t\thydrate_node.nodeType !== 8 ||\n\t\t\t/** @type {Comment} */ (hydrate_node).data !== HYDRATION_END\n\t\t) {\n\t\t\tw.hydration_mismatch();\n\t\t\tthrow HYDRATION_ERROR;\n\t\t}\n\n\t\tset_hydrating(false);\n\n\t\treturn /**  @type {Exports} */ (instance);\n\t} catch (error) {\n\t\tif (error === HYDRATION_ERROR) {\n\t\t\tif (options.recover === false) {\n\t\t\t\te.hydration_failed();\n\t\t\t}\n\n\t\t\t// If an error occured above, the operations might not yet have been initialised.\n\t\t\tinit_operations();\n\t\t\tclear_text_content(target);\n\n\t\t\tset_hydrating(false);\n\t\t\treturn mount(component, options);\n\t\t}\n\n\t\tthrow error;\n\t} finally {\n\t\tset_hydrating(was_hydrating);\n\t\tset_hydrate_node(previous_hydrate_node);\n\t\treset_head_anchor();\n\t}\n}\n\n/** @type {Map<string, number>} */\nconst document_listeners = new Map();\n\n/**\n * @template {Record<string, any>} Exports\n * @param {ComponentType<SvelteComponent<any>> | Component<any>} Component\n * @param {MountOptions} options\n * @returns {Exports}\n */\nfunction _mount(Component, { target, anchor, props = {}, events, context, intro = true }) {\n\tinit_operations();\n\n\tvar registered_events = new Set();\n\n\t/** @param {Array<string>} events */\n\tvar event_handle = (events) => {\n\t\tfor (var i = 0; i < events.length; i++) {\n\t\t\tvar event_name = events[i];\n\n\t\t\tif (registered_events.has(event_name)) continue;\n\t\t\tregistered_events.add(event_name);\n\n\t\t\tvar passive = is_passive_event(event_name);\n\n\t\t\t// Add the event listener to both the container and the document.\n\t\t\t// The container listener ensures we catch events from within in case\n\t\t\t// the outer content stops propagation of the event.\n\t\t\ttarget.addEventListener(event_name, handle_event_propagation, { passive });\n\n\t\t\tvar n = document_listeners.get(event_name);\n\n\t\t\tif (n === undefined) {\n\t\t\t\t// The document listener ensures we catch events that originate from elements that were\n\t\t\t\t// manually moved outside of the container (e.g. via manual portals).\n\t\t\t\tdocument.addEventListener(event_name, handle_event_propagation, { passive });\n\t\t\t\tdocument_listeners.set(event_name, 1);\n\t\t\t} else {\n\t\t\t\tdocument_listeners.set(event_name, n + 1);\n\t\t\t}\n\t\t}\n\t};\n\n\tevent_handle(array_from(all_registered_events));\n\troot_event_handles.add(event_handle);\n\n\t/** @type {Exports} */\n\t// @ts-expect-error will be defined because the render effect runs synchronously\n\tvar component = undefined;\n\n\tvar unmount = component_root(() => {\n\t\tvar anchor_node = anchor ?? target.appendChild(create_text());\n\n\t\tbranch(() => {\n\t\t\tif (context) {\n\t\t\t\tpush({});\n\t\t\t\tvar ctx = /** @type {ComponentContext} */ (component_context);\n\t\t\t\tctx.c = context;\n\t\t\t}\n\n\t\t\tif (events) {\n\t\t\t\t// We can't spread the object or else we'd lose the state proxy stuff, if it is one\n\t\t\t\t/** @type {any} */ (props).$$events = events;\n\t\t\t}\n\n\t\t\tif (hydrating) {\n\t\t\t\tassign_nodes(/** @type {TemplateNode} */ (anchor_node), null);\n\t\t\t}\n\n\t\t\tshould_intro = intro;\n\t\t\t// @ts-expect-error the public typings are not what the actual function looks like\n\t\t\tcomponent = Component(anchor_node, props) || {};\n\t\t\tshould_intro = true;\n\n\t\t\tif (hydrating) {\n\t\t\t\t/** @type {Effect} */ (active_effect).nodes_end = hydrate_node;\n\t\t\t}\n\n\t\t\tif (context) {\n\t\t\t\tpop();\n\t\t\t}\n\t\t});\n\n\t\treturn () => {\n\t\t\tfor (var event_name of registered_events) {\n\t\t\t\ttarget.removeEventListener(event_name, handle_event_propagation);\n\n\t\t\t\tvar n = /** @type {number} */ (document_listeners.get(event_name));\n\n\t\t\t\tif (--n === 0) {\n\t\t\t\t\tdocument.removeEventListener(event_name, handle_event_propagation);\n\t\t\t\t\tdocument_listeners.delete(event_name);\n\t\t\t\t} else {\n\t\t\t\t\tdocument_listeners.set(event_name, n);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\troot_event_handles.delete(event_handle);\n\n\t\t\tif (anchor_node !== anchor) {\n\t\t\t\tanchor_node.parentNode?.removeChild(anchor_node);\n\t\t\t}\n\t\t};\n\t});\n\n\tmounted_components.set(component, unmount);\n\treturn component;\n}\n\n/**\n * References of the components that were mounted or hydrated.\n * Uses a `WeakMap` to avoid memory leaks.\n */\nlet mounted_components = new WeakMap();\n\n/**\n * Unmounts a component that was previously mounted using `mount` or `hydrate`.\n *\n * Since 5.13.0, if `options.outro` is `true`, [transitions](https://svelte.dev/docs/svelte/transition) will play before the component is removed from the DOM.\n *\n * Returns a `Promise` that resolves after transitions have completed if `options.outro` is true, or immediately otherwise (prior to 5.13.0, returns `void`).\n *\n * ```js\n * import { mount, unmount } from 'svelte';\n * import App from './App.svelte';\n *\n * const app = mount(App, { target: document.body });\n *\n * // later...\n * unmount(app, { outro: true });\n * ```\n * @param {Record<string, any>} component\n * @param {{ outro?: boolean }} [options]\n * @returns {Promise<void>}\n */\nexport function unmount(component, options) {\n\tconst fn = mounted_components.get(component);\n\n\tif (fn) {\n\t\tmounted_components.delete(component);\n\t\treturn fn(options);\n\t}\n\n\tif (DEV) {\n\t\tw.lifecycle_double_unmount();\n\t}\n\n\treturn Promise.resolve();\n}\n","/** @import { Effect, TemplateNode } from '#client' */\nimport { EFFECT_TRANSPARENT } from '../../constants.js';\nimport {\n\thydrate_next,\n\thydrate_node,\n\thydrating,\n\tremove_nodes,\n\tset_hydrate_node,\n\tset_hydrating\n} from '../hydration.js';\nimport { block, branch, pause_effect, resume_effect } from '../../reactivity/effects.js';\nimport { HYDRATION_START_ELSE, UNINITIALIZED } from '../../../../constants.js';\n\n/**\n * @param {TemplateNode} node\n * @param {(branch: (fn: (anchor: Node) => void, flag?: boolean) => void) => void} fn\n * @param {boolean} [elseif] True if this is an `{:else if ...}` block rather than an `{#if ...}`, as that affects which transitions are considered 'local'\n * @returns {void}\n */\nexport function if_block(node, fn, elseif = false) {\n\tif (hydrating) {\n\t\thydrate_next();\n\t}\n\n\tvar anchor = node;\n\n\t/** @type {Effect | null} */\n\tvar consequent_effect = null;\n\n\t/** @type {Effect | null} */\n\tvar alternate_effect = null;\n\n\t/** @type {UNINITIALIZED | boolean | null} */\n\tvar condition = UNINITIALIZED;\n\n\tvar flags = elseif ? EFFECT_TRANSPARENT : 0;\n\n\tvar has_branch = false;\n\n\tconst set_branch = (/** @type {(anchor: Node) => void} */ fn, flag = true) => {\n\t\thas_branch = true;\n\t\tupdate_branch(flag, fn);\n\t};\n\n\tconst update_branch = (\n\t\t/** @type {boolean | null} */ new_condition,\n\t\t/** @type {null | ((anchor: Node) => void)} */ fn\n\t) => {\n\t\tif (condition === (condition = new_condition)) return;\n\n\t\t/** Whether or not there was a hydration mismatch. Needs to be a `let` or else it isn't treeshaken out */\n\t\tlet mismatch = false;\n\n\t\tif (hydrating) {\n\t\t\tconst is_else = /** @type {Comment} */ (anchor).data === HYDRATION_START_ELSE;\n\n\t\t\tif (!!condition === is_else) {\n\t\t\t\t// Hydration mismatch: remove everything inside the anchor and start fresh.\n\t\t\t\t// This could happen with `{#if browser}...{/if}`, for example\n\t\t\t\tanchor = remove_nodes();\n\n\t\t\t\tset_hydrate_node(anchor);\n\t\t\t\tset_hydrating(false);\n\t\t\t\tmismatch = true;\n\t\t\t}\n\t\t}\n\n\t\tif (condition) {\n\t\t\tif (consequent_effect) {\n\t\t\t\tresume_effect(consequent_effect);\n\t\t\t} else if (fn) {\n\t\t\t\tconsequent_effect = branch(() => fn(anchor));\n\t\t\t}\n\n\t\t\tif (alternate_effect) {\n\t\t\t\tpause_effect(alternate_effect, () => {\n\t\t\t\t\talternate_effect = null;\n\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\tif (alternate_effect) {\n\t\t\t\tresume_effect(alternate_effect);\n\t\t\t} else if (fn) {\n\t\t\t\talternate_effect = branch(() => fn(anchor));\n\t\t\t}\n\n\t\t\tif (consequent_effect) {\n\t\t\t\tpause_effect(consequent_effect, () => {\n\t\t\t\t\tconsequent_effect = null;\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tif (mismatch) {\n\t\t\t// continue in hydration mode\n\t\t\tset_hydrating(true);\n\t\t}\n\t};\n\n\tblock(() => {\n\t\thas_branch = false;\n\t\tfn(set_branch);\n\t\tif (!has_branch) {\n\t\t\tupdate_branch(null, null);\n\t\t}\n\t}, flags);\n\n\tif (hydrating) {\n\t\tanchor = hydrate_node;\n\t}\n}\n","/** @import { EachItem, EachState, Effect, MaybeSource, Source, TemplateNode, TransitionManager, Value } from '#client' */\nimport {\n\tEACH_INDEX_REACTIVE,\n\tEACH_IS_ANIMATED,\n\tEACH_IS_CONTROLLED,\n\tEACH_ITEM_IMMUTABLE,\n\tEACH_ITEM_REACTIVE,\n\tHYDRATION_END,\n\tHYDRATION_START_ELSE\n} from '../../../../constants.js';\nimport {\n\thydrate_next,\n\thydrate_node,\n\thydrating,\n\tremove_nodes,\n\tset_hydrate_node,\n\tset_hydrating\n} from '../hydration.js';\nimport {\n\tclear_text_content,\n\tcreate_text,\n\tget_first_child,\n\tget_next_sibling\n} from '../operations.js';\nimport {\n\tblock,\n\tbranch,\n\tdestroy_effect,\n\trun_out_transitions,\n\tpause_children,\n\tpause_effect,\n\tresume_effect\n} from '../../reactivity/effects.js';\nimport { source, mutable_source, internal_set } from '../../reactivity/sources.js';\nimport { array_from, is_array } from '../../../shared/utils.js';\nimport { INERT } from '../../constants.js';\nimport { queue_micro_task } from '../task.js';\nimport { active_effect, active_reaction, get } from '../../runtime.js';\nimport { DEV } from 'esm-env';\nimport { derived_safe_equal } from '../../reactivity/deriveds.js';\n\n/**\n * The row of a keyed each block that is currently updating. We track this\n * so that `animate:` directives have something to attach themselves to\n * @type {EachItem | null}\n */\nexport let current_each_item = null;\n\n/** @param {EachItem | null} item */\nexport function set_current_each_item(item) {\n\tcurrent_each_item = item;\n}\n\n/**\n * @param {any} _\n * @param {number} i\n */\nexport function index(_, i) {\n\treturn i;\n}\n\n/**\n * Pause multiple effects simultaneously, and coordinate their\n * subsequent destruction. Used in each blocks\n * @param {EachState} state\n * @param {EachItem[]} items\n * @param {null | Node} controlled_anchor\n * @param {Map<any, EachItem>} items_map\n */\nfunction pause_effects(state, items, controlled_anchor, items_map) {\n\t/** @type {TransitionManager[]} */\n\tvar transitions = [];\n\tvar length = items.length;\n\n\tfor (var i = 0; i < length; i++) {\n\t\tpause_children(items[i].e, transitions, true);\n\t}\n\n\tvar is_controlled = length > 0 && transitions.length === 0 && controlled_anchor !== null;\n\t// If we have a controlled anchor, it means that the each block is inside a single\n\t// DOM element, so we can apply a fast-path for clearing the contents of the element.\n\tif (is_controlled) {\n\t\tvar parent_node = /** @type {Element} */ (\n\t\t\t/** @type {Element} */ (controlled_anchor).parentNode\n\t\t);\n\t\tclear_text_content(parent_node);\n\t\tparent_node.append(/** @type {Element} */ (controlled_anchor));\n\t\titems_map.clear();\n\t\tlink(state, items[0].prev, items[length - 1].next);\n\t}\n\n\trun_out_transitions(transitions, () => {\n\t\tfor (var i = 0; i < length; i++) {\n\t\t\tvar item = items[i];\n\t\t\tif (!is_controlled) {\n\t\t\t\titems_map.delete(item.k);\n\t\t\t\tlink(state, item.prev, item.next);\n\t\t\t}\n\t\t\tdestroy_effect(item.e, !is_controlled);\n\t\t}\n\t});\n}\n\n/**\n * @template V\n * @param {Element | Comment} node The next sibling node, or the parent node if this is a 'controlled' block\n * @param {number} flags\n * @param {() => V[]} get_collection\n * @param {(value: V, index: number) => any} get_key\n * @param {(anchor: Node, item: MaybeSource<V>, index: MaybeSource<number>) => void} render_fn\n * @param {null | ((anchor: Node) => void)} fallback_fn\n * @returns {void}\n */\nexport function each(node, flags, get_collection, get_key, render_fn, fallback_fn = null) {\n\tvar anchor = node;\n\n\t/** @type {EachState} */\n\tvar state = { flags, items: new Map(), first: null };\n\n\tvar is_controlled = (flags & EACH_IS_CONTROLLED) !== 0;\n\n\tif (is_controlled) {\n\t\tvar parent_node = /** @type {Element} */ (node);\n\n\t\tanchor = hydrating\n\t\t\t? set_hydrate_node(/** @type {Comment | Text} */ (get_first_child(parent_node)))\n\t\t\t: parent_node.appendChild(create_text());\n\t}\n\n\tif (hydrating) {\n\t\thydrate_next();\n\t}\n\n\t/** @type {Effect | null} */\n\tvar fallback = null;\n\n\tvar was_empty = false;\n\n\t// TODO: ideally we could use derived for runes mode but because of the ability\n\t// to use a store which can be mutated, we can't do that here as mutating a store\n\t// will still result in the collection array being the same from the store\n\tvar each_array = derived_safe_equal(() => {\n\t\tvar collection = get_collection();\n\n\t\treturn is_array(collection) ? collection : collection == null ? [] : array_from(collection);\n\t});\n\n\tblock(() => {\n\t\tvar array = get(each_array);\n\t\tvar length = array.length;\n\n\t\tif (was_empty && length === 0) {\n\t\t\t// ignore updates if the array is empty,\n\t\t\t// and it already was empty on previous run\n\t\t\treturn;\n\t\t}\n\t\twas_empty = length === 0;\n\n\t\t/** `true` if there was a hydration mismatch. Needs to be a `let` or else it isn't treeshaken out */\n\t\tlet mismatch = false;\n\n\t\tif (hydrating) {\n\t\t\tvar is_else = /** @type {Comment} */ (anchor).data === HYDRATION_START_ELSE;\n\n\t\t\tif (is_else !== (length === 0)) {\n\t\t\t\t// hydration mismatch — remove the server-rendered DOM and start over\n\t\t\t\tanchor = remove_nodes();\n\n\t\t\t\tset_hydrate_node(anchor);\n\t\t\t\tset_hydrating(false);\n\t\t\t\tmismatch = true;\n\t\t\t}\n\t\t}\n\n\t\t// this is separate to the previous block because `hydrating` might change\n\t\tif (hydrating) {\n\t\t\t/** @type {EachItem | null} */\n\t\t\tvar prev = null;\n\n\t\t\t/** @type {EachItem} */\n\t\t\tvar item;\n\n\t\t\tfor (var i = 0; i < length; i++) {\n\t\t\t\tif (\n\t\t\t\t\thydrate_node.nodeType === 8 &&\n\t\t\t\t\t/** @type {Comment} */ (hydrate_node).data === HYDRATION_END\n\t\t\t\t) {\n\t\t\t\t\t// The server rendered fewer items than expected,\n\t\t\t\t\t// so break out and continue appending non-hydrated items\n\t\t\t\t\tanchor = /** @type {Comment} */ (hydrate_node);\n\t\t\t\t\tmismatch = true;\n\t\t\t\t\tset_hydrating(false);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tvar value = array[i];\n\t\t\t\tvar key = get_key(value, i);\n\t\t\t\titem = create_item(\n\t\t\t\t\thydrate_node,\n\t\t\t\t\tstate,\n\t\t\t\t\tprev,\n\t\t\t\t\tnull,\n\t\t\t\t\tvalue,\n\t\t\t\t\tkey,\n\t\t\t\t\ti,\n\t\t\t\t\trender_fn,\n\t\t\t\t\tflags,\n\t\t\t\t\tget_collection\n\t\t\t\t);\n\t\t\t\tstate.items.set(key, item);\n\n\t\t\t\tprev = item;\n\t\t\t}\n\n\t\t\t// remove excess nodes\n\t\t\tif (length > 0) {\n\t\t\t\tset_hydrate_node(remove_nodes());\n\t\t\t}\n\t\t}\n\n\t\tif (!hydrating) {\n\t\t\treconcile(array, state, anchor, render_fn, flags, get_key, get_collection);\n\t\t}\n\n\t\tif (fallback_fn !== null) {\n\t\t\tif (length === 0) {\n\t\t\t\tif (fallback) {\n\t\t\t\t\tresume_effect(fallback);\n\t\t\t\t} else {\n\t\t\t\t\tfallback = branch(() => fallback_fn(anchor));\n\t\t\t\t}\n\t\t\t} else if (fallback !== null) {\n\t\t\t\tpause_effect(fallback, () => {\n\t\t\t\t\tfallback = null;\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tif (mismatch) {\n\t\t\t// continue in hydration mode\n\t\t\tset_hydrating(true);\n\t\t}\n\n\t\t// When we mount the each block for the first time, the collection won't be\n\t\t// connected to this effect as the effect hasn't finished running yet and its deps\n\t\t// won't be assigned. However, it's possible that when reconciling the each block\n\t\t// that a mutation occurred and it's made the collection MAYBE_DIRTY, so reading the\n\t\t// collection again can provide consistency to the reactive graph again as the deriveds\n\t\t// will now be `CLEAN`.\n\t\tget(each_array);\n\t});\n\n\tif (hydrating) {\n\t\tanchor = hydrate_node;\n\t}\n}\n\n/**\n * Add, remove, or reorder items output by an each block as its input changes\n * @template V\n * @param {Array<V>} array\n * @param {EachState} state\n * @param {Element | Comment | Text} anchor\n * @param {(anchor: Node, item: MaybeSource<V>, index: number | Source<number>, collection: () => V[]) => void} render_fn\n * @param {number} flags\n * @param {(value: V, index: number) => any} get_key\n * @param {() => V[]} get_collection\n * @returns {void}\n */\nfunction reconcile(array, state, anchor, render_fn, flags, get_key, get_collection) {\n\tvar is_animated = (flags & EACH_IS_ANIMATED) !== 0;\n\tvar should_update = (flags & (EACH_ITEM_REACTIVE | EACH_INDEX_REACTIVE)) !== 0;\n\n\tvar length = array.length;\n\tvar items = state.items;\n\tvar first = state.first;\n\tvar current = first;\n\n\t/** @type {undefined | Set<EachItem>} */\n\tvar seen;\n\n\t/** @type {EachItem | null} */\n\tvar prev = null;\n\n\t/** @type {undefined | Set<EachItem>} */\n\tvar to_animate;\n\n\t/** @type {EachItem[]} */\n\tvar matched = [];\n\n\t/** @type {EachItem[]} */\n\tvar stashed = [];\n\n\t/** @type {V} */\n\tvar value;\n\n\t/** @type {any} */\n\tvar key;\n\n\t/** @type {EachItem | undefined} */\n\tvar item;\n\n\t/** @type {number} */\n\tvar i;\n\n\tif (is_animated) {\n\t\tfor (i = 0; i < length; i += 1) {\n\t\t\tvalue = array[i];\n\t\t\tkey = get_key(value, i);\n\t\t\titem = items.get(key);\n\n\t\t\tif (item !== undefined) {\n\t\t\t\titem.a?.measure();\n\t\t\t\t(to_animate ??= new Set()).add(item);\n\t\t\t}\n\t\t}\n\t}\n\n\tfor (i = 0; i < length; i += 1) {\n\t\tvalue = array[i];\n\t\tkey = get_key(value, i);\n\t\titem = items.get(key);\n\n\t\tif (item === undefined) {\n\t\t\tvar child_anchor = current ? /** @type {TemplateNode} */ (current.e.nodes_start) : anchor;\n\n\t\t\tprev = create_item(\n\t\t\t\tchild_anchor,\n\t\t\t\tstate,\n\t\t\t\tprev,\n\t\t\t\tprev === null ? state.first : prev.next,\n\t\t\t\tvalue,\n\t\t\t\tkey,\n\t\t\t\ti,\n\t\t\t\trender_fn,\n\t\t\t\tflags,\n\t\t\t\tget_collection\n\t\t\t);\n\n\t\t\titems.set(key, prev);\n\n\t\t\tmatched = [];\n\t\t\tstashed = [];\n\n\t\t\tcurrent = prev.next;\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (should_update) {\n\t\t\tupdate_item(item, value, i, flags);\n\t\t}\n\n\t\tif ((item.e.f & INERT) !== 0) {\n\t\t\tresume_effect(item.e);\n\t\t\tif (is_animated) {\n\t\t\t\titem.a?.unfix();\n\t\t\t\t(to_animate ??= new Set()).delete(item);\n\t\t\t}\n\t\t}\n\n\t\tif (item !== current) {\n\t\t\tif (seen !== undefined && seen.has(item)) {\n\t\t\t\tif (matched.length < stashed.length) {\n\t\t\t\t\t// more efficient to move later items to the front\n\t\t\t\t\tvar start = stashed[0];\n\t\t\t\t\tvar j;\n\n\t\t\t\t\tprev = start.prev;\n\n\t\t\t\t\tvar a = matched[0];\n\t\t\t\t\tvar b = matched[matched.length - 1];\n\n\t\t\t\t\tfor (j = 0; j < matched.length; j += 1) {\n\t\t\t\t\t\tmove(matched[j], start, anchor);\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (j = 0; j < stashed.length; j += 1) {\n\t\t\t\t\t\tseen.delete(stashed[j]);\n\t\t\t\t\t}\n\n\t\t\t\t\tlink(state, a.prev, b.next);\n\t\t\t\t\tlink(state, prev, a);\n\t\t\t\t\tlink(state, b, start);\n\n\t\t\t\t\tcurrent = start;\n\t\t\t\t\tprev = b;\n\t\t\t\t\ti -= 1;\n\n\t\t\t\t\tmatched = [];\n\t\t\t\t\tstashed = [];\n\t\t\t\t} else {\n\t\t\t\t\t// more efficient to move earlier items to the back\n\t\t\t\t\tseen.delete(item);\n\t\t\t\t\tmove(item, current, anchor);\n\n\t\t\t\t\tlink(state, item.prev, item.next);\n\t\t\t\t\tlink(state, item, prev === null ? state.first : prev.next);\n\t\t\t\t\tlink(state, prev, item);\n\n\t\t\t\t\tprev = item;\n\t\t\t\t}\n\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tmatched = [];\n\t\t\tstashed = [];\n\n\t\t\twhile (current !== null && current.k !== key) {\n\t\t\t\t// If the each block isn't inert and an item has an effect that is already inert,\n\t\t\t\t// skip over adding it to our seen Set as the item is already being handled\n\t\t\t\tif ((current.e.f & INERT) === 0) {\n\t\t\t\t\t(seen ??= new Set()).add(current);\n\t\t\t\t}\n\t\t\t\tstashed.push(current);\n\t\t\t\tcurrent = current.next;\n\t\t\t}\n\n\t\t\tif (current === null) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\titem = current;\n\t\t}\n\n\t\tmatched.push(item);\n\t\tprev = item;\n\t\tcurrent = item.next;\n\t}\n\n\tif (current !== null || seen !== undefined) {\n\t\tvar to_destroy = seen === undefined ? [] : array_from(seen);\n\n\t\twhile (current !== null) {\n\t\t\t// If the each block isn't inert, then inert effects are currently outroing and will be removed once the transition is finished\n\t\t\tif ((current.e.f & INERT) === 0) {\n\t\t\t\tto_destroy.push(current);\n\t\t\t}\n\t\t\tcurrent = current.next;\n\t\t}\n\n\t\tvar destroy_length = to_destroy.length;\n\n\t\tif (destroy_length > 0) {\n\t\t\tvar controlled_anchor = (flags & EACH_IS_CONTROLLED) !== 0 && length === 0 ? anchor : null;\n\n\t\t\tif (is_animated) {\n\t\t\t\tfor (i = 0; i < destroy_length; i += 1) {\n\t\t\t\t\tto_destroy[i].a?.measure();\n\t\t\t\t}\n\n\t\t\t\tfor (i = 0; i < destroy_length; i += 1) {\n\t\t\t\t\tto_destroy[i].a?.fix();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tpause_effects(state, to_destroy, controlled_anchor, items);\n\t\t}\n\t}\n\n\tif (is_animated) {\n\t\tqueue_micro_task(() => {\n\t\t\tif (to_animate === undefined) return;\n\t\t\tfor (item of to_animate) {\n\t\t\t\titem.a?.apply();\n\t\t\t}\n\t\t});\n\t}\n\n\t/** @type {Effect} */ (active_effect).first = state.first && state.first.e;\n\t/** @type {Effect} */ (active_effect).last = prev && prev.e;\n}\n\n/**\n * @param {EachItem} item\n * @param {any} value\n * @param {number} index\n * @param {number} type\n * @returns {void}\n */\nfunction update_item(item, value, index, type) {\n\tif ((type & EACH_ITEM_REACTIVE) !== 0) {\n\t\tinternal_set(item.v, value);\n\t}\n\n\tif ((type & EACH_INDEX_REACTIVE) !== 0) {\n\t\tinternal_set(/** @type {Value<number>} */ (item.i), index);\n\t} else {\n\t\titem.i = index;\n\t}\n}\n\n/**\n * @template V\n * @param {Node} anchor\n * @param {EachState} state\n * @param {EachItem | null} prev\n * @param {EachItem | null} next\n * @param {V} value\n * @param {unknown} key\n * @param {number} index\n * @param {(anchor: Node, item: V | Source<V>, index: number | Value<number>, collection: () => V[]) => void} render_fn\n * @param {number} flags\n * @param {() => V[]} get_collection\n * @returns {EachItem}\n */\nfunction create_item(\n\tanchor,\n\tstate,\n\tprev,\n\tnext,\n\tvalue,\n\tkey,\n\tindex,\n\trender_fn,\n\tflags,\n\tget_collection\n) {\n\tvar previous_each_item = current_each_item;\n\tvar reactive = (flags & EACH_ITEM_REACTIVE) !== 0;\n\tvar mutable = (flags & EACH_ITEM_IMMUTABLE) === 0;\n\n\tvar v = reactive ? (mutable ? mutable_source(value) : source(value)) : value;\n\tvar i = (flags & EACH_INDEX_REACTIVE) === 0 ? index : source(index);\n\n\tif (DEV && reactive) {\n\t\t// For tracing purposes, we need to link the source signal we create with the\n\t\t// collection + index so that tracing works as intended\n\t\t/** @type {Value} */ (v).debug = () => {\n\t\t\tvar collection_index = typeof i === 'number' ? index : i.v;\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-unused-expressions\n\t\t\tget_collection()[collection_index];\n\t\t};\n\t}\n\n\t/** @type {EachItem} */\n\tvar item = {\n\t\ti,\n\t\tv,\n\t\tk: key,\n\t\ta: null,\n\t\t// @ts-expect-error\n\t\te: null,\n\t\tprev,\n\t\tnext\n\t};\n\n\tcurrent_each_item = item;\n\n\ttry {\n\t\titem.e = branch(() => render_fn(anchor, v, i, get_collection), hydrating);\n\n\t\titem.e.prev = prev && prev.e;\n\t\titem.e.next = next && next.e;\n\n\t\tif (prev === null) {\n\t\t\tstate.first = item;\n\t\t} else {\n\t\t\tprev.next = item;\n\t\t\tprev.e.next = item.e;\n\t\t}\n\n\t\tif (next !== null) {\n\t\t\tnext.prev = item;\n\t\t\tnext.e.prev = item.e;\n\t\t}\n\n\t\treturn item;\n\t} finally {\n\t\tcurrent_each_item = previous_each_item;\n\t}\n}\n\n/**\n * @param {EachItem} item\n * @param {EachItem | null} next\n * @param {Text | Element | Comment} anchor\n */\nfunction move(item, next, anchor) {\n\tvar end = item.next ? /** @type {TemplateNode} */ (item.next.e.nodes_start) : anchor;\n\n\tvar dest = next ? /** @type {TemplateNode} */ (next.e.nodes_start) : anchor;\n\tvar node = /** @type {TemplateNode} */ (item.e.nodes_start);\n\n\twhile (node !== end) {\n\t\tvar next_node = /** @type {TemplateNode} */ (get_next_sibling(node));\n\t\tdest.before(node);\n\t\tnode = next_node;\n\t}\n}\n\n/**\n * @param {EachState} state\n * @param {EachItem | null} prev\n * @param {EachItem | null} next\n */\nfunction link(state, prev, next) {\n\tif (prev === null) {\n\t\tstate.first = next;\n\t} else {\n\t\tprev.next = next;\n\t\tprev.e.next = next && next.e;\n\t}\n\n\tif (next !== null) {\n\t\tnext.prev = prev;\n\t\tnext.e.prev = prev && prev.e;\n\t}\n}\n","/** @import { TemplateNode } from '#client' */\n\nimport {\n\tHYDRATION_END,\n\tHYDRATION_ERROR,\n\tHYDRATION_START,\n\tHYDRATION_START_ELSE\n} from '../../../constants.js';\nimport * as w from '../warnings.js';\nimport { get_next_sibling } from './operations.js';\n\n/**\n * Use this variable to guard everything related to hydration code so it can be treeshaken out\n * if the user doesn't use the `hydrate` method and these code paths are therefore not needed.\n */\nexport let hydrating = false;\n\n/** @param {boolean} value */\nexport function set_hydrating(value) {\n\thydrating = value;\n}\n\n/**\n * The node that is currently being hydrated. This starts out as the first node inside the opening\n * <!--[--> comment, and updates each time a component calls `$.child(...)` or `$.sibling(...)`.\n * When entering a block (e.g. `{#if ...}`), `hydrate_node` is the block opening comment; by the\n * time we leave the block it is the closing comment, which serves as the block's anchor.\n * @type {TemplateNode}\n */\nexport let hydrate_node;\n\n/** @param {TemplateNode} node */\nexport function set_hydrate_node(node) {\n\tif (node === null) {\n\t\tw.hydration_mismatch();\n\t\tthrow HYDRATION_ERROR;\n\t}\n\n\treturn (hydrate_node = node);\n}\n\nexport function hydrate_next() {\n\treturn set_hydrate_node(/** @type {TemplateNode} */ (get_next_sibling(hydrate_node)));\n}\n\n/** @param {TemplateNode} node */\nexport function reset(node) {\n\tif (!hydrating) return;\n\n\t// If the node has remaining siblings, something has gone wrong\n\tif (get_next_sibling(hydrate_node) !== null) {\n\t\tw.hydration_mismatch();\n\t\tthrow HYDRATION_ERROR;\n\t}\n\n\thydrate_node = node;\n}\n\n/**\n * @param {HTMLTemplateElement} template\n */\nexport function hydrate_template(template) {\n\tif (hydrating) {\n\t\t// @ts-expect-error TemplateNode doesn't include DocumentFragment, but it's actually fine\n\t\thydrate_node = template.content;\n\t}\n}\n\nexport function next(count = 1) {\n\tif (hydrating) {\n\t\tvar i = count;\n\t\tvar node = hydrate_node;\n\n\t\twhile (i--) {\n\t\t\tnode = /** @type {TemplateNode} */ (get_next_sibling(node));\n\t\t}\n\n\t\thydrate_node = node;\n\t}\n}\n\n/**\n * Removes all nodes starting at `hydrate_node` up until the next hydration end comment\n */\nexport function remove_nodes() {\n\tvar depth = 0;\n\tvar node = hydrate_node;\n\n\twhile (true) {\n\t\tif (node.nodeType === 8) {\n\t\t\tvar data = /** @type {Comment} */ (node).data;\n\n\t\t\tif (data === HYDRATION_END) {\n\t\t\t\tif (depth === 0) return node;\n\t\t\t\tdepth -= 1;\n\t\t\t} else if (data === HYDRATION_START || data === HYDRATION_START_ELSE) {\n\t\t\t\tdepth += 1;\n\t\t\t}\n\t\t}\n\n\t\tvar next = /** @type {TemplateNode} */ (get_next_sibling(node));\n\t\tnode.remove();\n\t\tnode = next;\n\t}\n}\n","import { DEV } from 'esm-env';\nimport { hydrating } from '../hydration.js';\nimport { get_descriptors, get_prototype_of } from '../../../shared/utils.js';\nimport { create_event, delegate } from './events.js';\nimport { add_form_reset_listener, autofocus } from './misc.js';\nimport * as w from '../../warnings.js';\nimport { LOADING_ATTR_SYMBOL } from '../../constants.js';\nimport { queue_idle_task } from '../task.js';\nimport { is_capture_event, is_delegated, normalize_attribute } from '../../../../utils.js';\nimport {\n\tactive_effect,\n\tactive_reaction,\n\tset_active_effect,\n\tset_active_reaction\n} from '../../runtime.js';\nimport { clsx } from '../../../shared/attributes.js';\n\n/**\n * The value/checked attribute in the template actually corresponds to the defaultValue property, so we need\n * to remove it upon hydration to avoid a bug when someone resets the form value.\n * @param {HTMLInputElement} input\n * @returns {void}\n */\nexport function remove_input_defaults(input) {\n\tif (!hydrating) return;\n\n\tvar already_removed = false;\n\n\t// We try and remove the default attributes later, rather than sync during hydration.\n\t// Doing it sync during hydration has a negative impact on performance, but deferring the\n\t// work in an idle task alleviates this greatly. If a form reset event comes in before\n\t// the idle callback, then we ensure the input defaults are cleared just before.\n\tvar remove_defaults = () => {\n\t\tif (already_removed) return;\n\t\talready_removed = true;\n\n\t\t// Remove the attributes but preserve the values\n\t\tif (input.hasAttribute('value')) {\n\t\t\tvar value = input.value;\n\t\t\tset_attribute(input, 'value', null);\n\t\t\tinput.value = value;\n\t\t}\n\n\t\tif (input.hasAttribute('checked')) {\n\t\t\tvar checked = input.checked;\n\t\t\tset_attribute(input, 'checked', null);\n\t\t\tinput.checked = checked;\n\t\t}\n\t};\n\n\t// @ts-expect-error\n\tinput.__on_r = remove_defaults;\n\tqueue_idle_task(remove_defaults);\n\tadd_form_reset_listener();\n}\n\n/**\n * @param {Element} element\n * @param {any} value\n */\nexport function set_value(element, value) {\n\t// @ts-expect-error\n\tvar attributes = (element.__attributes ??= {});\n\n\tif (\n\t\tattributes.value ===\n\t\t\t(attributes.value =\n\t\t\t\t// treat null and undefined the same for the initial value\n\t\t\t\tvalue ?? undefined) ||\n\t\t// @ts-expect-error\n\t\t// `progress` elements always need their value set when it's `0`\n\t\t(element.value === value && (value !== 0 || element.nodeName !== 'PROGRESS'))\n\t) {\n\t\treturn;\n\t}\n\n\t// @ts-expect-error\n\telement.value = value ?? '';\n}\n\n/**\n * @param {Element} element\n * @param {boolean} checked\n */\nexport function set_checked(element, checked) {\n\t// @ts-expect-error\n\tvar attributes = (element.__attributes ??= {});\n\n\tif (\n\t\tattributes.checked ===\n\t\t(attributes.checked =\n\t\t\t// treat null and undefined the same for the initial value\n\t\t\tchecked ?? undefined)\n\t) {\n\t\treturn;\n\t}\n\n\t// @ts-expect-error\n\telement.checked = checked;\n}\n\n/**\n * Sets the `selected` attribute on an `option` element.\n * Not set through the property because that doesn't reflect to the DOM,\n * which means it wouldn't be taken into account when a form is reset.\n * @param {HTMLOptionElement} element\n * @param {boolean} selected\n */\nexport function set_selected(element, selected) {\n\tif (selected) {\n\t\t// The selected option could've changed via user selection, and\n\t\t// setting the value without this check would set it back.\n\t\tif (!element.hasAttribute('selected')) {\n\t\t\telement.setAttribute('selected', '');\n\t\t}\n\t} else {\n\t\telement.removeAttribute('selected');\n\t}\n}\n\n/**\n * Applies the default checked property without influencing the current checked property.\n * @param {HTMLInputElement} element\n * @param {boolean} checked\n */\nexport function set_default_checked(element, checked) {\n\tconst existing_value = element.checked;\n\telement.defaultChecked = checked;\n\telement.checked = existing_value;\n}\n\n/**\n * Applies the default value property without influencing the current value property.\n * @param {HTMLInputElement | HTMLTextAreaElement} element\n * @param {string} value\n */\nexport function set_default_value(element, value) {\n\tconst existing_value = element.value;\n\telement.defaultValue = value;\n\telement.value = existing_value;\n}\n\n/**\n * @param {Element} element\n * @param {string} attribute\n * @param {string | null} value\n * @param {boolean} [skip_warning]\n */\nexport function set_attribute(element, attribute, value, skip_warning) {\n\t// @ts-expect-error\n\tvar attributes = (element.__attributes ??= {});\n\n\tif (hydrating) {\n\t\tattributes[attribute] = element.getAttribute(attribute);\n\n\t\tif (\n\t\t\tattribute === 'src' ||\n\t\t\tattribute === 'srcset' ||\n\t\t\t(attribute === 'href' && element.nodeName === 'LINK')\n\t\t) {\n\t\t\tif (!skip_warning) {\n\t\t\t\tcheck_src_in_dev_hydration(element, attribute, value ?? '');\n\t\t\t}\n\n\t\t\t// If we reset these attributes, they would result in another network request, which we want to avoid.\n\t\t\t// We assume they are the same between client and server as checking if they are equal is expensive\n\t\t\t// (we can't just compare the strings as they can be different between client and server but result in the\n\t\t\t// same url, so we would need to create hidden anchor elements to compare them)\n\t\t\treturn;\n\t\t}\n\t}\n\n\tif (attributes[attribute] === (attributes[attribute] = value)) return;\n\n\tif (attribute === 'style' && '__styles' in element) {\n\t\t// reset styles to force style: directive to update\n\t\telement.__styles = {};\n\t}\n\n\tif (attribute === 'loading') {\n\t\t// @ts-expect-error\n\t\telement[LOADING_ATTR_SYMBOL] = value;\n\t}\n\n\tif (value == null) {\n\t\telement.removeAttribute(attribute);\n\t} else if (typeof value !== 'string' && get_setters(element).includes(attribute)) {\n\t\t// @ts-ignore\n\t\telement[attribute] = value;\n\t} else {\n\t\telement.setAttribute(attribute, value);\n\t}\n}\n\n/**\n * @param {Element} dom\n * @param {string} attribute\n * @param {string} value\n */\nexport function set_xlink_attribute(dom, attribute, value) {\n\tdom.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\n\n/**\n * @param {HTMLElement} node\n * @param {string} prop\n * @param {any} value\n */\nexport function set_custom_element_data(node, prop, value) {\n\t// We need to ensure that setting custom element props, which can\n\t// invoke lifecycle methods on other custom elements, does not also\n\t// associate those lifecycle methods with the current active reaction\n\t// or effect\n\tvar previous_reaction = active_reaction;\n\tvar previous_effect = active_effect;\n\n\tset_active_reaction(null);\n\tset_active_effect(null);\n\ttry {\n\t\tif (\n\t\t\t// Don't compute setters for custom elements while they aren't registered yet,\n\t\t\t// because during their upgrade/instantiation they might add more setters.\n\t\t\t// Instead, fall back to a simple \"an object, then set as property\" heuristic.\n\t\t\tsetters_cache.has(node.nodeName) ||\n\t\t\t// customElements may not be available in browser extension contexts\n\t\t\t!customElements ||\n\t\t\tcustomElements.get(node.tagName.toLowerCase())\n\t\t\t\t? get_setters(node).includes(prop)\n\t\t\t\t: value && typeof value === 'object'\n\t\t) {\n\t\t\t// @ts-expect-error\n\t\t\tnode[prop] = value;\n\t\t} else {\n\t\t\t// We did getters etc checks already, stringify before passing to set_attribute\n\t\t\t// to ensure it doesn't invoke the same logic again, and potentially populating\n\t\t\t// the setters cache too early.\n\t\t\tset_attribute(node, prop, value == null ? value : String(value));\n\t\t}\n\t} finally {\n\t\tset_active_reaction(previous_reaction);\n\t\tset_active_effect(previous_effect);\n\t}\n}\n\n/**\n * Spreads attributes onto a DOM element, taking into account the currently set attributes\n * @param {Element & ElementCSSInlineStyle} element\n * @param {Record<string, any> | undefined} prev\n * @param {Record<string, any>} next New attributes - this function mutates this object\n * @param {string} [css_hash]\n * @param {boolean} [preserve_attribute_case]\n * @param {boolean} [is_custom_element]\n * @param {boolean} [skip_warning]\n * @returns {Record<string, any>}\n */\nexport function set_attributes(\n\telement,\n\tprev,\n\tnext,\n\tcss_hash,\n\tpreserve_attribute_case = false,\n\tis_custom_element = false,\n\tskip_warning = false\n) {\n\tvar current = prev || {};\n\tvar is_option_element = element.tagName === 'OPTION';\n\n\tfor (var key in prev) {\n\t\tif (!(key in next)) {\n\t\t\tnext[key] = null;\n\t\t}\n\t}\n\n\tif (next.class) {\n\t\tnext.class = clsx(next.class);\n\t}\n\n\tif (css_hash !== undefined) {\n\t\tnext.class = next.class ? next.class + ' ' + css_hash : css_hash;\n\t}\n\n\tvar setters = get_setters(element);\n\n\t// @ts-expect-error\n\tvar attributes = /** @type {Record<string, unknown>} **/ (element.__attributes ??= {});\n\n\t// since key is captured we use const\n\tfor (const key in next) {\n\t\t// let instead of var because referenced in a closure\n\t\tlet value = next[key];\n\n\t\t// Up here because we want to do this for the initial value, too, even if it's undefined,\n\t\t// and this wouldn't be reached in case of undefined because of the equality check below\n\t\tif (is_option_element && key === 'value' && value == null) {\n\t\t\t// The <option> element is a special case because removing the value attribute means\n\t\t\t// the value is set to the text content of the option element, and setting the value\n\t\t\t// to null or undefined means the value is set to the string \"null\" or \"undefined\".\n\t\t\t// To align with how we handle this case in non-spread-scenarios, this logic is needed.\n\t\t\t// There's a super-edge-case bug here that is left in in favor of smaller code size:\n\t\t\t// Because of the \"set missing props to null\" logic above, we can't differentiate\n\t\t\t// between a missing value and an explicitly set value of null or undefined. That means\n\t\t\t// that once set, the value attribute of an <option> element can't be removed. This is\n\t\t\t// a very rare edge case, and removing the attribute altogether isn't possible either\n\t\t\t// for the <option value={undefined}> case, so we're not losing any functionality here.\n\t\t\t// @ts-ignore\n\t\t\telement.value = element.__value = '';\n\t\t\tcurrent[key] = value;\n\t\t\tcontinue;\n\t\t}\n\n\t\tvar prev_value = current[key];\n\t\tif (value === prev_value) continue;\n\n\t\tcurrent[key] = value;\n\n\t\tvar prefix = key[0] + key[1]; // this is faster than key.slice(0, 2)\n\t\tif (prefix === '$$') continue;\n\n\t\tif (prefix === 'on') {\n\t\t\t/** @type {{ capture?: true }} */\n\t\t\tconst opts = {};\n\t\t\tconst event_handle_key = '$$' + key;\n\t\t\tlet event_name = key.slice(2);\n\t\t\tvar delegated = is_delegated(event_name);\n\n\t\t\tif (is_capture_event(event_name)) {\n\t\t\t\tevent_name = event_name.slice(0, -7);\n\t\t\t\topts.capture = true;\n\t\t\t}\n\n\t\t\tif (!delegated && prev_value) {\n\t\t\t\t// Listening to same event but different handler -> our handle function below takes care of this\n\t\t\t\t// If we were to remove and add listeners in this case, it could happen that the event is \"swallowed\"\n\t\t\t\t// (the browser seems to not know yet that a new one exists now) and doesn't reach the handler\n\t\t\t\t// https://github.com/sveltejs/svelte/issues/11903\n\t\t\t\tif (value != null) continue;\n\n\t\t\t\telement.removeEventListener(event_name, current[event_handle_key], opts);\n\t\t\t\tcurrent[event_handle_key] = null;\n\t\t\t}\n\n\t\t\tif (value != null) {\n\t\t\t\tif (!delegated) {\n\t\t\t\t\t/**\n\t\t\t\t\t * @this {any}\n\t\t\t\t\t * @param {Event} evt\n\t\t\t\t\t */\n\t\t\t\t\tfunction handle(evt) {\n\t\t\t\t\t\tcurrent[key].call(this, evt);\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrent[event_handle_key] = create_event(event_name, element, handle, opts);\n\t\t\t\t} else {\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\telement[`__${event_name}`] = value;\n\t\t\t\t\tdelegate([event_name]);\n\t\t\t\t}\n\t\t\t} else if (delegated) {\n\t\t\t\t// @ts-ignore\n\t\t\t\telement[`__${event_name}`] = undefined;\n\t\t\t}\n\t\t} else if (key === 'style' && value != null) {\n\t\t\telement.style.cssText = value + '';\n\t\t} else if (key === 'autofocus') {\n\t\t\tautofocus(/** @type {HTMLElement} */ (element), Boolean(value));\n\t\t} else if (key === '__value' || (key === 'value' && value != null)) {\n\t\t\t// @ts-ignore\n\t\t\telement.value = element[key] = element.__value = value;\n\t\t} else if (key === 'selected' && is_option_element) {\n\t\t\tset_selected(/** @type {HTMLOptionElement} */ (element), value);\n\t\t} else {\n\t\t\tvar name = key;\n\t\t\tif (!preserve_attribute_case) {\n\t\t\t\tname = normalize_attribute(name);\n\t\t\t}\n\n\t\t\tvar is_default = name === 'defaultValue' || name === 'defaultChecked';\n\n\t\t\tif (value == null && !is_custom_element && !is_default) {\n\t\t\t\tattributes[key] = null;\n\n\t\t\t\tif (name === 'value' || name === 'checked') {\n\t\t\t\t\t// removing value/checked also removes defaultValue/defaultChecked — preserve\n\t\t\t\t\tlet input = /** @type {HTMLInputElement} */ (element);\n\n\t\t\t\t\tif (name === 'value') {\n\t\t\t\t\t\tlet prev = input.defaultValue;\n\t\t\t\t\t\tinput.removeAttribute(name);\n\t\t\t\t\t\tinput.defaultValue = prev;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlet prev = input.defaultChecked;\n\t\t\t\t\t\tinput.removeAttribute(name);\n\t\t\t\t\t\tinput.defaultChecked = prev;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\telement.removeAttribute(key);\n\t\t\t\t}\n\t\t\t} else if (\n\t\t\t\tis_default ||\n\t\t\t\t(setters.includes(name) && (is_custom_element || typeof value !== 'string'))\n\t\t\t) {\n\t\t\t\t// @ts-ignore\n\t\t\t\telement[name] = value;\n\t\t\t} else if (typeof value !== 'function') {\n\t\t\t\tif (hydrating && (name === 'src' || name === 'href' || name === 'srcset')) {\n\t\t\t\t\tif (!skip_warning) check_src_in_dev_hydration(element, name, value ?? '');\n\t\t\t\t} else {\n\t\t\t\t\tset_attribute(element, name, value);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (key === 'style' && '__styles' in element) {\n\t\t\t// reset styles to force style: directive to update\n\t\t\telement.__styles = {};\n\t\t}\n\t}\n\n\treturn current;\n}\n\n/** @type {Map<string, string[]>} */\nvar setters_cache = new Map();\n\n/** @param {Element} element */\nfunction get_setters(element) {\n\tvar setters = setters_cache.get(element.nodeName);\n\tif (setters) return setters;\n\tsetters_cache.set(element.nodeName, (setters = []));\n\n\tvar descriptors;\n\tvar proto = element; // In the case of custom elements there might be setters on the instance\n\tvar element_proto = Element.prototype;\n\n\t// Stop at Element, from there on there's only unnecessary setters we're not interested in\n\t// Do not use contructor.name here as that's unreliable in some browser environments\n\twhile (element_proto !== proto) {\n\t\tdescriptors = get_descriptors(proto);\n\n\t\tfor (var key in descriptors) {\n\t\t\tif (descriptors[key].set) {\n\t\t\t\tsetters.push(key);\n\t\t\t}\n\t\t}\n\n\t\tproto = get_prototype_of(proto);\n\t}\n\n\treturn setters;\n}\n\n/**\n * @param {any} element\n * @param {string} attribute\n * @param {string} value\n */\nfunction check_src_in_dev_hydration(element, attribute, value) {\n\tif (!DEV) return;\n\tif (attribute === 'srcset' && srcset_url_equal(element, value)) return;\n\tif (src_url_equal(element.getAttribute(attribute) ?? '', value)) return;\n\n\tw.hydration_attribute_changed(\n\t\tattribute,\n\t\telement.outerHTML.replace(element.innerHTML, element.innerHTML && '...'),\n\t\tString(value)\n\t);\n}\n\n/**\n * @param {string} element_src\n * @param {string} url\n * @returns {boolean}\n */\nfunction src_url_equal(element_src, url) {\n\tif (element_src === url) return true;\n\treturn new URL(element_src, document.baseURI).href === new URL(url, document.baseURI).href;\n}\n\n/** @param {string} srcset */\nfunction split_srcset(srcset) {\n\treturn srcset.split(',').map((src) => src.trim().split(' ').filter(Boolean));\n}\n\n/**\n * @param {HTMLSourceElement | HTMLImageElement} element\n * @param {string} srcset\n * @returns {boolean}\n */\nfunction srcset_url_equal(element, srcset) {\n\tvar element_urls = split_srcset(element.srcset);\n\tvar urls = split_srcset(srcset);\n\n\treturn (\n\t\turls.length === element_urls.length &&\n\t\turls.every(\n\t\t\t([url, width], i) =>\n\t\t\t\twidth === element_urls[i][1] &&\n\t\t\t\t// We need to test both ways because Vite will create an a full URL with\n\t\t\t\t// `new URL(asset, import.meta.url).href` for the client when `base: './'`, and the\n\t\t\t\t// relative URLs inside srcset are not automatically resolved to absolute URLs by\n\t\t\t\t// browsers (in contrast to img.src). This means both SSR and DOM code could\n\t\t\t\t// contain relative or absolute URLs.\n\t\t\t\t(src_url_equal(element_urls[i][0], url) || src_url_equal(url, element_urls[i][0]))\n\t\t)\n\t);\n}\n\n/**\n * @param {HTMLImageElement} element\n * @returns {void}\n */\nexport function handle_lazy_img(element) {\n\t// If we're using an image that has a lazy loading attribute, we need to apply\n\t// the loading and src after the img element has been appended to the document.\n\t// Otherwise the lazy behaviour will not work due to our cloneNode heuristic for\n\t// templates.\n\tif (!hydrating && element.loading === 'lazy') {\n\t\tvar src = element.src;\n\t\t// @ts-expect-error\n\t\telement[LOADING_ATTR_SYMBOL] = null;\n\t\telement.loading = 'eager';\n\t\telement.removeAttribute('src');\n\t\trequestAnimationFrame(() => {\n\t\t\t// @ts-expect-error\n\t\t\tif (element[LOADING_ATTR_SYMBOL] !== 'eager') {\n\t\t\t\telement.loading = 'lazy';\n\t\t\t}\n\t\t\telement.src = src;\n\t\t});\n\t}\n}\n","/** @import { ComponentContextLegacy } from '#client' */\nimport { run, run_all } from '../../../shared/utils.js';\nimport { component_context } from '../../context.js';\nimport { derived } from '../../reactivity/deriveds.js';\nimport { user_pre_effect, user_effect } from '../../reactivity/effects.js';\nimport { deep_read_state, get, untrack } from '../../runtime.js';\n\n/**\n * Legacy-mode only: Call `onMount` callbacks and set up `beforeUpdate`/`afterUpdate` effects\n * @param {boolean} [immutable]\n */\nexport function init(immutable = false) {\n\tconst context = /** @type {ComponentContextLegacy} */ (component_context);\n\n\tconst callbacks = context.l.u;\n\tif (!callbacks) return;\n\n\tlet props = () => deep_read_state(context.s);\n\n\tif (immutable) {\n\t\tlet version = 0;\n\t\tlet prev = /** @type {Record<string, any>} */ ({});\n\n\t\t// In legacy immutable mode, before/afterUpdate only fire if the object identity of a prop changes\n\t\tconst d = derived(() => {\n\t\t\tlet changed = false;\n\t\t\tconst props = context.s;\n\t\t\tfor (const key in props) {\n\t\t\t\tif (props[key] !== prev[key]) {\n\t\t\t\t\tprev[key] = props[key];\n\t\t\t\t\tchanged = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (changed) version++;\n\t\t\treturn version;\n\t\t});\n\n\t\tprops = () => get(d);\n\t}\n\n\t// beforeUpdate\n\tif (callbacks.b.length) {\n\t\tuser_pre_effect(() => {\n\t\t\tobserve_all(context, props);\n\t\t\trun_all(callbacks.b);\n\t\t});\n\t}\n\n\t// onMount (must run before afterUpdate)\n\tuser_effect(() => {\n\t\tconst fns = untrack(() => callbacks.m.map(run));\n\t\treturn () => {\n\t\t\tfor (const fn of fns) {\n\t\t\t\tif (typeof fn === 'function') {\n\t\t\t\t\tfn();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t});\n\n\t// afterUpdate\n\tif (callbacks.a.length) {\n\t\tuser_effect(() => {\n\t\t\tobserve_all(context, props);\n\t\t\trun_all(callbacks.a);\n\t\t});\n\t}\n}\n\n/**\n * Invoke the getter of all signals associated with a component\n * so they can be registered to the effect this function is called in.\n * @param {ComponentContextLegacy} context\n * @param {(() => void)} props\n */\nfunction observe_all(context, props) {\n\tif (context.l.s) {\n\t\tfor (const signal of context.l.s) get(signal);\n\t}\n\n\tprops();\n}\n","/** @import { StoreReferencesContainer } from '#client' */\n/** @import { Store } from '#shared' */\nimport { subscribe_to_store } from '../../../store/utils.js';\nimport { get as get_store } from '../../../store/shared/index.js';\nimport { define_property, noop } from '../../shared/utils.js';\nimport { get } from '../runtime.js';\nimport { teardown } from './effects.js';\nimport { mutable_source, set } from './sources.js';\n\n/**\n * Whether or not the prop currently being read is a store binding, as in\n * `<Child bind:x={$y} />`. If it is, we treat the prop as mutable even in\n * runes mode, and skip `binding_property_non_reactive` validation\n */\nlet is_store_binding = false;\n\nlet IS_UNMOUNTED = Symbol();\n\n/**\n * Gets the current value of a store. If the store isn't subscribed to yet, it will create a proxy\n * signal that will be updated when the store is. The store references container is needed to\n * track reassignments to stores and to track the correct component context.\n * @template V\n * @param {Store<V> | null | undefined} store\n * @param {string} store_name\n * @param {StoreReferencesContainer} stores\n * @returns {V}\n */\nexport function store_get(store, store_name, stores) {\n\tconst entry = (stores[store_name] ??= {\n\t\tstore: null,\n\t\tsource: mutable_source(undefined),\n\t\tunsubscribe: noop\n\t});\n\n\t// if the component that setup this is already unmounted we don't want to register a subscription\n\tif (entry.store !== store && !(IS_UNMOUNTED in stores)) {\n\t\tentry.unsubscribe();\n\t\tentry.store = store ?? null;\n\n\t\tif (store == null) {\n\t\t\tentry.source.v = undefined; // see synchronous callback comment below\n\t\t\tentry.unsubscribe = noop;\n\t\t} else {\n\t\t\tvar is_synchronous_callback = true;\n\n\t\t\tentry.unsubscribe = subscribe_to_store(store, (v) => {\n\t\t\t\tif (is_synchronous_callback) {\n\t\t\t\t\t// If the first updates to the store value (possibly multiple of them) are synchronously\n\t\t\t\t\t// inside a derived, we will hit the `state_unsafe_mutation` error if we `set` the value\n\t\t\t\t\tentry.source.v = v;\n\t\t\t\t} else {\n\t\t\t\t\tset(entry.source, v);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tis_synchronous_callback = false;\n\t\t}\n\t}\n\n\t// if the component that setup this stores is already unmounted the source will be out of sync\n\t// so we just use the `get` for the stores, less performant but it avoids to create a memory leak\n\t// and it will keep the value consistent\n\tif (store && IS_UNMOUNTED in stores) {\n\t\treturn get_store(store);\n\t}\n\n\treturn get(entry.source);\n}\n\n/**\n * Unsubscribe from a store if it's not the same as the one in the store references container.\n * We need this in addition to `store_get` because someone could unsubscribe from a store but\n * then never subscribe to the new one (if any), causing the subscription to stay open wrongfully.\n * @param {Store<any> | null | undefined} store\n * @param {string} store_name\n * @param {StoreReferencesContainer} stores\n */\nexport function store_unsub(store, store_name, stores) {\n\t/** @type {StoreReferencesContainer[''] | undefined} */\n\tlet entry = stores[store_name];\n\n\tif (entry && entry.store !== store) {\n\t\t// Don't reset store yet, so that store_get above can resubscribe to new store if necessary\n\t\tentry.unsubscribe();\n\t\tentry.unsubscribe = noop;\n\t}\n\n\treturn store;\n}\n\n/**\n * Sets the new value of a store and returns that value.\n * @template V\n * @param {Store<V>} store\n * @param {V} value\n * @returns {V}\n */\nexport function store_set(store, value) {\n\tstore.set(value);\n\treturn value;\n}\n\n/**\n * @param {StoreReferencesContainer} stores\n * @param {string} store_name\n */\nexport function invalidate_store(stores, store_name) {\n\tvar entry = stores[store_name];\n\tif (entry.store !== null) {\n\t\tstore_set(entry.store, entry.source.v);\n\t}\n}\n\n/**\n * Unsubscribes from all auto-subscribed stores on destroy\n * @returns {[StoreReferencesContainer, ()=>void]}\n */\nexport function setup_stores() {\n\t/** @type {StoreReferencesContainer} */\n\tconst stores = {};\n\n\tfunction cleanup() {\n\t\tteardown(() => {\n\t\t\tfor (var store_name in stores) {\n\t\t\t\tconst ref = stores[store_name];\n\t\t\t\tref.unsubscribe();\n\t\t\t}\n\t\t\tdefine_property(stores, IS_UNMOUNTED, {\n\t\t\t\tenumerable: false,\n\t\t\t\tvalue: true\n\t\t\t});\n\t\t});\n\t}\n\n\treturn [stores, cleanup];\n}\n\n/**\n * Updates a store with a new value.\n * @param {Store<V>} store  the store to update\n * @param {any} expression  the expression that mutates the store\n * @param {V} new_value  the new store value\n * @template V\n */\nexport function store_mutate(store, expression, new_value) {\n\tstore.set(new_value);\n\treturn expression;\n}\n\n/**\n * @param {Store<number>} store\n * @param {number} store_value\n * @param {1 | -1} [d]\n * @returns {number}\n */\nexport function update_store(store, store_value, d = 1) {\n\tstore.set(store_value + d);\n\treturn store_value;\n}\n\n/**\n * @param {Store<number>} store\n * @param {number} store_value\n * @param {1 | -1} [d]\n * @returns {number}\n */\nexport function update_pre_store(store, store_value, d = 1) {\n\tconst value = store_value + d;\n\tstore.set(value);\n\treturn value;\n}\n\n/**\n * Called inside prop getters to communicate that the prop is a store binding\n */\nexport function mark_store_binding() {\n\tis_store_binding = true;\n}\n\n/**\n * Returns a tuple that indicates whether `fn()` reads a prop that is a store binding.\n * Used to prevent `binding_property_non_reactive` validation false positives and\n * ensure that these props are treated as mutable even in runes mode\n * @template T\n * @param {() => T} fn\n * @returns {[T, boolean]}\n */\nexport function capture_store_binding(fn) {\n\tvar previous_is_store_binding = is_store_binding;\n\n\ttry {\n\t\tis_store_binding = false;\n\t\treturn [fn(), is_store_binding];\n\t} finally {\n\t\tis_store_binding = previous_is_store_binding;\n\t}\n}\n","/** @import { Source } from './types.js' */\nimport { DEV } from 'esm-env';\nimport {\n\tPROPS_IS_BINDABLE,\n\tPROPS_IS_IMMUTABLE,\n\tPROPS_IS_LAZY_INITIAL,\n\tPROPS_IS_RUNES,\n\tPROPS_IS_UPDATED\n} from '../../../constants.js';\nimport { get_descriptor, is_function } from '../../shared/utils.js';\nimport { mutable_source, set, source, update } from './sources.js';\nimport { derived, derived_safe_equal } from './deriveds.js';\nimport { active_effect, get, captured_signals, set_active_effect, untrack } from '../runtime.js';\nimport { safe_equals } from './equality.js';\nimport * as e from '../errors.js';\nimport {\n\tBRANCH_EFFECT,\n\tLEGACY_DERIVED_PROP,\n\tLEGACY_PROPS,\n\tROOT_EFFECT,\n\tSTATE_SYMBOL\n} from '../constants.js';\nimport { proxy } from '../proxy.js';\nimport { capture_store_binding } from './store.js';\nimport { legacy_mode_flag } from '../../flags/index.js';\n\n/**\n * @param {((value?: number) => number)} fn\n * @param {1 | -1} [d]\n * @returns {number}\n */\nexport function update_prop(fn, d = 1) {\n\tconst value = fn();\n\tfn(value + d);\n\treturn value;\n}\n\n/**\n * @param {((value?: number) => number)} fn\n * @param {1 | -1} [d]\n * @returns {number}\n */\nexport function update_pre_prop(fn, d = 1) {\n\tconst value = fn() + d;\n\tfn(value);\n\treturn value;\n}\n\n/**\n * The proxy handler for rest props (i.e. `const { x, ...rest } = $props()`).\n * Is passed the full `$$props` object and excludes the named props.\n * @type {ProxyHandler<{ props: Record<string | symbol, unknown>, exclude: Array<string | symbol>, name?: string }>}}\n */\nconst rest_props_handler = {\n\tget(target, key) {\n\t\tif (target.exclude.includes(key)) return;\n\t\treturn target.props[key];\n\t},\n\tset(target, key) {\n\t\tif (DEV) {\n\t\t\t// TODO should this happen in prod too?\n\t\t\te.props_rest_readonly(`${target.name}.${String(key)}`);\n\t\t}\n\n\t\treturn false;\n\t},\n\tgetOwnPropertyDescriptor(target, key) {\n\t\tif (target.exclude.includes(key)) return;\n\t\tif (key in target.props) {\n\t\t\treturn {\n\t\t\t\tenumerable: true,\n\t\t\t\tconfigurable: true,\n\t\t\t\tvalue: target.props[key]\n\t\t\t};\n\t\t}\n\t},\n\thas(target, key) {\n\t\tif (target.exclude.includes(key)) return false;\n\t\treturn key in target.props;\n\t},\n\townKeys(target) {\n\t\treturn Reflect.ownKeys(target.props).filter((key) => !target.exclude.includes(key));\n\t}\n};\n\n/**\n * @param {Record<string, unknown>} props\n * @param {string[]} exclude\n * @param {string} [name]\n * @returns {Record<string, unknown>}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function rest_props(props, exclude, name) {\n\treturn new Proxy(\n\t\tDEV ? { props, exclude, name, other: {}, to_proxy: [] } : { props, exclude },\n\t\trest_props_handler\n\t);\n}\n\n/**\n * The proxy handler for legacy $$restProps and $$props\n * @type {ProxyHandler<{ props: Record<string | symbol, unknown>, exclude: Array<string | symbol>, special: Record<string | symbol, (v?: unknown) => unknown>, version: Source<number> }>}}\n */\nconst legacy_rest_props_handler = {\n\tget(target, key) {\n\t\tif (target.exclude.includes(key)) return;\n\t\tget(target.version);\n\t\treturn key in target.special ? target.special[key]() : target.props[key];\n\t},\n\tset(target, key, value) {\n\t\tif (!(key in target.special)) {\n\t\t\t// Handle props that can temporarily get out of sync with the parent\n\t\t\t/** @type {Record<string, (v?: unknown) => unknown>} */\n\t\t\ttarget.special[key] = prop(\n\t\t\t\t{\n\t\t\t\t\tget [key]() {\n\t\t\t\t\t\treturn target.props[key];\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t/** @type {string} */ (key),\n\t\t\t\tPROPS_IS_UPDATED\n\t\t\t);\n\t\t}\n\n\t\ttarget.special[key](value);\n\t\tupdate(target.version); // $$props is coarse-grained: when $$props.x is updated, usages of $$props.y etc are also rerun\n\t\treturn true;\n\t},\n\tgetOwnPropertyDescriptor(target, key) {\n\t\tif (target.exclude.includes(key)) return;\n\t\tif (key in target.props) {\n\t\t\treturn {\n\t\t\t\tenumerable: true,\n\t\t\t\tconfigurable: true,\n\t\t\t\tvalue: target.props[key]\n\t\t\t};\n\t\t}\n\t},\n\tdeleteProperty(target, key) {\n\t\t// Svelte 4 allowed for deletions on $$restProps\n\t\tif (target.exclude.includes(key)) return true;\n\t\ttarget.exclude.push(key);\n\t\tupdate(target.version);\n\t\treturn true;\n\t},\n\thas(target, key) {\n\t\tif (target.exclude.includes(key)) return false;\n\t\treturn key in target.props;\n\t},\n\townKeys(target) {\n\t\treturn Reflect.ownKeys(target.props).filter((key) => !target.exclude.includes(key));\n\t}\n};\n\n/**\n * @param {Record<string, unknown>} props\n * @param {string[]} exclude\n * @returns {Record<string, unknown>}\n */\nexport function legacy_rest_props(props, exclude) {\n\treturn new Proxy({ props, exclude, special: {}, version: source(0) }, legacy_rest_props_handler);\n}\n\n/**\n * The proxy handler for spread props. Handles the incoming array of props\n * that looks like `() => { dynamic: props }, { static: prop }, ..` and wraps\n * them so that the whole thing is passed to the component as the `$$props` argument.\n * @template {Record<string | symbol, unknown>} T\n * @type {ProxyHandler<{ props: Array<T | (() => T)> }>}}\n */\nconst spread_props_handler = {\n\tget(target, key) {\n\t\tlet i = target.props.length;\n\t\twhile (i--) {\n\t\t\tlet p = target.props[i];\n\t\t\tif (is_function(p)) p = p();\n\t\t\tif (typeof p === 'object' && p !== null && key in p) return p[key];\n\t\t}\n\t},\n\tset(target, key, value) {\n\t\tlet i = target.props.length;\n\t\twhile (i--) {\n\t\t\tlet p = target.props[i];\n\t\t\tif (is_function(p)) p = p();\n\t\t\tconst desc = get_descriptor(p, key);\n\t\t\tif (desc && desc.set) {\n\t\t\t\tdesc.set(value);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t},\n\tgetOwnPropertyDescriptor(target, key) {\n\t\tlet i = target.props.length;\n\t\twhile (i--) {\n\t\t\tlet p = target.props[i];\n\t\t\tif (is_function(p)) p = p();\n\t\t\tif (typeof p === 'object' && p !== null && key in p) {\n\t\t\t\tconst descriptor = get_descriptor(p, key);\n\t\t\t\tif (descriptor && !descriptor.configurable) {\n\t\t\t\t\t// Prevent a \"Non-configurability Report Error\": The target is an array, it does\n\t\t\t\t\t// not actually contain this property. If it is now described as non-configurable,\n\t\t\t\t\t// the proxy throws a validation error. Setting it to true avoids that.\n\t\t\t\t\tdescriptor.configurable = true;\n\t\t\t\t}\n\t\t\t\treturn descriptor;\n\t\t\t}\n\t\t}\n\t},\n\thas(target, key) {\n\t\t// To prevent a false positive `is_entry_props` in the `prop` function\n\t\tif (key === STATE_SYMBOL || key === LEGACY_PROPS) return false;\n\n\t\tfor (let p of target.props) {\n\t\t\tif (is_function(p)) p = p();\n\t\t\tif (p != null && key in p) return true;\n\t\t}\n\n\t\treturn false;\n\t},\n\townKeys(target) {\n\t\t/** @type {Array<string | symbol>} */\n\t\tconst keys = [];\n\n\t\tfor (let p of target.props) {\n\t\t\tif (is_function(p)) p = p();\n\t\t\tfor (const key in p) {\n\t\t\t\tif (!keys.includes(key)) keys.push(key);\n\t\t\t}\n\t\t}\n\n\t\treturn keys;\n\t}\n};\n\n/**\n * @param {Array<Record<string, unknown> | (() => Record<string, unknown>)>} props\n * @returns {any}\n */\nexport function spread_props(...props) {\n\treturn new Proxy({ props }, spread_props_handler);\n}\n\n/**\n * @template T\n * @param {() => T} fn\n * @returns {T}\n */\nfunction with_parent_branch(fn) {\n\tvar effect = active_effect;\n\tvar previous_effect = active_effect;\n\n\twhile (effect !== null && (effect.f & (BRANCH_EFFECT | ROOT_EFFECT)) === 0) {\n\t\teffect = effect.parent;\n\t}\n\ttry {\n\t\tset_active_effect(effect);\n\t\treturn fn();\n\t} finally {\n\t\tset_active_effect(previous_effect);\n\t}\n}\n\n/**\n * This function is responsible for synchronizing a possibly bound prop with the inner component state.\n * It is used whenever the compiler sees that the component writes to the prop, or when it has a default prop_value.\n * @template V\n * @param {Record<string, unknown>} props\n * @param {string} key\n * @param {number} flags\n * @param {V | (() => V)} [fallback]\n * @returns {(() => V | ((arg: V) => V) | ((arg: V, mutation: boolean) => V))}\n */\nexport function prop(props, key, flags, fallback) {\n\tvar immutable = (flags & PROPS_IS_IMMUTABLE) !== 0;\n\tvar runes = !legacy_mode_flag || (flags & PROPS_IS_RUNES) !== 0;\n\tvar bindable = (flags & PROPS_IS_BINDABLE) !== 0;\n\tvar lazy = (flags & PROPS_IS_LAZY_INITIAL) !== 0;\n\tvar is_store_sub = false;\n\tvar prop_value;\n\n\tif (bindable) {\n\t\t[prop_value, is_store_sub] = capture_store_binding(() => /** @type {V} */ (props[key]));\n\t} else {\n\t\tprop_value = /** @type {V} */ (props[key]);\n\t}\n\n\t// Can be the case when someone does `mount(Component, props)` with `let props = $state({...})`\n\t// or `createClassComponent(Component, props)`\n\tvar is_entry_props = STATE_SYMBOL in props || LEGACY_PROPS in props;\n\n\tvar setter =\n\t\t(bindable &&\n\t\t\t(get_descriptor(props, key)?.set ??\n\t\t\t\t(is_entry_props && key in props && ((v) => (props[key] = v))))) ||\n\t\tundefined;\n\n\tvar fallback_value = /** @type {V} */ (fallback);\n\tvar fallback_dirty = true;\n\tvar fallback_used = false;\n\n\tvar get_fallback = () => {\n\t\tfallback_used = true;\n\t\tif (fallback_dirty) {\n\t\t\tfallback_dirty = false;\n\t\t\tif (lazy) {\n\t\t\t\tfallback_value = untrack(/** @type {() => V} */ (fallback));\n\t\t\t} else {\n\t\t\t\tfallback_value = /** @type {V} */ (fallback);\n\t\t\t}\n\t\t}\n\n\t\treturn fallback_value;\n\t};\n\n\tif (prop_value === undefined && fallback !== undefined) {\n\t\tif (setter && runes) {\n\t\t\te.props_invalid_value(key);\n\t\t}\n\n\t\tprop_value = get_fallback();\n\t\tif (setter) setter(prop_value);\n\t}\n\n\t/** @type {() => V} */\n\tvar getter;\n\tif (runes) {\n\t\tgetter = () => {\n\t\t\tvar value = /** @type {V} */ (props[key]);\n\t\t\tif (value === undefined) return get_fallback();\n\t\t\tfallback_dirty = true;\n\t\t\tfallback_used = false;\n\t\t\treturn value;\n\t\t};\n\t} else {\n\t\t// Svelte 4 did not trigger updates when a primitive value was updated to the same value.\n\t\t// Replicate that behavior through using a derived\n\t\tvar derived_getter = with_parent_branch(() =>\n\t\t\t(immutable ? derived : derived_safe_equal)(() => /** @type {V} */ (props[key]))\n\t\t);\n\t\tderived_getter.f |= LEGACY_DERIVED_PROP;\n\t\tgetter = () => {\n\t\t\tvar value = get(derived_getter);\n\t\t\tif (value !== undefined) fallback_value = /** @type {V} */ (undefined);\n\t\t\treturn value === undefined ? fallback_value : value;\n\t\t};\n\t}\n\n\t// easy mode — prop is never written to\n\tif ((flags & PROPS_IS_UPDATED) === 0) {\n\t\treturn getter;\n\t}\n\n\t// intermediate mode — prop is written to, but the parent component had\n\t// `bind:foo` which means we can just call `$$props.foo = value` directly\n\tif (setter) {\n\t\tvar legacy_parent = props.$$legacy;\n\t\treturn function (/** @type {any} */ value, /** @type {boolean} */ mutation) {\n\t\t\tif (arguments.length > 0) {\n\t\t\t\t// We don't want to notify if the value was mutated and the parent is in runes mode.\n\t\t\t\t// In that case the state proxy (if it exists) should take care of the notification.\n\t\t\t\t// If the parent is not in runes mode, we need to notify on mutation, too, that the prop\n\t\t\t\t// has changed because the parent will not be able to detect the change otherwise.\n\t\t\t\tif (!runes || !mutation || legacy_parent || is_store_sub) {\n\t\t\t\t\t/** @type {Function} */ (setter)(mutation ? getter() : value);\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t} else {\n\t\t\t\treturn getter();\n\t\t\t}\n\t\t};\n\t}\n\n\t// hard mode. this is where it gets ugly — the value in the child should\n\t// synchronize with the parent, but it should also be possible to temporarily\n\t// set the value to something else locally.\n\tvar from_child = false;\n\tvar was_from_child = false;\n\n\t// The derived returns the current value. The underlying mutable\n\t// source is written to from various places to persist this value.\n\tvar inner_current_value = mutable_source(prop_value);\n\tvar current_value = with_parent_branch(() =>\n\t\tderived(() => {\n\t\t\tvar parent_value = getter();\n\t\t\tvar child_value = get(inner_current_value);\n\n\t\t\tif (from_child) {\n\t\t\t\tfrom_child = false;\n\t\t\t\twas_from_child = true;\n\t\t\t\treturn child_value;\n\t\t\t}\n\n\t\t\twas_from_child = false;\n\t\t\treturn (inner_current_value.v = parent_value);\n\t\t})\n\t);\n\n\tif (!immutable) current_value.equals = safe_equals;\n\n\treturn function (/** @type {any} */ value, /** @type {boolean} */ mutation) {\n\t\t// legacy nonsense — need to ensure the source is invalidated when necessary\n\t\t// also needed for when handling inspect logic so we can inspect the correct source signal\n\t\tif (captured_signals !== null) {\n\t\t\t// set this so that we don't reset to the parent value if `d`\n\t\t\t// is invalidated because of `invalidate_inner_signals` (rather\n\t\t\t// than because the parent or child value changed)\n\t\t\tfrom_child = was_from_child;\n\t\t\t// invoke getters so that signals are picked up by `invalidate_inner_signals`\n\t\t\tgetter();\n\t\t\tget(inner_current_value);\n\t\t}\n\n\t\tif (arguments.length > 0) {\n\t\t\tconst new_value = mutation ? get(current_value) : runes && bindable ? proxy(value) : value;\n\n\t\t\tif (!current_value.equals(new_value)) {\n\t\t\t\tfrom_child = true;\n\t\t\t\tset(inner_current_value, new_value);\n\t\t\t\t// To ensure the fallback value is consistent when used with proxies, we\n\t\t\t\t// update the local fallback_value, but only if the fallback is actively used\n\t\t\t\tif (fallback_used && fallback_value !== undefined) {\n\t\t\t\t\tfallback_value = new_value;\n\t\t\t\t}\n\t\t\t\tuntrack(() => get(current_value)); // force a synchronisation immediately\n\t\t\t}\n\n\t\t\treturn value;\n\t\t}\n\t\treturn get(current_value);\n\t};\n}\n","/** @import { ComponentContext, ComponentContextLegacy } from '#client' */\n/** @import { EventDispatcher } from './index.js' */\n/** @import { NotFunction } from './internal/types.js' */\nimport { flush_sync, untrack } from './internal/client/runtime.js';\nimport { is_array } from './internal/shared/utils.js';\nimport { user_effect } from './internal/client/index.js';\nimport * as e from './internal/client/errors.js';\nimport { lifecycle_outside_component } from './internal/shared/errors.js';\nimport { legacy_mode_flag } from './internal/flags/index.js';\nimport { component_context } from './internal/client/context.js';\nimport { DEV } from 'esm-env';\n\nif (DEV) {\n\t/**\n\t * @param {string} rune\n\t */\n\tfunction throw_rune_error(rune) {\n\t\tif (!(rune in globalThis)) {\n\t\t\t// TODO if people start adjusting the \"this can contain runes\" config through v-p-s more, adjust this message\n\t\t\t/** @type {any} */\n\t\t\tlet value; // let's hope noone modifies this global, but belts and braces\n\t\t\tObject.defineProperty(globalThis, rune, {\n\t\t\t\tconfigurable: true,\n\t\t\t\t// eslint-disable-next-line getter-return\n\t\t\t\tget: () => {\n\t\t\t\t\tif (value !== undefined) {\n\t\t\t\t\t\treturn value;\n\t\t\t\t\t}\n\n\t\t\t\t\te.rune_outside_svelte(rune);\n\t\t\t\t},\n\t\t\t\tset: (v) => {\n\t\t\t\t\tvalue = v;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tthrow_rune_error('$state');\n\tthrow_rune_error('$effect');\n\tthrow_rune_error('$derived');\n\tthrow_rune_error('$inspect');\n\tthrow_rune_error('$props');\n\tthrow_rune_error('$bindable');\n}\n\n/**\n * The `onMount` function schedules a callback to run as soon as the component has been mounted to the DOM.\n * It must be called during the component's initialisation (but doesn't need to live *inside* the component;\n * it can be called from an external module).\n *\n * If a function is returned _synchronously_ from `onMount`, it will be called when the component is unmounted.\n *\n * `onMount` does not run inside [server-side components](https://svelte.dev/docs/svelte/svelte-server#render).\n *\n * @template T\n * @param {() => NotFunction<T> | Promise<NotFunction<T>> | (() => any)} fn\n * @returns {void}\n */\nexport function onMount(fn) {\n\tif (component_context === null) {\n\t\tlifecycle_outside_component('onMount');\n\t}\n\n\tif (legacy_mode_flag && component_context.l !== null) {\n\t\tinit_update_callbacks(component_context).m.push(fn);\n\t} else {\n\t\tuser_effect(() => {\n\t\t\tconst cleanup = untrack(fn);\n\t\t\tif (typeof cleanup === 'function') return /** @type {() => void} */ (cleanup);\n\t\t});\n\t}\n}\n\n/**\n * Schedules a callback to run immediately before the component is unmounted.\n *\n * Out of `onMount`, `beforeUpdate`, `afterUpdate` and `onDestroy`, this is the\n * only one that runs inside a server-side component.\n *\n * @param {() => any} fn\n * @returns {void}\n */\nexport function onDestroy(fn) {\n\tif (component_context === null) {\n\t\tlifecycle_outside_component('onDestroy');\n\t}\n\n\tonMount(() => () => untrack(fn));\n}\n\n/**\n * @template [T=any]\n * @param {string} type\n * @param {T} [detail]\n * @param {any}params_0\n * @returns {CustomEvent<T>}\n */\nfunction create_custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n\treturn new CustomEvent(type, { detail, bubbles, cancelable });\n}\n\n/**\n * Creates an event dispatcher that can be used to dispatch [component events](https://svelte.dev/docs/svelte/legacy-on#Component-events).\n * Event dispatchers are functions that can take two arguments: `name` and `detail`.\n *\n * Component events created with `createEventDispatcher` create a\n * [CustomEvent](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent).\n * These events do not [bubble](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events#Event_bubbling_and_capture).\n * The `detail` argument corresponds to the [CustomEvent.detail](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/detail)\n * property and can contain any type of data.\n *\n * The event dispatcher can be typed to narrow the allowed event names and the type of the `detail` argument:\n * ```ts\n * const dispatch = createEventDispatcher<{\n *  loaded: never; // does not take a detail argument\n *  change: string; // takes a detail argument of type string, which is required\n *  optional: number | null; // takes an optional detail argument of type number\n * }>();\n * ```\n *\n * @deprecated Use callback props and/or the `$host()` rune instead — see [migration guide](https://svelte.dev/docs/svelte/v5-migration-guide#Event-changes-Component-events)\n * @template {Record<string, any>} [EventMap = any]\n * @returns {EventDispatcher<EventMap>}\n */\nexport function createEventDispatcher() {\n\tconst active_component_context = component_context;\n\tif (active_component_context === null) {\n\t\tlifecycle_outside_component('createEventDispatcher');\n\t}\n\n\treturn (type, detail, options) => {\n\t\tconst events = /** @type {Record<string, Function | Function[]>} */ (\n\t\t\tactive_component_context.s.$$events\n\t\t)?.[/** @type {any} */ (type)];\n\n\t\tif (events) {\n\t\t\tconst callbacks = is_array(events) ? events.slice() : [events];\n\t\t\t// TODO are there situations where events could be dispatched\n\t\t\t// in a server (non-DOM) environment?\n\t\t\tconst event = create_custom_event(/** @type {string} */ (type), detail, options);\n\t\t\tfor (const fn of callbacks) {\n\t\t\t\tfn.call(active_component_context.x, event);\n\t\t\t}\n\t\t\treturn !event.defaultPrevented;\n\t\t}\n\n\t\treturn true;\n\t};\n}\n\n// TODO mark beforeUpdate and afterUpdate as deprecated in Svelte 6\n\n/**\n * Schedules a callback to run immediately before the component is updated after any state change.\n *\n * The first time the callback runs will be before the initial `onMount`.\n *\n * In runes mode use `$effect.pre` instead.\n *\n * @deprecated Use [`$effect.pre`](https://svelte.dev/docs/svelte/$effect#$effect.pre) instead\n * @param {() => void} fn\n * @returns {void}\n */\nexport function beforeUpdate(fn) {\n\tif (component_context === null) {\n\t\tlifecycle_outside_component('beforeUpdate');\n\t}\n\n\tif (component_context.l === null) {\n\t\te.lifecycle_legacy_only('beforeUpdate');\n\t}\n\n\tinit_update_callbacks(component_context).b.push(fn);\n}\n\n/**\n * Schedules a callback to run immediately after the component has been updated.\n *\n * The first time the callback runs will be after the initial `onMount`.\n *\n * In runes mode use `$effect` instead.\n *\n * @deprecated Use [`$effect`](https://svelte.dev/docs/svelte/$effect) instead\n * @param {() => void} fn\n * @returns {void}\n */\nexport function afterUpdate(fn) {\n\tif (component_context === null) {\n\t\tlifecycle_outside_component('afterUpdate');\n\t}\n\n\tif (component_context.l === null) {\n\t\te.lifecycle_legacy_only('afterUpdate');\n\t}\n\n\tinit_update_callbacks(component_context).a.push(fn);\n}\n\n/**\n * Legacy-mode: Init callbacks object for onMount/beforeUpdate/afterUpdate\n * @param {ComponentContext} context\n */\nfunction init_update_callbacks(context) {\n\tvar l = /** @type {ComponentContextLegacy} */ (context).l;\n\treturn (l.u ??= { a: [], b: [], m: [] });\n}\n\n/**\n * Synchronously flushes any pending state changes and those that result from it.\n * @param {() => void} [fn]\n * @returns {void}\n */\nexport function flushSync(fn) {\n\tflush_sync(fn);\n}\n\nexport { getContext, getAllContexts, hasContext, setContext } from './internal/client/context.js';\nexport { hydrate, mount, unmount } from './internal/client/render.js';\nexport { tick, untrack } from './internal/client/runtime.js';\nexport { createRawSnippet } from './internal/client/dom/blocks/snippet.js';\n","/* This file is generated by scripts/process-messages/index.js. Do not edit! */\n\nimport { DEV } from 'esm-env';\n\n/**\n * Cannot use `{@render children(...)}` if the parent component uses `let:` directives. Consider using a named snippet instead\n * @returns {never}\n */\nexport function invalid_default_snippet() {\n\tif (DEV) {\n\t\tconst error = new Error(`invalid_default_snippet\\nCannot use \\`{@render children(...)}\\` if the parent component uses \\`let:\\` directives. Consider using a named snippet instead\\nhttps://svelte.dev/e/invalid_default_snippet`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/invalid_default_snippet`);\n\t}\n}\n\n/**\n * `%name%(...)` can only be used during component initialisation\n * @param {string} name\n * @returns {never}\n */\nexport function lifecycle_outside_component(name) {\n\tif (DEV) {\n\t\tconst error = new Error(`lifecycle_outside_component\\n\\`${name}(...)\\` can only be used during component initialisation\\nhttps://svelte.dev/e/lifecycle_outside_component`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/lifecycle_outside_component`);\n\t}\n}\n\n/**\n * `%name%` is not a store with a `subscribe` method\n * @param {string} name\n * @returns {never}\n */\nexport function store_invalid_shape(name) {\n\tif (DEV) {\n\t\tconst error = new Error(`store_invalid_shape\\n\\`${name}\\` is not a store with a \\`subscribe\\` method\\nhttps://svelte.dev/e/store_invalid_shape`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/store_invalid_shape`);\n\t}\n}\n\n/**\n * The `this` prop on `<svelte:element>` must be a string, if defined\n * @returns {never}\n */\nexport function svelte_element_invalid_this_value() {\n\tif (DEV) {\n\t\tconst error = new Error(`svelte_element_invalid_this_value\\nThe \\`this\\` prop on \\`<svelte:element>\\` must be a string, if defined\\nhttps://svelte.dev/e/svelte_element_invalid_this_value`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/svelte_element_invalid_this_value`);\n\t}\n}","import { PUBLIC_VERSION } from '../version.js';\n\nif (typeof window !== 'undefined')\n\t// @ts-ignore\n\t(window.__svelte ||= { v: new Set() }).v.add(PUBLIC_VERSION);\n","// generated during release, do not modify\n\n/**\n * The current version, as set in package.json.\n * @type {string}\n */\nexport const VERSION = '5.19.6';\nexport const PUBLIC_VERSION = '5';\n","<script>\n// This function creates an <iframe> (and YouTube player)\n// after the API code downloads.\nimport { onMount } from 'svelte';\n\nexport let videoId;\nexport let persons = [];\nexport let pauseVideoTime = 1;\n\nlet currentPage;\nlet isPlaying = false;\n\nconst togglePlayPause = () => {\n  const iframe = document.querySelector('iframe');\n  if (iframe && iframe.contentWindow) {\n    if (isPlaying) {\n      iframe.contentWindow.postMessage(\n        JSON.stringify({ event: 'command', func: 'pauseVideo' }),\n        '*'\n      );\n      isPlaying = false;\n    } else {\n      const sequence = persons[0].sequences[currentPage - 1];\n      if (sequence) {\n        seekVideo(sequence.start, sequence.end);\n      }\n      isPlaying = true;\n    }\n  }\n};\n\nconst initializePage = () => {\n  currentPage = 1;\n  if (persons.length > 0) {\n    goToPage(1, persons[0].sequences);\n  }\n};\n\nconst seekVideo = (start, end) => {\n  const iframe = document.querySelector('iframe');\n  if (iframe && iframe.contentWindow) {\n    iframe.contentWindow.postMessage(\n      JSON.stringify({ event: 'command', func: 'seekTo', args: [start, true] }),\n      '*'\n    );\n    iframe.contentWindow.postMessage(\n      JSON.stringify({ event: 'command', func: 'playVideo' }),\n      '*'\n    );\n    pauseVideoTime = end;\n    isPlaying = true;\n  } else {\n    console.log('Iframe not yet loaded');\n  }\n};\n\nconst goToPage = (page, sequences) => {\n  currentPage = page;\n  const sequence = sequences[page - 1];\n  if (sequence) {\n    // console.log(sequence)\n    seekVideo(sequence.start, sequence.end);\n  }\n};\n\nlet stopPlayTimer;\n\nlet player;\n\n$: if (!currentPage) {\n  initializePage();\n}\n\n// This code loads the IFrame Player API code asynchronously.\nonMount(() => {\n  if (!window.YT) {\n    const tag = document.createElement(\"script\");\n    tag.src = \"https://www.youtube.com/iframe_api\";\n    const firstScriptTag = document.getElementsByTagName(\"script\")[0];\n    firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\n  } else {\n    initializePlayer();\n  }\n\n  window.onYouTubeIframeAPIReady = initializePlayer;\n});\n\nfunction initializePlayer() {\n  if (player) {\n    player.destroy();\n  }\n  player = new YT.Player(\"player\", {\n    \"width\": \"100%\",\n    \"videoId\": videoId,\n    \"events\": {\n      \"onReady\": onPlayerReady,\n      \"onStateChange\": onPlayerStateChange\n    }\n  });\n}\n\n// Update the video when videoId changes\n$: if (player && videoId) {\n  player.cueVideoById(videoId);\n}\n\n// The API will call this function when the video player is ready.\nfunction onPlayerReady(event) {\n  event.target.playVideo();\n}\n\n// The API calls this function when the player's state changes.\nfunction onPlayerStateChange(event) {\n  let time, rate, remainingTime;\n  clearTimeout(stopPlayTimer);\n  if (event.data == YT.PlayerState.PLAYING) {\n    time = player.getCurrentTime();\n    // Add .4 of a second to the time in case it's close to the current time\n    // (The API kept returning ~9.7 when hitting play after stopping at 10s)\n    if (time + .4 < pauseVideoTime) {\n      rate = player.getPlaybackRate();\n      remainingTime = (pauseVideoTime - time) / rate;\n      stopPlayTimer = setTimeout(pauseVideo, remainingTime * 1000);\n    }\n  }\n}\n\nfunction pauseVideo() {\n  player.pauseVideo();\n}\n\n</script>\n\n<div style=\"width: 100%; height: 88vh;\">\n\n  {#each persons as person}\n    <div class=\"mb-4\">\n      <div class=\"flex justify-stretch items-center space-x-4 items-center\">\n        <!-- <img src={person.image} alt={person.name} style=\"height: 60px;\" /> -->\n        <button\n          class=\"w-full px-4 py-2 bg-gray-300 rounded transition-colors duration-200 hover:bg-gray-400 text-gray-700\">\n          <span style=\"color: black;\">{person.name}</span>\n        </button>\n\n        <button\n          class=\"px-4 py-2 bg-gray-300 rounded transition-colors duration-200 hover:bg-gray-400 text-gray-700\"\n          on:click={() => goToPage(Math.max(currentPage - 1, 1), person.sequences)}\n          disabled={currentPage === 1}\n          >\n          <span style=\"color: yellow;\">⬅️</span>\n        </button>\n        <select\n          class=\"px-4 py-2 bg-gray-300 rounded transition-colors duration-200\"\n          on:change={(event) => {\n            const selectedPage = parseInt(event.target.value);\n            goToPage(selectedPage, person.sequences);\n          }}\n          >\n          {#each person.sequences as _, index}\n            <option value={index + 1} selected={currentPage === (index + 1)}>\n              Sequence {index + 1}\n            </option>\n          {/each}\n        </select>\n        <button\n          class=\"px-4 py-2 bg-gray-300 rounded transition-colors duration-200 hover:bg-gray-400 text-gray-700\"\n          on:click={() => goToPage(Math.min(currentPage + 1, person.sequences.length), person.sequences)}\n          disabled={currentPage === person.sequences.length}\n          >\n          <span style=\"color: yellow;\">➡️</span>\n        </button>\n        <button\n          class=\"px-4 py-2 bg-gray-300 rounded transition-colors duration-200 hover:bg-gray-400 text-gray-700\"\n          on:click={togglePlayPause}\n        >\n          <span style=\"color: yellow;\">{isPlaying ? '⏸️' : '▶️'}</span>\n        </button>\n      </div>\n    </div>\n  {/each}\n\n  <div class=\"video\" style=\"width: 100%; height: 100%;\">\n    <div id=\"player\" style=\"width: 100%; height: 100%;\"></div>\n  </div>\n\n</div>\n\n","<script>\n  import videos from './data/games.json';\n\n  export let onSelectVideo;\n\n\n  function selectVideo(video) {\n    onSelectVideo(video);\n  }\n</script>\n\n<h1>As de Qc saison 2024/25</h1>\n<!-- <h2>games annotées</h2> -->\n<div class=\"video-list\">\n  {#each videos as video}\n    <div class=\"video-card\" on:click={() => selectVideo(video)}>\n      <h3>{video.title}</h3>\n      <p>{video.date}</p>\n      <p>{video.arena}</p>\n    </div>\n  {/each}\n</div>\n\n<style>\n  .video-list {\n    display: flex;\n    flex-wrap: wrap;\n    gap: 20px;\n  }\n  .video-card {\n    border: 1px solid #ccc;\n    padding: 10px;\n    cursor: pointer;\n    width: 200px;\n  }\n</style>\n","import { mount } from 'svelte';\nimport App from './App.svelte';\n\nconst app = mount(App, { target: document.body });\n\n// const app = new App({\n// \ttarget: document.body,\n// \tprops: {\n// \t\tname: 'world'\n// \t}\n// });\n\nexport default app;\n","<script>\nimport VideoDashboard from './VideoDashboard.svelte';\nimport VideoList from './VideoList.svelte';\n\nlet selectedVideo = null;\nconst players = ['01-goalie','02-lavallee','03-deraspe','04-beland','05-duchesne','06-gauthier','07-dion','08-drolet','10-parent','11-chaput','12-pelletier','13-trudelle','14-bergeron','15-rochette','16-dorval','17-gauthier']\n\nimport shifts from './data/player_shifts';\n\nlet selectedPlayer = null;\nlet isCollapsed = false;\nlet persons = [];\n\nplayers.forEach((e, i) => {\n  persons.push({\n    name: shifts[i]['name'],\n    sequences: shifts[i]['shifts'],\n    image: `./images/players/${e}.webp`\n  });\n});\n\n$: if (persons.length > 0 && !selectedPlayer) {\n  selectedPlayer = persons[0];\n}\n\n\n</script>\n\n{#if selectedVideo}\n  <div style=\"display: flex; align-items: flex-start; width: 100%;\">\n    <button on:click={() => isCollapsed = !isCollapsed} style=\"margin-right: 10px;\">\n      ☰\n    </button>\n    <div style=\"width: 250px; overflow-y: auto; height: 100vh; border-right: 1px solid #ccc; display: {isCollapsed ? 'none' : 'block'};\">\n      <button on:click={() => selectedVideo = null} style=\"margin: 10px;\">\n        Back to Games\n      </button>\n      {#each persons as person}\n        <button\n          on:click={() => selectedPlayer = person}\n          style=\"display: flex; align-items: center; padding: 10px; cursor: pointer; background-color: {selectedPlayer === person ? '#ffffe0' : 'transparent'}; width: 100%;\"\n          on:mousedown={() => event.currentTarget.style.backgroundColor = '#ffff00'}\n          on:mouseup={() => event.currentTarget.style.backgroundColor = selectedPlayer === person ? '#ffffe0' : 'transparent'}\n          on:mouseleave={() => event.currentTarget.style.backgroundColor = selectedPlayer === person ? '#ffffe0' : 'transparent'}\n        >\n          <img src={person.image} alt={person.name} width=\"auto\" height=\"40\" style=\"margin-right: 10px;\" />\n          <span>{person.name}</span>\n        </button>\n      {/each}\n    </div>\n\n    {#if selectedPlayer}\n      <VideoDashboard videoId={selectedVideo.id} persons={[selectedPlayer]} />\n    {/if}\n  </div>\n{:else}\n  <VideoList onSelectVideo={(video) => selectedVideo = video} />\n{/if}\n\n<main style=\"margin-top: 20px;\">\n</main>\n"],"names":["node_env","globalThis","process","env","NODE_ENV","DEV","toLowerCase","startsWith","is_array","Array","isArray","index_of","prototype","indexOf","array_from","from","define_property","Object","defineProperty","get_descriptor","getOwnPropertyDescriptor","get_descriptors","getOwnPropertyDescriptors","object_prototype","array_prototype","get_prototype_of","getPrototypeOf","run","fn","run_all","arr","i","length","BRANCH_EFFECT","ROOT_EFFECT","BOUNDARY_EFFECT","UNOWNED","DISCONNECTED","CLEAN","DIRTY","MAYBE_DIRTY","INERT","DESTROYED","EFFECT_TRANSPARENT","INSPECT_EFFECT","EFFECT_HAS_DERIVED","STATE_SYMBOL","Symbol","STATE_SYMBOL_METADATA","LEGACY_PROPS","LOADING_ATTR_SYMBOL","equals","value","this","v","safe_equals","a","b","legacy_mode_flag","UNINITIALIZED","FILENAME","bold","normal","ownership_invalid_mutation","component","owner","console","warn","state_proxy_equality_mismatch","operator","boundaries","chrome_pattern","firefox_pattern","get_component","stack","Error","entries","line","split","match","exec","push","file","column","get_stack","slice","entry","modules","module","end","start","widen_ownership","to","owners","add","parent","has_owner","metadata","has","some","get_owner","values","next","check_ownership","original","w.ownership_invalid_mutation","component_context","set_component_context","context","dev_current_component_function","set_dev_current_component_function","props","runes","p","c","e","m","s","x","l","u","r1","r2","source","function","pop","context_stack_item","undefined","component_effects","previous_effect","active_effect","previous_reaction","active_reaction","component_effect","set_active_effect","effect","set_active_reaction","reaction","is_runes","inspect_effects","Set","set_inspect_effects","signal","f","reactions","rv","wv","mutable_source","initial_value","immutable","mutable_state","untracking","derived_sources","push_derived_source","set","includes","error","name","e.state_unsafe_mutation","internal_set","increment_write_version","mark_reactions","untracked_writes","set_untracked_writes","size","inspects","previously_flushing_effect","is_flushing_effect","set_is_flushing_effect","set_signal_status","check_dirtiness","update_effect","clear","status","flags","schedule_effect","proxy","prev","sources","Map","is_proxied_array","version","prev_owners","Proxy","_","prop","descriptor","configurable","enumerable","writable","e.state_descriptors_fixed","get","deleteProperty","target","ls","n","Number","isInteger","update_version","receiver","exists","prop_metadata","Reflect","other_s","call","ownKeys","own_keys","filter","key","setPrototypeOf","e.state_prototype_fixed","d","get_proxied_value","$window","first_child_getter","next_sibling_getter","init_operations","window","element_prototype","Element","node_prototype","Node","__click","__className","__attributes","__styles","__e","Text","__t","__svelte_meta","cleanup","__svelte_cleanup","lastIndexOf","item","from_index","index","w.state_proxy_equality_mismatch","init_array_prototype_warnings","create_text","document","createTextNode","get_first_child","node","get_next_sibling","child","is_text","first_child","fragment","first","Comment","data","sibling","count","next_sibling","derived","DERIVED","parent_derived","ctx","deps","effects","derived_safe_equal","destroy_derived_effects","destroy_effect","execute_derived","prev_active_effect","get_derived_parent_effect","prev_inspect_effects","e.derived_references_self","update_reaction","update_derived","skip_reaction","validate_effect","rune","e.effect_orphan","e.effect_in_unowned_derived","is_destroying_effect","e.effect_in_teardown","create_effect","type","sync","is_root","parent_effect","nodes_start","nodes_end","last","teardown","transitions","component_function","parent_last","push_effect","user_effect","defer","legacy_pre_effect","token","ran","render_effect","untrack","legacy_pre_effect_reset","template_effect","thunks","deriveds","map","block","RENDER_EFFECT","branch","execute_effect_teardown","previously_destroying_effect","set_is_destroying_effect","destroy_effect_children","remove_dom","removed","remove","remove_reactions","transition","stop","unlink_effect","pause_effect","callback","pause_children","run_out_transitions","remaining","check","out","local","is_global","resume_effect","resume_children","in","is_micro_task_queued","current_queued_micro_tasks","process_micro_tasks","tasks","queue_micro_task","queueMicrotask","handled_errors","WeakSet","is_throwing_error","last_scheduled_effect","queued_root_effects","flush_count","dev_effect_stack","new_deps","skipped_deps","write_version","read_version","dependencies","is_unowned","dependency","is_disconnected","is_unowned_connected","propagate_error","current","should_rethrow_error","handle_error","component_stack","effect_name","current_context","filename","indent","test","navigator","userAgent","message","join","lines","new_lines","schedule_possible_effect_self_invalidation","depth","previous_deps","previous_skipped_deps","previous_untracked_writes","previous_skip_reaction","prev_derived_sources","previous_component_context","previous_untracking","result","remove_reaction","new_length","start_index","previous_component_fn","destroy_block_effect_children","log_effect_stack","infinite_loop_guard","e.effect_update_depth_exceeded","flush_queued_effects","process_deferred","previous_queued_root_effects","root_effects","collected_effects","process_effects","flush_queued_root_effects","current_effect","main_loop","is_branch","is_skippable_branch","previous_active_reaction","parent_sibling","is_derived","destroy_derived","e.state_unsafe_local_read","STATUS_MASK","deep_read_state","EventTarget","deep_read","visited","Date","getTime","proto","descriptors","PASSIVE_EVENTS","is_passive_event","all_registered_events","root_event_handles","create_event","event_name","dom","handler","options","target_handler","event","capture","handle_event_propagation","cancelBubble","without_reactive_context","addEventListener","passive","body","removeEventListener","handler_element","owner_document","ownerDocument","path","composedPath","current_target","path_idx","handled_at","__root","at_idx","handler_idx","throw_error","other_errors","parent_element","assignedSlot","parentNode","host","delegated","apply","currentTarget","assign_nodes","template","content","is_fragment","use_import_node","has_start","html","elem","createElement","innerHTML","clone","importNode","cloneNode","append","anchor","before","set_text","text","str","nodeValue","document_listeners","mounted_components","WeakMap","if_block","elseif","consequent_effect","alternate_effect","condition","has_branch","set_branch","flag","update_branch","new_condition","each","get_collection","get_key","render_fn","fallback_fn","state","items","appendChild","fallback","was_empty","each_array","collection","array","seen","to_animate","is_animated","should_update","matched","stashed","measure","update_item","unfix","delete","j","move","link","k","create_item","to_destroy","destroy_length","controlled_anchor","fix","items_map","is_controlled","parent_node","textContent","pause_effects","reconcile","reactive","debug","collection_index","dest","next_node","set_attribute","element","attribute","skip_warning","attributes","removeAttribute","setters","setters_cache","nodeName","element_proto","get_setters","setAttribute","init","callbacks","changed","observe_all","fns","is_store_binding","with_parent_branch","prop_value","bindable","lazy","is_store_sub","previous_is_store_binding","capture_store_binding","getter","is_entry_props","setter","fallback_value","fallback_dirty","fallback_used","get_fallback","e.props_invalid_value","derived_getter","legacy_parent","$$legacy","mutation","arguments","from_child","inner_current_value","current_value","parent_value","child_value","new_value","throw_rune_error","e.rune_outside_svelte","onMount","lifecycle_outside_component","__svelte","videoId","$.prop","$$props","persons","pauseVideoTime","currentPage","$.mutable_state","isPlaying","togglePlayPause","iframe","querySelector","contentWindow","$.get","postMessage","JSON","stringify","func","$.set","sequence","sequences","seekVideo","args","log","goToPage","page","stopPlayTimer","player","initializePlayer","destroy","YT","Player","width","events","onReady","onPlayerReady","onStateChange","onPlayerStateChange","playVideo","time","rate","remainingTime","clearTimeout","PlayerState","PLAYING","getCurrentTime","getPlaybackRate","setTimeout","pauseVideo","tag","src","firstScriptTag","getElementsByTagName","insertBefore","onYouTubeIframeAPIReady","cueVideoById","$.each","person","$.index","$$anchor","option","__value","hasAttribute","$.set_text","button_1","disabled","button_2","$.event","Math","max","select","selectedPage","parseInt","min","onSelectVideo","videos","video","title","text_1","date","text_2","arena","div_1","selectVideo","app","selectedVideo","selectedPlayer","isCollapsed","forEach","shifts","image","$.set_attribute","img","style","backgroundColor","id","$$render","consequent","button","consequent_1","alternate","Component","intro","registered_events","event_handle","unmount","Promise","fulfil","outro","component_root","anchor_node","$$events","removeChild","_mount"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34]}