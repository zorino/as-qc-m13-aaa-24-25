(undo-tree-save-format-version . 1)
"966befd57593eea823850041782fe517064574a8"
[nil nil nil nil (26521 43846 380085 602000) 0 nil]
([nil nil (("
   <!--
		<script>
		export let name;
		</script>
		<main>
		<h1>Hello {name}!</h1>
		<p>Visit the <a href=\"https://svelte.dev/tutorial\">Svelte tutorial</a> to learn how to build Svelte apps.</p>
		</main>

		<style>
		main {
		text-align: center;
		padding: 1em;
		max-width: 240px;
		margin: 0 auto;
		}

		h1 {
		color: #ff3e00;
		text-transform: uppercase;
		font-size: 4em;
		font-weight: 100;
		}

		@media (min-width: 640px) {
		main {
		max-width: none;
		}
		}
		</style> -->
" . -393) 879 (t 26513 10674 588529 303000)) nil (26521 43846 380083 942000) 0 nil])
([nil nil (("    " . -336) (nil rear-nonsticky nil 2045 . 2046) (nil fontified t 1888 . 2046) (nil ws-butler-chg chg 1888 . 2046) (nil fontified t 1887 . 1888) (nil ws-butler-chg chg 1887 . 1888) (nil tag-name "router" 1887 . 1888) (nil tag-type end 1887 . 1888) (nil tag-end t 1887 . 1888) (nil font-lock-face web-mode-html-tag-bracket-face 1887 . 1888) (nil fontified t 1881 . 1887) (nil ws-butler-chg chg 1881 . 1887) (nil tag-name "router" 1881 . 1887) (nil tag-type end 1881 . 1887) (nil font-lock-face web-mode-html-tag-face 1881 . 1887) (nil fontified t 1880 . 1881) (nil ws-butler-chg chg 1880 . 1881) (nil tag-name "router" 1880 . 1881) (nil tag-type end 1880 . 1881) (nil font-lock-face web-mode-html-tag-bracket-face 1880 . 1881) (nil fontified t 1879 . 1880) (nil ws-butler-chg chg 1879 . 1880) (nil tag-name "router" 1879 . 1880) (nil tag-type end 1879 . 1880) (nil tag-beg 20 1879 . 1880) (nil font-lock-face web-mode-html-tag-bracket-face 1879 . 1880) (nil fontified t 1878 . 1879) (nil ws-butler-chg chg 1878 . 1879) (nil fontified t 1875 . 1878) (nil ws-butler-chg chg 1875 . 1878) (nil fontified t 1768 . 1875) (nil ws-butler-chg chg 1768 . 1875) (nil fontified t 1767 . 1768) (nil ws-butler-chg chg 1767 . 1768) (nil tag-name "route" 1767 . 1768) (nil tag-type void 1767 . 1768) (nil tag-end t 1767 . 1768) (nil font-lock-face web-mode-html-tag-bracket-face 1767 . 1768) (nil fontified t 1766 . 1767) (nil ws-butler-chg chg 1766 . 1767) (nil tag-name "route" 1766 . 1767) (nil tag-type void 1766 . 1767) (nil font-lock-face web-mode-html-tag-bracket-face 1766 . 1767) (nil fontified t 1765 . 1766) (nil ws-butler-chg chg 1765 . 1766) (nil tag-name "route" 1765 . 1766) (nil tag-type void 1765 . 1766) (nil fontified t 1764 . 1765) (nil ws-butler-chg chg 1764 . 1765) (nil block-side t 1764 . 1765) (nil block-end t 1764 . 1765) (nil block-token delimiter-end 1764 . 1765) (nil tag-attr t 1764 . 1765) (nil tag-attr-end 9 1764 . 1765) (nil tag-name "route" 1764 . 1765) (nil tag-type void 1764 . 1765) (nil font-lock-face web-mode-block-delimiter-face 1764 . 1765) (nil fontified t 1749 . 1764) (nil ws-butler-chg chg 1749 . 1764) (nil block-side t 1749 . 1764) (nil tag-attr t 1749 . 1764) (nil tag-name "route" 1749 . 1764) (nil tag-type void 1749 . 1764) (nil face web-mode-variable-name-face 1749 . 1764) (nil fontified t 1748 . 1749) (nil ws-butler-chg chg 1748 . 1749) (nil block-beg 0 1748 . 1749) (nil block-controls 0 1748 . 1749) (nil block-side t 1748 . 1749) (nil block-token delimiter-beg 1748 . 1749) (nil tag-attr t 1748 . 1749) (nil tag-name "route" 1748 . 1749) (nil tag-type void 1748 . 1749) (nil font-lock-face web-mode-block-delimiter-face 1748 . 1749) (nil fontified t 1747 . 1748) (nil ws-butler-chg chg 1747 . 1748) (nil tag-attr t 1747 . 1748) (nil tag-name "route" 1747 . 1748) (nil tag-type void 1747 . 1748) (nil font-lock-face web-mode-html-attr-equal-face 1747 . 1748) (nil fontified t 1739 . 1747) (nil ws-butler-chg chg 1739 . 1747) (nil tag-attr t 1739 . 1747) (nil tag-name "route" 1739 . 1747) (nil tag-type void 1739 . 1747) (nil font-lock-face web-mode-html-attr-name-face 1739 . 1747) (nil fontified t 1738 . 1739) (nil ws-butler-chg chg 1738 . 1739) (nil tag-attr-beg 0 1738 . 1739) (nil tag-attr t 1738 . 1739) (nil tag-name "route" 1738 . 1739) (nil tag-type void 1738 . 1739) (nil font-lock-face web-mode-html-attr-name-face 1738 . 1739) (nil fontified t 1737 . 1738) (nil ws-butler-chg chg 1737 . 1738) (nil tag-name "route" 1737 . 1738) (nil tag-type void 1737 . 1738) (nil fontified t 1736 . 1737) (nil ws-butler-chg chg 1736 . 1737) (nil tag-attr t 1736 . 1737) (nil tag-attr-end 4 1736 . 1737) (nil tag-name "route" 1736 . 1737) (nil tag-type void 1736 . 1737) (nil font-lock-face web-mode-html-attr-value-face 1736 . 1737) (nil fontified t 1722 . 1736) (nil ws-butler-chg chg 1722 . 1736) (nil tag-attr t 1722 . 1736) (nil tag-name "route" 1722 . 1736) (nil tag-type void 1722 . 1736) (nil font-lock-face web-mode-html-attr-value-face 1722 . 1736) (nil fontified t 1721 . 1722) (nil ws-butler-chg chg 1721 . 1722) (nil tag-attr t 1721 . 1722) (nil tag-name "route" 1721 . 1722) (nil tag-type void 1721 . 1722) (nil font-lock-face web-mode-html-attr-equal-face 1721 . 1722) (nil fontified t 1718 . 1721) (nil ws-butler-chg chg 1718 . 1721) (nil tag-attr t 1718 . 1721) (nil tag-name "route" 1718 . 1721) (nil tag-type void 1718 . 1721) (nil font-lock-face web-mode-html-attr-name-face 1718 . 1721) (nil fontified t 1717 . 1718) (nil ws-butler-chg chg 1717 . 1718) (nil tag-attr-beg 0 1717 . 1718) (nil tag-attr t 1717 . 1718) (nil tag-name "route" 1717 . 1718) (nil tag-type void 1717 . 1718) (nil font-lock-face web-mode-html-attr-name-face 1717 . 1718) (nil fontified t 1716 . 1717) (nil ws-butler-chg chg 1716 . 1717) (nil tag-name "route" 1716 . 1717) (nil tag-type void 1716 . 1717) (nil fontified t 1711 . 1716) (nil ws-butler-chg chg 1711 . 1716) (nil tag-name "route" 1711 . 1716) (nil tag-type void 1711 . 1716) (nil font-lock-face web-mode-html-tag-face 1711 . 1716) (nil fontified t 1710 . 1711) (nil ws-butler-chg chg 1710 . 1711) (nil tag-name "route" 1710 . 1711) (nil tag-type void 1710 . 1711) (nil tag-beg 25 1710 . 1711) (nil font-lock-face web-mode-html-tag-bracket-face 1710 . 1711) (nil fontified t 1708 . 1710) (nil ws-butler-chg chg 1708 . 1710) (nil fontified t 1707 . 1708) (nil ws-butler-chg chg 1707 . 1708) (nil fontified t 1704 . 1707) (nil ws-butler-chg chg 1704 . 1707) (nil fontified t 1584 . 1704) (nil ws-butler-chg chg 1584 . 1704) (nil fontified t 1583 . 1584) (nil ws-butler-chg chg 1583 . 1584) (nil tag-name "route" 1583 . 1584) (nil tag-type void 1583 . 1584) (nil tag-end t 1583 . 1584) (nil font-lock-face web-mode-html-tag-bracket-face 1583 . 1584) (nil fontified t 1582 . 1583) (nil ws-butler-chg chg 1582 . 1583) (nil tag-name "route" 1582 . 1583) (nil tag-type void 1582 . 1583) (nil font-lock-face web-mode-html-tag-bracket-face 1582 . 1583) (nil fontified t 1581 . 1582) (nil ws-butler-chg chg 1581 . 1582) (nil tag-name "route" 1581 . 1582) (nil tag-type void 1581 . 1582) (nil fontified t 1580 . 1581) (nil ws-butler-chg chg 1580 . 1581) (nil block-side t 1580 . 1581) (nil block-end t 1580 . 1581) (nil block-token delimiter-end 1580 . 1581) (nil tag-attr t 1580 . 1581) (nil tag-attr-end 9 1580 . 1581) (nil tag-name "route" 1580 . 1581) (nil tag-type void 1580 . 1581) (nil font-lock-face web-mode-block-delimiter-face 1580 . 1581) (nil fontified t 1566 . 1580) (nil ws-butler-chg chg 1566 . 1580) (nil block-side t 1566 . 1580) (nil tag-attr t 1566 . 1580) (nil tag-name "route" 1566 . 1580) (nil tag-type void 1566 . 1580) (nil face web-mode-variable-name-face 1566 . 1580) (nil fontified t 1565 . 1566) (nil ws-butler-chg chg 1565 . 1566) (nil block-beg 0 1565 . 1566) (nil block-controls 0 1565 . 1566) (nil block-side t 1565 . 1566) (nil block-token delimiter-beg 1565 . 1566) (nil tag-attr t 1565 . 1566) (nil tag-name "route" 1565 . 1566) (nil tag-type void 1565 . 1566) (nil font-lock-face web-mode-block-delimiter-face 1565 . 1566) (nil fontified t 1564 . 1565) (nil ws-butler-chg chg 1564 . 1565) (nil tag-attr t 1564 . 1565) (nil tag-name "route" 1564 . 1565) (nil tag-type void 1564 . 1565) (nil font-lock-face web-mode-html-attr-equal-face 1564 . 1565) (nil fontified t 1556 . 1564) (nil ws-butler-chg chg 1556 . 1564) (nil tag-attr t 1556 . 1564) (nil tag-name "route" 1556 . 1564) (nil tag-type void 1556 . 1564) (nil font-lock-face web-mode-html-attr-name-face 1556 . 1564) (nil fontified t 1555 . 1556) (nil ws-butler-chg chg 1555 . 1556) (nil tag-attr-beg 0 1555 . 1556) (nil tag-attr t 1555 . 1556) (nil tag-name "route" 1555 . 1556) (nil tag-type void 1555 . 1556) (nil font-lock-face web-mode-html-attr-name-face 1555 . 1556) (nil fontified t 1554 . 1555) (nil ws-butler-chg chg 1554 . 1555) (nil tag-name "route" 1554 . 1555) (nil tag-type void 1554 . 1555) (nil fontified t 1553 . 1554) (nil ws-butler-chg chg 1553 . 1554) (nil tag-attr t 1553 . 1554) (nil tag-attr-end 4 1553 . 1554) (nil tag-name "route" 1553 . 1554) (nil tag-type void 1553 . 1554) (nil font-lock-face web-mode-html-attr-value-face 1553 . 1554) (nil fontified t 1551 . 1553) (nil ws-butler-chg chg 1551 . 1553) (nil tag-attr t 1551 . 1553) (nil tag-name "route" 1551 . 1553) (nil tag-type void 1551 . 1553) (nil font-lock-face web-mode-html-attr-value-face 1551 . 1553) (nil fontified t 1550 . 1551) (nil ws-butler-chg chg 1550 . 1551) (nil tag-attr t 1550 . 1551) (nil tag-name "route" 1550 . 1551) (nil tag-type void 1550 . 1551) (nil font-lock-face web-mode-html-attr-equal-face 1550 . 1551) (nil fontified t 1547 . 1550) (nil ws-butler-chg chg 1547 . 1550) (nil tag-attr t 1547 . 1550) (nil tag-name "route" 1547 . 1550) (nil tag-type void 1547 . 1550) (nil font-lock-face web-mode-html-attr-name-face 1547 . 1550) (nil fontified t 1546 . 1547) (nil ws-butler-chg chg 1546 . 1547) (nil tag-attr-beg 0 1546 . 1547) (nil tag-attr t 1546 . 1547) (nil tag-name "route" 1546 . 1547) (nil tag-type void 1546 . 1547) (nil font-lock-face web-mode-html-attr-name-face 1546 . 1547) (nil fontified t 1545 . 1546) (nil ws-butler-chg chg 1545 . 1546) (nil tag-name "route" 1545 . 1546) (nil tag-type void 1545 . 1546) (nil fontified t 1540 . 1545) (nil ws-butler-chg chg 1540 . 1545) (nil tag-name "route" 1540 . 1545) (nil tag-type void 1540 . 1545) (nil font-lock-face web-mode-html-tag-face 1540 . 1545) (nil fontified t 1539 . 1540) (nil ws-butler-chg chg 1539 . 1540) (nil tag-name "route" 1539 . 1540) (nil tag-type void 1539 . 1540) (nil tag-beg 25 1539 . 1540) (nil font-lock-face web-mode-html-tag-bracket-face 1539 . 1540) (nil fontified t 1537 . 1539) (nil ws-butler-chg chg 1537 . 1539) (nil fontified t 1536 . 1537) (nil ws-butler-chg chg 1536 . 1537) (nil fontified t 1533 . 1536) (nil ws-butler-chg chg 1533 . 1536) (nil fontified t 1374 . 1533) (nil ws-butler-chg chg 1374 . 1533) (nil fontified t 1373 . 1374) (nil ws-butler-chg chg 1373 . 1374) (nil tag-name "router" 1373 . 1374) (nil tag-type start 1373 . 1374) (nil tag-end t 1373 . 1374) (nil font-lock-face web-mode-html-tag-bracket-face 1373 . 1374) (nil fontified t 1367 . 1373) (nil ws-butler-chg chg 1367 . 1373) (nil tag-name "router" 1367 . 1373) (nil tag-type start 1367 . 1373) (nil font-lock-face web-mode-html-tag-face 1367 . 1373) (nil fontified t 1366 . 1367) (nil ws-butler-chg chg 1366 . 1367) (nil tag-name "router" 1366 . 1367) (nil tag-type start 1366 . 1367) (nil tag-beg 16 1366 . 1367) (nil font-lock-face web-mode-html-tag-bracket-face 1366 . 1367) (nil fontified t 1365 . 1366) (nil ws-butler-chg chg 1365 . 1366) (nil fontified t 1362 . 1365) (nil ws-butler-chg chg 1362 . 1365) (nil fontified t 1194 . 1362) (nil ws-butler-chg chg 1194 . 1362) (nil fontified t 1191 . 1194) (nil ws-butler-chg chg 1191 . 1194) (nil fontified t 1033 . 1191) (nil ws-butler-chg chg 1033 . 1191) (nil fontified t 1032 . 1033) (nil ws-butler-chg chg 1032 . 1033) (nil tag-name "script" 1032 . 1033) (nil tag-type end 1032 . 1033) (nil tag-end t 1032 . 1033) (nil font-lock-face web-mode-html-tag-bracket-face 1032 . 1033) (nil fontified t 1026 . 1032) (nil ws-butler-chg chg 1026 . 1032) (nil tag-name "script" 1026 . 1032) (nil tag-type end 1026 . 1032) (nil font-lock-face web-mode-html-tag-face 1026 . 1032) (nil fontified t 1025 . 1026) (nil ws-butler-chg chg 1025 . 1026) (nil tag-name "script" 1025 . 1026) (nil tag-type end 1025 . 1026) (nil font-lock-face web-mode-html-tag-bracket-face 1025 . 1026) (nil fontified t 1024 . 1025) (nil ws-butler-chg chg 1024 . 1025) (nil tag-name "script" 1024 . 1025) (nil tag-type end 1024 . 1025) (nil tag-beg 20 1024 . 1025) (nil font-lock-face web-mode-html-tag-bracket-face 1024 . 1025) (nil fontified t 1023 . 1024) (nil ws-butler-chg chg 1023 . 1024) (nil part-side javascript 1023 . 1024) (nil fontified t 1020 . 1023) (nil ws-butler-chg chg 1020 . 1023) (nil part-side javascript 1020 . 1023) (nil fontified t 910 . 1020) (nil ws-butler-chg chg 910 . 1020) (nil part-side javascript 910 . 1020) (nil fontified t 909 . 910) (nil ws-butler-chg chg 909 . 910) (nil part-side javascript 909 . 910) (nil fontified t 908 . 909) (nil ws-butler-chg chg 908 . 909) (nil part-side javascript 908 . 909) (nil part-token string 908 . 909) (nil syntax-table (15) 908 . 909) (nil font-lock-face web-mode-javascript-string-face 908 . 909) (nil fontified t 884 . 908) (nil ws-butler-chg chg 884 . 908) (nil part-side javascript 884 . 908) (nil part-token string 884 . 908) (nil font-lock-face web-mode-javascript-string-face 884 . 908) (nil fontified t 883 . 884) (nil ws-butler-chg chg 883 . 884) (nil part-side javascript 883 . 884) (nil part-token string 883 . 884) (nil syntax-table (15) 883 . 884) (nil font-lock-face web-mode-javascript-string-face 883 . 884) (nil fontified t 882 . 883) (nil ws-butler-chg chg 882 . 883) (nil part-side javascript 882 . 883) (nil fontified t 878 . 882) (nil ws-butler-chg chg 878 . 882) (nil part-side javascript 878 . 882) (nil face web-mode-keyword-face 878 . 882) (nil fontified t 877 . 878) (nil ws-butler-chg chg 877 . 878) (nil part-side javascript 877 . 878) (nil fontified t 862 . 877) (nil ws-butler-chg chg 862 . 877) (nil part-side javascript 862 . 877) (nil face web-mode-type-face 862 . 877) (nil fontified t 861 . 862) (nil ws-butler-chg chg 861 . 862) (nil part-side javascript 861 . 862) (nil fontified t 855 . 861) (nil ws-butler-chg chg 855 . 861) (nil part-side javascript 855 . 861) (nil face web-mode-keyword-face 855 . 861) (nil fontified t 853 . 855) (nil ws-butler-chg chg 853 . 855) (nil part-side javascript 853 . 855) (nil fontified t 852 . 853) (nil ws-butler-chg chg 852 . 853) (nil part-side javascript 852 . 853) (nil fontified t 849 . 852) (nil ws-butler-chg chg 849 . 852) (nil part-side javascript 849 . 852) (nil fontified t 737 . 849) (nil ws-butler-chg chg 737 . 849) (nil part-side javascript 737 . 849) (nil fontified t 736 . 737) (nil ws-butler-chg chg 736 . 737) (nil part-side javascript 736 . 737) (nil fontified t 735 . 736) (nil ws-butler-chg chg 735 . 736) (nil part-side javascript 735 . 736) (nil part-token string 735 . 736) (nil syntax-table (15) 735 . 736) (nil font-lock-face web-mode-javascript-string-face 735 . 736) (nil fontified t 712 . 735) (nil ws-butler-chg chg 712 . 735) (nil part-side javascript 712 . 735) (nil part-token string 712 . 735) (nil font-lock-face web-mode-javascript-string-face 712 . 735) (nil fontified t 711 . 712) (nil ws-butler-chg chg 711 . 712) (nil part-side javascript 711 . 712) (nil part-token string 711 . 712) (nil syntax-table (15) 711 . 712) (nil font-lock-face web-mode-javascript-string-face 711 . 712) (nil fontified t 710 . 711) (nil ws-butler-chg chg 710 . 711) (nil part-side javascript 710 . 711) (nil fontified t 706 . 710) (nil ws-butler-chg chg 706 . 710) (nil part-side javascript 706 . 710) (nil face web-mode-keyword-face 706 . 710) (nil fontified t 705 . 706) (nil ws-butler-chg chg 705 . 706) (nil part-side javascript 705 . 706) (nil fontified t 691 . 705) (nil ws-butler-chg chg 691 . 705) (nil part-side javascript 691 . 705) (nil face web-mode-type-face 691 . 705) (nil fontified t 690 . 691) (nil ws-butler-chg chg 690 . 691) (nil part-side javascript 690 . 691) (nil fontified t 684 . 690) (nil ws-butler-chg chg 684 . 690) (nil part-side javascript 684 . 690) (nil face web-mode-keyword-face 684 . 690) (nil fontified t 682 . 684) (nil ws-butler-chg chg 682 . 684) (nil part-side javascript 682 . 684) (nil fontified t 681 . 682) (nil ws-butler-chg chg 681 . 682) (nil part-side javascript 681 . 682) (nil fontified t 678 . 681) (nil ws-butler-chg chg 678 . 681) (nil part-side javascript 678 . 681) (nil fontified t 560 . 678) (nil ws-butler-chg chg 560 . 678) (nil part-side javascript 560 . 678) (nil fontified t 559 . 560) (nil ws-butler-chg chg 559 . 560) (nil part-side javascript 559 . 560) (nil fontified t 558 . 559) (nil ws-butler-chg chg 558 . 559) (nil part-side javascript 558 . 559) (nil part-token string 558 . 559) (nil syntax-table (15) 558 . 559) (nil font-lock-face web-mode-javascript-string-face 558 . 559) (nil fontified t 544 . 558) (nil ws-butler-chg chg 544 . 558) (nil part-side javascript 544 . 558) (nil part-token string 544 . 558) (nil font-lock-face web-mode-javascript-string-face 544 . 558) (nil fontified t 543 . 544) (nil ws-butler-chg chg 543 . 544) (nil part-side javascript 543 . 544) (nil part-token string 543 . 544) (nil syntax-table (15) 543 . 544) (nil font-lock-face web-mode-javascript-string-face 543 . 544) (nil fontified t 542 . 543) (nil ws-butler-chg chg 542 . 543) (nil part-side javascript 542 . 543) (nil fontified t 538 . 542) (nil ws-butler-chg chg 538 . 542) (nil part-side javascript 538 . 542) (nil face web-mode-keyword-face 538 . 542) (nil fontified t 537 . 538) (nil ws-butler-chg chg 537 . 538) (nil part-side javascript 537 . 538) (nil fontified t 536 . 537) (nil ws-butler-chg chg 536 . 537) (nil block-side t 536 . 537) (nil block-end t 536 . 537) (nil block-token delimiter-end 536 . 537) (nil part-side javascript 536 . 537) (nil font-lock-face web-mode-block-delimiter-face 536 . 537) (nil fontified t 535 . 536) (nil ws-butler-chg chg 535 . 536) (nil block-side t 535 . 536) (nil part-side javascript 535 . 536) (nil fontified t 530 . 535) (nil ws-butler-chg chg 530 . 535) (nil block-side t 530 . 535) (nil part-side javascript 530 . 535) (nil face web-mode-variable-name-face 530 . 535) (nil fontified t 528 . 530) (nil ws-butler-chg chg 528 . 530) (nil block-side t 528 . 530) (nil part-side javascript 528 . 530) (nil fontified t 522 . 528) (nil ws-butler-chg chg 522 . 528) (nil block-side t 522 . 528) (nil part-side javascript 522 . 528) (nil face web-mode-variable-name-face 522 . 528) (nil fontified t 521 . 522) (nil ws-butler-chg chg 521 . 522) (nil block-side t 521 . 522) (nil part-side javascript 521 . 522) (nil fontified t 520 . 521) (nil ws-butler-chg chg 520 . 521) (nil block-beg 0 520 . 521) (nil block-controls 0 520 . 521) (nil block-side t 520 . 521) (nil block-token delimiter-beg 520 . 521) (nil part-side javascript 520 . 521) (nil font-lock-face web-mode-block-delimiter-face 520 . 521) (nil fontified t 519 . 520) (nil ws-butler-chg chg 519 . 520) (nil part-side javascript 519 . 520) (nil fontified t 513 . 519) (nil ws-butler-chg chg 513 . 519) (nil part-side javascript 513 . 519) (nil face web-mode-keyword-face 513 . 519) (nil fontified t 511 . 513) (nil ws-butler-chg chg 511 . 513) (nil part-side javascript 511 . 513) (nil fontified t 510 . 511) (nil ws-butler-chg chg 510 . 511) (nil part-side javascript 510 . 511) (nil fontified t 507 . 510) (nil ws-butler-chg chg 507 . 510) (nil part-side javascript 507 . 510) (nil fontified t 348 . 507) (nil ws-butler-chg chg 348 . 507) (nil part-side javascript 348 . 507) (nil fontified t 347 . 348) (nil ws-butler-chg chg 347 . 348) (nil tag-name "script" 347 . 348) (nil tag-type start 347 . 348) (nil tag-end t 347 . 348) (nil font-lock-face web-mode-html-tag-bracket-face 347 . 348) (nil fontified t 341 . 347) (nil ws-butler-chg chg 341 . 347) (nil tag-name "script" 341 . 347) (nil tag-type start 341 . 347) (nil font-lock-face web-mode-html-tag-face 341 . 347) (nil fontified t 340 . 341) (nil ws-butler-chg chg 340 . 341) (nil tag-name "script" 340 . 341) (nil tag-type start 340 . 341) (nil tag-beg 16 340 . 341) (nil font-lock-face web-mode-html-tag-bracket-face 340 . 341) (nil fontified t 339 . 340) (nil ws-butler-chg chg 339 . 340) (nil fontified t 336 . 339) (nil ws-butler-chg chg 336 . 339) (336 . 2046) (t 26513 50054 249901 167000)) nil (26521 43846 380066 885000) 0 nil])
([nil nil (("    <script>                                                                                                                                                                     import { Router, Route } from 'svelte-routing';                                                                                                                            import VideoDashboard from './VideoDashboard.svelte';                                                                                                                      import HockeyGamesPage from './HockeyGamesPage.svelte';                                                                                                                  </script>                                                                                                                                                                                                                                                                                                                                             <Router>                                                                                                                                                                     <Route path=\"/\" component={VideoDashboard} />                                                                                                                              <Route path=\"/hockey-games\" component={HockeyGamesPage} />                                                                                                               </Router>                                                                                                                                                              " . 336) (nil fontified nil 336 . 339) (nil fontified nil 339 . 340) (nil tag-name "script" 340 . 341) (nil ws-butler-chg nil 340 . 341) (nil fontified nil 340 . 341) (nil tag-name "script" 341 . 347) (nil fontified nil 341 . 347) (nil tag-name "script" 347 . 348) (nil fontified nil 347 . 348) (nil fontified nil 348 . 507) (nil fontified nil 507 . 510) (nil fontified nil 510 . 511) (nil fontified nil 511 . 513) (nil fontified nil 513 . 519) (nil fontified nil 519 . 520) (nil fontified nil 520 . 521) (nil fontified nil 521 . 522) (nil fontified nil 522 . 528) (nil fontified nil 528 . 530) (nil fontified nil 530 . 535) (nil fontified nil 535 . 536) (nil fontified nil 536 . 537) (nil fontified nil 537 . 538) (nil fontified nil 538 . 542) (nil fontified nil 542 . 543) (nil fontified nil 543 . 544) (nil fontified nil 544 . 558) (nil fontified nil 558 . 559) (nil fontified nil 559 . 560) (nil fontified nil 560 . 678) (nil fontified nil 678 . 681) (nil fontified nil 681 . 682) (nil fontified nil 682 . 684) (nil fontified nil 684 . 690) (nil fontified nil 690 . 691) (nil fontified nil 691 . 705) (nil fontified nil 705 . 706) (nil fontified nil 706 . 710) (nil fontified nil 710 . 711) (nil fontified nil 711 . 712) (nil fontified nil 712 . 735) (nil fontified nil 735 . 736) (nil fontified nil 736 . 737) (nil fontified nil 737 . 849) (nil fontified nil 849 . 852) (nil fontified nil 852 . 853) (nil fontified nil 853 . 855) (nil fontified nil 855 . 861) (nil fontified nil 861 . 862) (nil fontified nil 862 . 877) (nil fontified nil 877 . 878) (nil fontified nil 878 . 882) (nil fontified nil 882 . 883) (nil fontified nil 883 . 884) (nil fontified nil 884 . 908) (nil fontified nil 908 . 909) (nil fontified nil 909 . 910) (nil fontified nil 910 . 1020) (nil fontified nil 1020 . 1023) (nil fontified nil 1023 . 1024) (nil tag-name "script" 1024 . 1025) (nil fontified nil 1024 . 1025) (nil tag-name "script" 1025 . 1026) (nil fontified nil 1025 . 1026) (nil tag-name "script" 1026 . 1032) (nil fontified nil 1026 . 1032) (nil tag-name "script" 1032 . 1033) (nil fontified nil 1032 . 1033) (nil fontified nil 1033 . 1191) (nil fontified nil 1191 . 1194) (nil fontified nil 1194 . 1362) (nil fontified nil 1362 . 1365) (nil fontified nil 1365 . 1366) (nil tag-name "router" 1366 . 1367) (nil fontified nil 1366 . 1367) (nil tag-name "router" 1367 . 1373) (nil fontified nil 1367 . 1373) (nil tag-name "router" 1373 . 1374) (nil fontified nil 1373 . 1374) (nil fontified nil 1374 . 1533) (nil fontified nil 1533 . 1536) (nil fontified nil 1536 . 1537) (nil fontified nil 1537 . 1539) (nil tag-name "route" 1539 . 1540) (nil fontified nil 1539 . 1540) (nil tag-name "route" 1540 . 1545) (nil fontified nil 1540 . 1545) (nil tag-name "route" 1545 . 1546) (nil fontified nil 1545 . 1546) (nil tag-name "route" 1546 . 1547) (nil fontified nil 1546 . 1547) (nil tag-name "route" 1547 . 1550) (nil fontified nil 1547 . 1550) (nil tag-name "route" 1550 . 1551) (nil fontified nil 1550 . 1551) (nil tag-name "route" 1551 . 1553) (nil fontified nil 1551 . 1553) (nil tag-name "route" 1553 . 1554) (nil fontified nil 1553 . 1554) (nil tag-name "route" 1554 . 1555) (nil fontified nil 1554 . 1555) (nil tag-name "route" 1555 . 1556) (nil fontified nil 1555 . 1556) (nil tag-name "route" 1556 . 1564) (nil fontified nil 1556 . 1564) (nil tag-name "route" 1564 . 1565) (nil fontified nil 1564 . 1565) (nil tag-name "route" 1565 . 1566) (nil fontified nil 1565 . 1566) (nil tag-name "route" 1566 . 1580) (nil fontified nil 1566 . 1580) (nil tag-name "route" 1580 . 1581) (nil fontified nil 1580 . 1581) (nil tag-name "route" 1581 . 1582) (nil fontified nil 1581 . 1582) (nil tag-name "route" 1582 . 1583) (nil fontified nil 1582 . 1583) (nil tag-name "route" 1583 . 1584) (nil fontified nil 1583 . 1584) (nil fontified nil 1584 . 1704) (nil fontified nil 1704 . 1707) (nil fontified nil 1707 . 1708) (nil fontified nil 1708 . 1710) (nil tag-name "route" 1710 . 1711) (nil fontified nil 1710 . 1711) (nil tag-name "route" 1711 . 1716) (nil fontified nil 1711 . 1716) (nil tag-name "route" 1716 . 1717) (nil fontified nil 1716 . 1717) (nil tag-name "route" 1717 . 1718) (nil fontified nil 1717 . 1718) (nil tag-name "route" 1718 . 1721) (nil fontified nil 1718 . 1721) (nil tag-name "route" 1721 . 1722) (nil fontified nil 1721 . 1722) (nil tag-name "route" 1722 . 1736) (nil fontified nil 1722 . 1736) (nil tag-name "route" 1736 . 1737) (nil fontified nil 1736 . 1737) (nil tag-name "route" 1737 . 1738) (nil fontified nil 1737 . 1738) (nil tag-name "route" 1738 . 1739) (nil fontified nil 1738 . 1739) (nil tag-name "route" 1739 . 1747) (nil fontified nil 1739 . 1747) (nil tag-name "route" 1747 . 1748) (nil fontified nil 1747 . 1748) (nil tag-name "route" 1748 . 1749) (nil fontified nil 1748 . 1749) (nil tag-name "route" 1749 . 1764) (nil fontified nil 1749 . 1764) (nil tag-name "route" 1764 . 1765) (nil fontified nil 1764 . 1765) (nil tag-name "route" 1765 . 1766) (nil fontified nil 1765 . 1766) (nil tag-name "route" 1766 . 1767) (nil fontified nil 1766 . 1767) (nil tag-name "route" 1767 . 1768) (nil fontified nil 1767 . 1768) (nil fontified nil 1768 . 1875) (nil fontified nil 1875 . 1878) (nil fontified nil 1878 . 1879) (nil tag-name "router" 1879 . 1880) (nil fontified nil 1879 . 1880) (nil tag-name "router" 1880 . 1881) (nil fontified nil 1880 . 1881) (nil tag-name "router" 1881 . 1887) (nil fontified nil 1881 . 1887) (nil tag-name "router" 1887 . 1888) (nil fontified nil 1887 . 1888) (nil fontified nil 2045 . 2046) (nil fontified nil 1888 . 2045) (nil rear-nonsticky t 2045 . 2046) (nil ws-butler-chg delete 340 . 341) (336 . 340)) nil (26521 43846 379989 304000) 0 nil])
([nil nil ((9 . 10) (t 26513 50054 249901 167000)) nil (26521 43846 379965 339000) 0 nil])
([nil nil ((nil rear-nonsticky nil 56 . 57) (nil fontified t 56 . 57) (nil ws-butler-chg chg 56 . 57) (nil part-side javascript 56 . 57) (nil fontified t 55 . 56) (nil ws-butler-chg chg 55 . 56) (nil part-side javascript 55 . 56) (nil part-token string 55 . 56) (nil syntax-table (15) 55 . 56) (nil font-lock-face web-mode-javascript-string-face 55 . 56) (nil fontified t 41 . 55) (nil ws-butler-chg chg 41 . 55) (nil part-side javascript 41 . 55) (nil part-token string 41 . 55) (nil font-lock-face web-mode-javascript-string-face 41 . 55) (nil fontified t 40 . 41) (nil ws-butler-chg chg 40 . 41) (nil part-side javascript 40 . 41) (nil part-token string 40 . 41) (nil syntax-table (15) 40 . 41) (nil font-lock-face web-mode-javascript-string-face 40 . 41) (nil fontified t 39 . 40) (nil ws-butler-chg chg 39 . 40) (nil part-side javascript 39 . 40) (nil fontified t 35 . 39) (nil ws-butler-chg chg 35 . 39) (nil part-side javascript 35 . 39) (nil face web-mode-keyword-face 35 . 39) (nil fontified t 34 . 35) (nil ws-butler-chg chg 34 . 35) (nil part-side javascript 34 . 35) (nil fontified t 33 . 34) (nil ws-butler-chg chg 33 . 34) (nil block-side t 33 . 34) (nil block-end t 33 . 34) (nil block-token delimiter-end 33 . 34) (nil part-side javascript 33 . 34) (nil font-lock-face web-mode-block-delimiter-face 33 . 34) (nil fontified t 32 . 33) (nil ws-butler-chg chg 32 . 33) (nil block-side t 32 . 33) (nil part-side javascript 32 . 33) (nil fontified t 27 . 32) (nil ws-butler-chg chg 27 . 32) (nil block-side t 27 . 32) (nil part-side javascript 27 . 32) (nil face web-mode-variable-name-face 27 . 32) (nil fontified t 25 . 27) (nil ws-butler-chg chg 25 . 27) (nil block-side t 25 . 27) (nil part-side javascript 25 . 27) (nil fontified t 19 . 25) (nil ws-butler-chg chg 19 . 25) (nil block-side t 19 . 25) (nil part-side javascript 19 . 25) (nil face web-mode-variable-name-face 19 . 25) (nil fontified t 18 . 19) (nil ws-butler-chg chg 18 . 19) (nil block-side t 18 . 19) (nil part-side javascript 18 . 19) (nil fontified t 17 . 18) (nil ws-butler-chg chg 17 . 18) (nil block-beg 0 17 . 18) (nil block-controls 0 17 . 18) (nil block-side t 17 . 18) (nil block-token delimiter-beg 17 . 18) (nil part-side javascript 17 . 18) (nil font-lock-face web-mode-block-delimiter-face 17 . 18) (nil fontified t 16 . 17) (nil ws-butler-chg chg 16 . 17) (nil part-side javascript 16 . 17) (nil fontified t 10 . 16) (nil ws-butler-chg chg 10 . 16) (nil part-side javascript 10 . 16) (nil face web-mode-keyword-face 10 . 16) (10 . 57)) nil (26521 43846 379960 239000) 0 nil])
([nil nil ((nil rear-nonsticky nil 166 . 167) (nil fontified t 166 . 167) (nil ws-butler-chg chg 166 . 167) (nil part-side javascript 166 . 167) (nil fontified t 165 . 166) (nil ws-butler-chg chg 165 . 166) (nil part-side javascript 165 . 166) (nil part-token string 165 . 166) (nil syntax-table (15) 165 . 166) (nil font-lock-face web-mode-javascript-string-face 165 . 166) (nil fontified t 141 . 165) (nil ws-butler-chg chg 141 . 165) (nil part-side javascript 141 . 165) (nil part-token string 141 . 165) (nil font-lock-face web-mode-javascript-string-face 141 . 165) (nil fontified t 140 . 141) (nil ws-butler-chg chg 140 . 141) (nil part-side javascript 140 . 141) (nil part-token string 140 . 141) (nil syntax-table (15) 140 . 141) (nil font-lock-face web-mode-javascript-string-face 140 . 141) (nil fontified t 139 . 140) (nil ws-butler-chg chg 139 . 140) (nil part-side javascript 139 . 140) (nil fontified t 135 . 139) (nil ws-butler-chg chg 135 . 139) (nil part-side javascript 135 . 139) (nil face web-mode-keyword-face 135 . 139) (nil fontified t 134 . 135) (nil ws-butler-chg chg 134 . 135) (nil part-side javascript 134 . 135) (nil fontified t 119 . 134) (nil ws-butler-chg chg 119 . 134) (nil part-side javascript 119 . 134) (nil face web-mode-type-face 119 . 134) (nil fontified t 118 . 119) (nil ws-butler-chg chg 118 . 119) (nil part-side javascript 118 . 119) (nil fontified t 112 . 118) (nil ws-butler-chg chg 112 . 118) (nil part-side javascript 112 . 118) (nil face web-mode-keyword-face 112 . 118) (112 . 167)) nil (26521 43846 379940 929000) 0 nil])
([nil nil ((167 . 168) (t 26513 50780 952434 548000)) nil (26521 43846 379930 643000) 0 nil])
([nil nil (("    " . -440) (nil rear-nonsticky nil 965 . 966) (nil fontified t 965 . 966) (nil ws-butler-chg chg 965 . 966) (nil tag-name "router" 965 . 966) (nil tag-type end 965 . 966) (nil tag-end t 965 . 966) (nil font-lock-face web-mode-html-tag-bracket-face 965 . 966) (nil fontified t 959 . 965) (nil ws-butler-chg chg 959 . 965) (nil tag-name "router" 959 . 965) (nil tag-type end 959 . 965) (nil font-lock-face web-mode-html-tag-face 959 . 965) (nil fontified t 958 . 959) (nil ws-butler-chg chg 958 . 959) (nil tag-name "router" 958 . 959) (nil tag-type end 958 . 959) (nil font-lock-face web-mode-html-tag-bracket-face 958 . 959) (nil fontified t 957 . 958) (nil ws-butler-chg chg 957 . 958) (nil tag-name "router" 957 . 958) (nil tag-type end 957 . 958) (nil tag-beg 20 957 . 958) (nil font-lock-face web-mode-html-tag-bracket-face 957 . 958) (nil fontified t 956 . 957) (nil ws-butler-chg chg 956 . 957) (nil fontified t 953 . 956) (nil ws-butler-chg chg 953 . 956) (nil fontified t 846 . 953) (nil ws-butler-chg chg 846 . 953) (nil fontified t 845 . 846) (nil ws-butler-chg chg 845 . 846) (nil tag-name "route" 845 . 846) (nil tag-type void 845 . 846) (nil tag-end t 845 . 846) (nil font-lock-face web-mode-html-tag-bracket-face 845 . 846) (nil fontified t 844 . 845) (nil ws-butler-chg chg 844 . 845) (nil tag-name "route" 844 . 845) (nil tag-type void 844 . 845) (nil font-lock-face web-mode-html-tag-bracket-face 844 . 845) (nil fontified t 843 . 844) (nil ws-butler-chg chg 843 . 844) (nil tag-name "route" 843 . 844) (nil tag-type void 843 . 844) (nil fontified t 842 . 843) (nil ws-butler-chg chg 842 . 843) (nil block-side t 842 . 843) (nil block-end t 842 . 843) (nil block-token delimiter-end 842 . 843) (nil tag-attr t 842 . 843) (nil tag-attr-end 9 842 . 843) (nil tag-name "route" 842 . 843) (nil tag-type void 842 . 843) (nil font-lock-face web-mode-block-delimiter-face 842 . 843) (nil fontified t 827 . 842) (nil ws-butler-chg chg 827 . 842) (nil block-side t 827 . 842) (nil tag-attr t 827 . 842) (nil tag-name "route" 827 . 842) (nil tag-type void 827 . 842) (nil face web-mode-variable-name-face 827 . 842) (nil fontified t 826 . 827) (nil ws-butler-chg chg 826 . 827) (nil block-beg 0 826 . 827) (nil block-controls 0 826 . 827) (nil block-side t 826 . 827) (nil block-token delimiter-beg 826 . 827) (nil tag-attr t 826 . 827) (nil tag-name "route" 826 . 827) (nil tag-type void 826 . 827) (nil font-lock-face web-mode-block-delimiter-face 826 . 827) (nil fontified t 825 . 826) (nil ws-butler-chg chg 825 . 826) (nil tag-attr t 825 . 826) (nil tag-name "route" 825 . 826) (nil tag-type void 825 . 826) (nil font-lock-face web-mode-html-attr-equal-face 825 . 826) (nil fontified t 817 . 825) (nil ws-butler-chg chg 817 . 825) (nil tag-attr t 817 . 825) (nil tag-name "route" 817 . 825) (nil tag-type void 817 . 825) (nil font-lock-face web-mode-html-attr-name-face 817 . 825) (nil fontified t 816 . 817) (nil ws-butler-chg chg 816 . 817) (nil tag-attr-beg 0 816 . 817) (nil tag-attr t 816 . 817) (nil tag-name "route" 816 . 817) (nil tag-type void 816 . 817) (nil font-lock-face web-mode-html-attr-name-face 816 . 817) (nil fontified t 815 . 816) (nil ws-butler-chg chg 815 . 816) (nil tag-name "route" 815 . 816) (nil tag-type void 815 . 816) (nil fontified t 814 . 815) (nil ws-butler-chg chg 814 . 815) (nil tag-attr t 814 . 815) (nil tag-attr-end 4 814 . 815) (nil tag-name "route" 814 . 815) (nil tag-type void 814 . 815) (nil font-lock-face web-mode-html-attr-value-face 814 . 815) (nil fontified t 800 . 814) (nil ws-butler-chg chg 800 . 814) (nil tag-attr t 800 . 814) (nil tag-name "route" 800 . 814) (nil tag-type void 800 . 814) (nil font-lock-face web-mode-html-attr-value-face 800 . 814) (nil fontified t 799 . 800) (nil ws-butler-chg chg 799 . 800) (nil tag-attr t 799 . 800) (nil tag-name "route" 799 . 800) (nil tag-type void 799 . 800) (nil font-lock-face web-mode-html-attr-equal-face 799 . 800) (nil fontified t 796 . 799) (nil ws-butler-chg chg 796 . 799) (nil tag-attr t 796 . 799) (nil tag-name "route" 796 . 799) (nil tag-type void 796 . 799) (nil font-lock-face web-mode-html-attr-name-face 796 . 799) (nil fontified t 795 . 796) (nil ws-butler-chg chg 795 . 796) (nil tag-attr-beg 0 795 . 796) (nil tag-attr t 795 . 796) (nil tag-name "route" 795 . 796) (nil tag-type void 795 . 796) (nil font-lock-face web-mode-html-attr-name-face 795 . 796) (nil fontified t 794 . 795) (nil ws-butler-chg chg 794 . 795) (nil tag-name "route" 794 . 795) (nil tag-type void 794 . 795) (nil fontified t 789 . 794) (nil ws-butler-chg chg 789 . 794) (nil tag-name "route" 789 . 794) (nil tag-type void 789 . 794) (nil font-lock-face web-mode-html-tag-face 789 . 794) (nil fontified t 788 . 789) (nil ws-butler-chg chg 788 . 789) (nil tag-name "route" 788 . 789) (nil tag-type void 788 . 789) (nil tag-beg 25 788 . 789) (nil font-lock-face web-mode-html-tag-bracket-face 788 . 789) (nil fontified t 786 . 788) (nil ws-butler-chg chg 786 . 788) (nil fontified t 785 . 786) (nil ws-butler-chg chg 785 . 786) (nil fontified t 782 . 785) (nil ws-butler-chg chg 782 . 785) (nil fontified t 662 . 782) (nil ws-butler-chg chg 662 . 782) (nil fontified t 661 . 662) (nil ws-butler-chg chg 661 . 662) (nil tag-name "route" 661 . 662) (nil tag-type void 661 . 662) (nil tag-end t 661 . 662) (nil font-lock-face web-mode-html-tag-bracket-face 661 . 662) (nil fontified t 660 . 661) (nil ws-butler-chg chg 660 . 661) (nil tag-name "route" 660 . 661) (nil tag-type void 660 . 661) (nil font-lock-face web-mode-html-tag-bracket-face 660 . 661) (nil fontified t 659 . 660) (nil ws-butler-chg chg 659 . 660) (nil tag-name "route" 659 . 660) (nil tag-type void 659 . 660) (nil fontified t 658 . 659) (nil ws-butler-chg chg 658 . 659) (nil block-side t 658 . 659) (nil block-end t 658 . 659) (nil block-token delimiter-end 658 . 659) (nil tag-attr t 658 . 659) (nil tag-attr-end 9 658 . 659) (nil tag-name "route" 658 . 659) (nil tag-type void 658 . 659) (nil font-lock-face web-mode-block-delimiter-face 658 . 659) (nil fontified t 644 . 658) (nil ws-butler-chg chg 644 . 658) (nil block-side t 644 . 658) (nil tag-attr t 644 . 658) (nil tag-name "route" 644 . 658) (nil tag-type void 644 . 658) (nil face web-mode-variable-name-face 644 . 658) (nil fontified t 643 . 644) (nil ws-butler-chg chg 643 . 644) (nil block-beg 0 643 . 644) (nil block-controls 0 643 . 644) (nil block-side t 643 . 644) (nil block-token delimiter-beg 643 . 644) (nil tag-attr t 643 . 644) (nil tag-name "route" 643 . 644) (nil tag-type void 643 . 644) (nil font-lock-face web-mode-block-delimiter-face 643 . 644) (nil fontified t 642 . 643) (nil ws-butler-chg chg 642 . 643) (nil tag-attr t 642 . 643) (nil tag-name "route" 642 . 643) (nil tag-type void 642 . 643) (nil font-lock-face web-mode-html-attr-equal-face 642 . 643) (nil fontified t 634 . 642) (nil ws-butler-chg chg 634 . 642) (nil tag-attr t 634 . 642) (nil tag-name "route" 634 . 642) (nil tag-type void 634 . 642) (nil font-lock-face web-mode-html-attr-name-face 634 . 642) (nil fontified t 633 . 634) (nil ws-butler-chg chg 633 . 634) (nil tag-attr-beg 0 633 . 634) (nil tag-attr t 633 . 634) (nil tag-name "route" 633 . 634) (nil tag-type void 633 . 634) (nil font-lock-face web-mode-html-attr-name-face 633 . 634) (nil fontified t 632 . 633) (nil ws-butler-chg chg 632 . 633) (nil tag-name "route" 632 . 633) (nil tag-type void 632 . 633) (nil fontified t 631 . 632) (nil ws-butler-chg chg 631 . 632) (nil tag-attr t 631 . 632) (nil tag-attr-end 4 631 . 632) (nil tag-name "route" 631 . 632) (nil tag-type void 631 . 632) (nil font-lock-face web-mode-html-attr-value-face 631 . 632) (nil fontified t 629 . 631) (nil ws-butler-chg chg 629 . 631) (nil tag-attr t 629 . 631) (nil tag-name "route" 629 . 631) (nil tag-type void 629 . 631) (nil font-lock-face web-mode-html-attr-value-face 629 . 631) (nil fontified t 628 . 629) (nil ws-butler-chg chg 628 . 629) (nil tag-attr t 628 . 629) (nil tag-name "route" 628 . 629) (nil tag-type void 628 . 629) (nil font-lock-face web-mode-html-attr-equal-face 628 . 629) (nil fontified t 625 . 628) (nil ws-butler-chg chg 625 . 628) (nil tag-attr t 625 . 628) (nil tag-name "route" 625 . 628) (nil tag-type void 625 . 628) (nil font-lock-face web-mode-html-attr-name-face 625 . 628) (nil fontified t 624 . 625) (nil ws-butler-chg chg 624 . 625) (nil tag-attr-beg 0 624 . 625) (nil tag-attr t 624 . 625) (nil tag-name "route" 624 . 625) (nil tag-type void 624 . 625) (nil font-lock-face web-mode-html-attr-name-face 624 . 625) (nil fontified t 623 . 624) (nil ws-butler-chg chg 623 . 624) (nil tag-name "route" 623 . 624) (nil tag-type void 623 . 624) (nil fontified t 618 . 623) (nil ws-butler-chg chg 618 . 623) (nil tag-name "route" 618 . 623) (nil tag-type void 618 . 623) (nil font-lock-face web-mode-html-tag-face 618 . 623) (nil fontified t 617 . 618) (nil ws-butler-chg chg 617 . 618) (nil tag-name "route" 617 . 618) (nil tag-type void 617 . 618) (nil tag-beg 25 617 . 618) (nil font-lock-face web-mode-html-tag-bracket-face 617 . 618) (nil fontified t 615 . 617) (nil ws-butler-chg chg 615 . 617) (nil fontified t 614 . 615) (nil ws-butler-chg chg 614 . 615) (nil fontified t 611 . 614) (nil ws-butler-chg chg 611 . 614) (nil fontified t 452 . 611) (nil ws-butler-chg chg 452 . 611) (nil fontified t 451 . 452) (nil ws-butler-chg chg 451 . 452) (nil tag-name "router" 451 . 452) (nil tag-type start 451 . 452) (nil tag-end t 451 . 452) (nil font-lock-face web-mode-html-tag-bracket-face 451 . 452) (nil fontified t 445 . 451) (nil ws-butler-chg chg 445 . 451) (nil tag-name "router" 445 . 451) (nil tag-type start 445 . 451) (nil font-lock-face web-mode-html-tag-face 445 . 451) (nil fontified t 444 . 445) (nil ws-butler-chg chg 444 . 445) (nil tag-name "router" 444 . 445) (nil tag-type start 444 . 445) (nil tag-beg 16 444 . 445) (nil font-lock-face web-mode-html-tag-bracket-face 444 . 445) (nil fontified t 443 . 444) (nil ws-butler-chg chg 443 . 444) (nil fontified t 440 . 443) (nil ws-butler-chg chg 440 . 443) (440 . 966) (t 26513 50782 445751 546000)) nil (26521 43846 379915 89000) 0 nil])
([nil nil ((613 . 616)) nil (26521 43846 379859 962000) 0 nil])
([nil nil (("                   " . 597)) nil (26521 43846 379859 186000) 0 nil])
([nil nil ((597 . 600)) nil (26521 43846 379858 393000) 0 nil])
([nil nil ((" " . -642) 643) nil (26521 43846 379857 538000) 0 nil])
([nil nil ((" " . -615) 616) nil (26521 43846 379856 480000) 0 nil])
([nil nil ((615 . 616)) nil (26521 43846 379855 422000) 0 nil])
([nil nil (("                                                                                                               " . 828)) nil (26521 43846 379854 335000) 0 nil])
([nil nil ((828 . 829)) nil (26521 43846 379853 519000) 0 nil])
([nil nil ((770 . 772)) nil (26521 43846 379852 607000) 0 nil])
([nil nil ((" " . -615) 616) nil (26521 43846 379851 586000) 0 nil])
([nil nil ((615 . 616)) nil (26521 43846 379850 613000) 0 nil])
([nil nil (("                                                                                                                                                        " . 448)) nil (26521 43846 379849 815000) 0 nil])
([nil nil ((448 . 451)) nil (26521 43846 379848 870000) 0 nil])
([nil nil (("                                                                                                                                " . 495)) nil (26521 43846 379847 853000) 0 nil])
([nil nil ((495 . 498)) nil (26521 43846 379846 988000) 0 nil])
([nil nil ((440 . 441) (t 26513 50865 81666 364000)) nil (26521 43846 379846 119000) 0 nil])
([nil nil ((568 . 569)) nil (26521 43846 379845 60000) 0 nil])
([nil nil ((625 . 630) (581 . 586) ("  " . 581) (569 . 633) ("<main>
  <VideoDashboard {videoId} {persons} />
</main>" . 569) 625 (t 26513 50901 658082 50000)) nil (26521 43846 379843 628000) 0 nil])
([nil nil ((569 . 624) ("<!-- <main>
  <VideoDashboard {videoId} {persons} />
</main> -->" . 569) (581 . 583) ("     " . 581) ("     " . 625) (t 26513 50916 304659 986000)) nil (26521 43846 379840 475000) 0 nil])
([nil nil ((453 . 590) ("Route path=\"/\" component={VideoDashboard}/>
  <Route path=\"/hockey-games\" component={HockeyGamesPage} />
</Router>

<main>
  <VideoDashboard {videoId} {persons} />
</main" . 453) (t 26513 50924 844611 121000)) nil (26521 43846 379838 216000) 0 nil])
([nil nil (("Page" . 563) (t 26513 51066 510718 290000)) nil (26521 43846 379836 747000) 0 nil])
([nil nil (("P" . -130) ("a" . -131) ("g" . -132) ("e" . -133) 134 (t 26513 51074 114032 498000)) nil (26521 43846 379834 992000) 0 nil])
([nil nil (("P" . -150) ("a" . -151) ("g" . -152) ("e" . -153) 154) nil (26521 43846 379832 959000) 0 nil])
([nil nil ((150 . 154) (t 26513 51092 543989 814000)) nil (26521 43846 379831 168000) 0 nil])
([nil nil ((130 . 134)) nil (26521 43846 379830 248000) 0 nil])
([nil nil ((563 . 567)) nil (26521 43846 379829 675000) 0 nil])
([nil nil ((453 . 623) ("main>
    <Route path=\"/\" component={VideoDashboard} />
    <Route path=\"/hockey-games\" component={HockeyGamesPage} />
  </main>
</Router" . 453)) nil (26521 43846 379828 960000) 0 nil])
([nil nil (("
" . 568)) nil (26521 43846 379828 258000) 0 nil])
([nil nil (("
" . 440)) nil (26521 43846 379827 691000) 0 nil])
([nil nil (("
  " . 495)) nil (26521 43846 379827 104000) 0 nil])
([nil nil ((495 . 623)) nil (26521 43846 379826 533000) 0 nil])
([nil nil (("
  " . 448)) nil (26521 43846 379825 961000) 0 nil])
([nil nil ((448 . 600)) nil (26521 43846 379825 433000) 0 nil])
([nil nil ((" " . 615)) nil (26521 43846 379824 869000) 0 nil])
([nil nil ((615 . 616)) nil (26521 43846 379824 304000) 0 nil])
([nil nil (("  " . 770)) nil (26521 43846 379823 782000) 0 nil])
([nil nil (("
" . 828)) nil (26521 43846 379823 221000) 0 nil])
([nil nil ((828 . 939)) nil (26521 43846 379822 501000) 0 nil])
([nil nil ((" " . 615)) nil (26521 43846 379821 900000) 0 nil])
([nil nil ((615 . 616)) nil (26521 43846 379821 279000) 0 nil])
([nil nil ((642 . 643)) nil (26521 43846 379820 685000) 0 nil])
([nil nil (("   " . 597)) nil (26521 43846 379820 40000) 0 nil])
([nil nil ((597 . 616)) nil (26521 43846 379819 425000) 0 nil])
([nil nil (("   " . 613)) nil (26521 43846 379818 789000) 0 nil])
([nil nil (("    <Router>                                                                                                                                                                     <Route path=\"/\" component={VideoDashboard} />                                                                                                                              <Route path=\"/hockey-games\" component={HockeyGamesPage} />                                                                                                               </Router>" . 440) (nil fontified nil 440 . 443) (nil fontified nil 443 . 444) (nil tag-name "router" 444 . 445) (nil ws-butler-chg nil 444 . 445) (nil fontified nil 444 . 445) (nil tag-name "router" 445 . 451) (nil ws-butler-chg nil 445 . 451) (nil fontified nil 445 . 451) (nil tag-name "router" 451 . 452) (nil ws-butler-chg nil 451 . 452) (nil fontified nil 451 . 452) (nil fontified nil 601 . 611) (nil fontified nil 452 . 601) (nil fontified nil 611 . 614) (nil fontified nil 614 . 615) (nil fontified nil 615 . 617) (nil tag-name "route" 617 . 618) (nil ws-butler-chg nil 617 . 618) (nil fontified nil 617 . 618) (nil tag-name "route" 618 . 623) (nil ws-butler-chg nil 618 . 623) (nil fontified nil 618 . 623) (nil tag-name "route" 623 . 624) (nil ws-butler-chg nil 623 . 624) (nil fontified nil 623 . 624) (nil tag-name "route" 624 . 625) (nil ws-butler-chg nil 624 . 625) (nil fontified nil 624 . 625) (nil tag-name "route" 625 . 628) (nil ws-butler-chg nil 625 . 628) (nil fontified nil 625 . 628) (nil tag-name "route" 628 . 629) (nil ws-butler-chg nil 628 . 629) (nil fontified nil 628 . 629) (nil tag-name "route" 629 . 631) (nil ws-butler-chg nil 629 . 631) (nil fontified nil 629 . 631) (nil tag-name "route" 631 . 632) (nil ws-butler-chg nil 631 . 632) (nil fontified nil 631 . 632) (nil tag-name "route" 632 . 633) (nil fontified nil 632 . 633) (nil tag-name "route" 633 . 634) (nil ws-butler-chg nil 633 . 634) (nil fontified nil 633 . 634) (nil tag-name "route" 634 . 642) (nil ws-butler-chg nil 634 . 642) (nil fontified nil 634 . 642) (nil tag-name "route" 642 . 643) (nil ws-butler-chg nil 642 . 643) (nil fontified nil 642 . 643) (nil tag-name "route" 643 . 644) (nil ws-butler-chg nil 643 . 644) (nil fontified nil 643 . 644) (nil tag-name "route" 644 . 658) (nil ws-butler-chg nil 644 . 658) (nil fontified nil 644 . 658) (nil tag-name "route" 658 . 659) (nil ws-butler-chg nil 658 . 659) (nil fontified nil 658 . 659) (nil tag-name "route" 659 . 660) (nil fontified nil 659 . 660) (nil tag-name "route" 660 . 661) (nil ws-butler-chg nil 660 . 661) (nil fontified nil 660 . 661) (nil tag-name "route" 661 . 662) (nil ws-butler-chg nil 661 . 662) (nil fontified nil 661 . 662) (nil fontified nil 662 . 782) (nil fontified nil 782 . 785) (nil fontified nil 785 . 786) (nil fontified nil 786 . 788) (nil tag-name "route" 788 . 789) (nil ws-butler-chg nil 788 . 789) (nil fontified nil 788 . 789) (nil tag-name "route" 789 . 794) (nil ws-butler-chg nil 789 . 794) (nil fontified nil 789 . 794) (nil tag-name "route" 794 . 795) (nil ws-butler-chg nil 794 . 795) (nil fontified nil 794 . 795) (nil tag-name "route" 795 . 796) (nil ws-butler-chg nil 795 . 796) (nil fontified nil 795 . 796) (nil tag-name "route" 796 . 799) (nil ws-butler-chg nil 796 . 799) (nil fontified nil 796 . 799) (nil tag-name "route" 799 . 800) (nil ws-butler-chg nil 799 . 800) (nil fontified nil 799 . 800) (nil tag-name "route" 800 . 814) (nil ws-butler-chg nil 800 . 814) (nil fontified nil 800 . 814) (nil tag-name "route" 814 . 815) (nil ws-butler-chg nil 814 . 815) (nil fontified nil 814 . 815) (nil tag-name "route" 815 . 816) (nil ws-butler-chg nil 815 . 816) (nil fontified nil 815 . 816) (nil tag-name "route" 816 . 817) (nil ws-butler-chg nil 816 . 817) (nil fontified nil 816 . 817) (nil tag-name "route" 817 . 825) (nil ws-butler-chg nil 817 . 825) (nil fontified nil 817 . 825) (nil tag-name "route" 825 . 826) (nil ws-butler-chg nil 825 . 826) (nil fontified nil 825 . 826) (nil tag-name "route" 826 . 827) (nil ws-butler-chg nil 826 . 827) (nil fontified nil 826 . 827) (nil tag-name "route" 827 . 842) (nil ws-butler-chg nil 827 . 842) (nil fontified nil 827 . 842) (nil tag-name "route" 842 . 843) (nil ws-butler-chg nil 842 . 843) (nil fontified nil 842 . 843) (nil tag-name "route" 843 . 844) (nil ws-butler-chg nil 843 . 844) (nil fontified nil 843 . 844) (nil tag-name "route" 844 . 845) (nil ws-butler-chg nil 844 . 845) (nil fontified nil 844 . 845) (nil tag-name "route" 845 . 846) (nil ws-butler-chg nil 845 . 846) (nil fontified nil 845 . 846) (nil fontified nil 846 . 953) (nil fontified nil 953 . 956) (nil fontified nil 956 . 957) (nil tag-name "router" 957 . 958) (nil ws-butler-chg nil 957 . 958) (nil fontified nil 957 . 958) (nil tag-name "router" 958 . 959) (nil ws-butler-chg nil 958 . 959) (nil fontified nil 958 . 959) (nil tag-name "router" 959 . 965) (nil ws-butler-chg nil 959 . 965) (nil fontified nil 959 . 965) (nil tag-name "router" 965 . 966) (nil ws-butler-chg nil 965 . 966) (nil fontified nil 965 . 966) (nil rear-nonsticky t 965 . 966) (440 . 444)) nil (26521 43846 379814 41000) 0 nil])
([nil nil (("
" . 167)) nil (26521 43846 379795 213000) 0 nil])
([nil nil (("import HockeyGamesPage from './HockeyGamesPage.svelte';" . 112) (nil ws-butler-chg nil 112 . 118) (nil fontified nil 112 . 118) (nil ws-butler-chg nil 118 . 119) (nil fontified nil 118 . 119) (nil ws-butler-chg nil 133 . 134) (nil ws-butler-chg nil 132 . 133) (nil ws-butler-chg nil 131 . 132) (nil ws-butler-chg nil 130 . 131) (nil ws-butler-chg nil 119 . 130) (nil fontified nil 133 . 134) (nil fontified nil 132 . 133) (nil fontified nil 131 . 132) (nil fontified nil 130 . 131) (nil fontified nil 119 . 130) (nil ws-butler-chg nil 134 . 135) (nil fontified nil 134 . 135) (nil ws-butler-chg nil 135 . 139) (nil fontified nil 135 . 139) (nil ws-butler-chg nil 139 . 140) (nil fontified nil 139 . 140) (nil ws-butler-chg nil 140 . 141) (nil fontified nil 140 . 141) (nil ws-butler-chg nil 159 . 165) (nil ws-butler-chg nil 158 . 159) (nil ws-butler-chg nil 157 . 158) (nil ws-butler-chg nil 156 . 157) (nil ws-butler-chg nil 155 . 156) (nil ws-butler-chg nil 154 . 155) (nil ws-butler-chg nil 141 . 154) (nil fontified nil 159 . 165) (nil fontified nil 158 . 159) (nil fontified nil 157 . 158) (nil fontified nil 156 . 157) (nil fontified nil 155 . 156) (nil fontified nil 154 . 155) (nil fontified nil 141 . 154) (nil ws-butler-chg nil 165 . 166) (nil fontified nil 165 . 166) (nil ws-butler-chg nil 166 . 167) (nil fontified nil 166 . 167) (nil rear-nonsticky t 166 . 167)) nil (26521 43846 379793 389000) 0 nil])
([nil nil (("import { Router, Route } from 'svelte-routing';" . -10) 57) nil (26521 43846 379786 76000) 0 nil])
([nil nil (("
" . -9) 10) nil (26521 43846 379785 76000) 0 nil])
([nil nil ((#("rmEFIatl2Hw" 0 11 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript)) . 82) (undo-tree-id354 . -11) (t 26513 51123 473929 26000)) nil (26521 43846 379784 24000) 0 nil])
([nil nil ((nil rear-nonsticky nil 92 . 93) (nil ws-butler-chg chg 82 . 93) (nil part-side javascript 82 . 93) (nil part-token string 82 . 93) (nil font-lock-face web-mode-javascript-string-face 82 . 93) (82 . 93) (t 26518 38188 817095 199000)) nil (26521 43846 379782 67000) 0 nil])
([nil nil ((95 . 96) (t 26518 38196 597218 683000)) nil (26521 43846 379780 427000) 0 nil])
([nil nil ((nil part-token string 113 . 114) (nil font-lock-face web-mode-javascript-string-face 113 . 114) (nil ws-butler-chg chg 113 . 114) (nil part-side javascript 113 . 114) (112 . 114) (#("\"" 0 1 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript ws-butler-chg chg)) . -112) (96 . 113)) nil (26521 43846 379779 395000) 0 nil])
([nil nil ((#("\"" 0 1 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript ws-butler-chg chg)) . -112) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (#("\"" 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript ws-butler-chg chg)) . -113) (undo-tree-id353 . -1) 114) nil (26521 43846 379777 627000) 0 nil])
([nil nil ((111 . 112) (t 26518 40613 786925 379000) (#(" " 0 1 (part-side javascript ws-butler-chg chg)) . 111) (undo-tree-id349 . -1) (undo-tree-id350 . -1) 112) nil (26521 43846 379774 379000) 0 nil])
([nil nil ((112 . 114) (#("[" 0 1 (part-side javascript ws-butler-chg chg)) . -112) (112 . 113) (t 26518 40613 786925 379000)) nil (26521 43846 379771 692000) 0 nil])
([nil nil ((114 . 116) (113 . 115)) nil (26521 43846 379770 514000) 0 nil])
([nil nil ((114 . 116) (t 26518 40620 130228 503000) (#("  " 0 2 (part-side javascript ws-butler-chg chg)) . 114) (undo-tree-id348 . -2) 116) nil (26521 43846 379769 554000) 0 nil])
([nil nil ((562 . 564) (454 . 458) (#("  " 0 2 (part-side javascript)) . 454) (349 . 353) (#("  " 0 2 (part-side javascript)) . 349) (329 . 331) (325 . 327) (nil rear-nonsticky nil 323 . 324) (nil fontified t 312 . 324) (nil ws-butler-chg chg 312 . 324) (nil part-side javascript 312 . 324) (nil part-token string 312 . 324) (nil font-lock-face web-mode-javascript-string-face 312 . 324) (nil fontified t 311 . 312) (nil ws-butler-chg chg 311 . 312) (nil part-side javascript 311 . 312) (nil part-token string 311 . 312) (nil syntax-table (15) 311 . 312) (nil font-lock-face web-mode-javascript-string-face 311 . 312) (nil fontified t 310 . 311) (nil ws-butler-chg chg 310 . 311) (nil part-side javascript 310 . 311) (nil fontified t 309 . 310) (nil ws-butler-chg chg 309 . 310) (nil part-side javascript 309 . 310) (nil part-token string 309 . 310) (nil syntax-table (15) 309 . 310) (nil font-lock-face web-mode-javascript-string-face 309 . 310) (nil fontified t 300 . 309) (nil ws-butler-chg chg 300 . 309) (nil part-side javascript 300 . 309) (nil part-token string 300 . 309) (nil font-lock-face web-mode-javascript-string-face 300 . 309) (nil fontified t 299 . 300) (nil ws-butler-chg chg 299 . 300) (nil part-side javascript 299 . 300) (nil part-token string 299 . 300) (nil syntax-table (15) 299 . 300) (nil font-lock-face web-mode-javascript-string-face 299 . 300) (nil fontified t 298 . 299) (nil ws-butler-chg chg 298 . 299) (nil part-side javascript 298 . 299) (nil fontified t 297 . 298) (nil ws-butler-chg chg 297 . 298) (nil part-side javascript 297 . 298) (nil part-token string 297 . 298) (nil syntax-table (15) 297 . 298) (nil font-lock-face web-mode-javascript-string-face 297 . 298) (nil fontified t 286 . 297) (nil ws-butler-chg chg 286 . 297) (nil part-side javascript 286 . 297) (nil part-token string 286 . 297) (nil font-lock-face web-mode-javascript-string-face 286 . 297) (nil fontified t 285 . 286) (nil ws-butler-chg chg 285 . 286) (nil part-side javascript 285 . 286) (nil part-token string 285 . 286) (nil syntax-table (15) 285 . 286) (nil font-lock-face web-mode-javascript-string-face 285 . 286) (nil fontified t 284 . 285) (nil ws-butler-chg chg 284 . 285) (nil part-side javascript 284 . 285) (nil fontified t 283 . 284) (nil ws-butler-chg chg 283 . 284) (nil part-side javascript 283 . 284) (nil part-token string 283 . 284) (nil syntax-table (15) 283 . 284) (nil font-lock-face web-mode-javascript-string-face 283 . 284) (nil fontified t 272 . 283) (nil ws-butler-chg chg 272 . 283) (nil part-side javascript 272 . 283) (nil part-token string 272 . 283) (nil font-lock-face web-mode-javascript-string-face 272 . 283) (nil fontified t 271 . 272) (nil ws-butler-chg chg 271 . 272) (nil part-side javascript 271 . 272) (nil part-token string 271 . 272) (nil syntax-table (15) 271 . 272) (nil font-lock-face web-mode-javascript-string-face 271 . 272) (nil fontified t 270 . 271) (nil ws-butler-chg chg 270 . 271) (nil part-side javascript 270 . 271) (nil fontified t 269 . 270) (nil ws-butler-chg chg 269 . 270) (nil part-side javascript 269 . 270) (nil part-token string 269 . 270) (nil syntax-table (15) 269 . 270) (nil font-lock-face web-mode-javascript-string-face 269 . 270) (nil fontified t 258 . 269) (nil ws-butler-chg chg 258 . 269) (nil part-side javascript 258 . 269) (nil part-token string 258 . 269) (nil font-lock-face web-mode-javascript-string-face 258 . 269) (nil fontified t 257 . 258) (nil ws-butler-chg chg 257 . 258) (nil part-side javascript 257 . 258) (nil part-token string 257 . 258) (nil syntax-table (15) 257 . 258) (nil font-lock-face web-mode-javascript-string-face 257 . 258) (nil fontified t 256 . 257) (nil ws-butler-chg chg 256 . 257) (nil part-side javascript 256 . 257) (nil fontified t 255 . 256) (nil ws-butler-chg chg 255 . 256) (nil part-side javascript 255 . 256) (nil part-token string 255 . 256) (nil syntax-table (15) 255 . 256) (nil font-lock-face web-mode-javascript-string-face 255 . 256) (nil fontified t 243 . 255) (nil ws-butler-chg chg 243 . 255) (nil part-side javascript 243 . 255) (nil part-token string 243 . 255) (nil font-lock-face web-mode-javascript-string-face 243 . 255) (nil fontified t 242 . 243) (nil ws-butler-chg chg 242 . 243) (nil part-side javascript 242 . 243) (nil part-token string 242 . 243) (nil syntax-table (15) 242 . 243) (nil font-lock-face web-mode-javascript-string-face 242 . 243) (nil fontified t 241 . 242) (nil ws-butler-chg chg 241 . 242) (nil part-side javascript 241 . 242) (nil fontified t 240 . 241) (nil ws-butler-chg chg 240 . 241) (nil part-side javascript 240 . 241) (nil part-token string 240 . 241) (nil syntax-table (15) 240 . 241) (nil font-lock-face web-mode-javascript-string-face 240 . 241) (nil fontified t 231 . 240) (nil ws-butler-chg chg 231 . 240) (nil part-side javascript 231 . 240) (nil part-token string 231 . 240) (nil font-lock-face web-mode-javascript-string-face 231 . 240) (nil fontified t 230 . 231) (nil ws-butler-chg chg 230 . 231) (nil part-side javascript 230 . 231) (nil part-token string 230 . 231) (nil syntax-table (15) 230 . 231) (nil font-lock-face web-mode-javascript-string-face 230 . 231) (nil fontified t 229 . 230) (nil ws-butler-chg chg 229 . 230) (nil part-side javascript 229 . 230) (nil fontified t 228 . 229) (nil ws-butler-chg chg 228 . 229) (nil part-side javascript 228 . 229) (nil part-token string 228 . 229) (nil syntax-table (15) 228 . 229) (nil font-lock-face web-mode-javascript-string-face 228 . 229) (nil fontified t 219 . 228) (nil ws-butler-chg chg 219 . 228) (nil part-side javascript 219 . 228) (nil part-token string 219 . 228) (nil font-lock-face web-mode-javascript-string-face 219 . 228) (nil fontified t 218 . 219) (nil ws-butler-chg chg 218 . 219) (nil part-side javascript 218 . 219) (nil part-token string 218 . 219) (nil syntax-table (15) 218 . 219) (nil font-lock-face web-mode-javascript-string-face 218 . 219) (nil fontified t 217 . 218) (nil ws-butler-chg chg 217 . 218) (nil part-side javascript 217 . 218) (nil fontified t 216 . 217) (nil ws-butler-chg chg 216 . 217) (nil part-side javascript 216 . 217) (nil part-token string 216 . 217) (nil syntax-table (15) 216 . 217) (nil font-lock-face web-mode-javascript-string-face 216 . 217) (nil fontified t 207 . 216) (nil ws-butler-chg chg 207 . 216) (nil part-side javascript 207 . 216) (nil part-token string 207 . 216) (nil font-lock-face web-mode-javascript-string-face 207 . 216) (nil fontified t 206 . 207) (nil ws-butler-chg chg 206 . 207) (nil part-side javascript 206 . 207) (nil part-token string 206 . 207) (nil syntax-table (15) 206 . 207) (nil font-lock-face web-mode-javascript-string-face 206 . 207) (nil fontified t 205 . 206) (nil ws-butler-chg chg 205 . 206) (nil part-side javascript 205 . 206) (nil fontified t 204 . 205) (nil ws-butler-chg chg 204 . 205) (nil part-side javascript 204 . 205) (nil part-token string 204 . 205) (nil syntax-table (15) 204 . 205) (nil font-lock-face web-mode-javascript-string-face 204 . 205) (nil fontified t 197 . 204) (nil ws-butler-chg chg 197 . 204) (nil part-side javascript 197 . 204) (nil part-token string 197 . 204) (nil font-lock-face web-mode-javascript-string-face 197 . 204) (nil fontified t 196 . 197) (nil ws-butler-chg chg 196 . 197) (nil part-side javascript 196 . 197) (nil part-token string 196 . 197) (nil syntax-table (15) 196 . 197) (nil font-lock-face web-mode-javascript-string-face 196 . 197) (nil fontified t 195 . 196) (nil ws-butler-chg chg 195 . 196) (nil part-side javascript 195 . 196) (nil fontified t 194 . 195) (nil ws-butler-chg chg 194 . 195) (nil part-side javascript 194 . 195) (nil part-token string 194 . 195) (nil syntax-table (15) 194 . 195) (nil font-lock-face web-mode-javascript-string-face 194 . 195) (nil fontified t 183 . 194) (nil ws-butler-chg chg 183 . 194) (nil part-side javascript 183 . 194) (nil part-token string 183 . 194) (nil font-lock-face web-mode-javascript-string-face 183 . 194) (nil fontified t 182 . 183) (nil ws-butler-chg chg 182 . 183) (nil part-side javascript 182 . 183) (nil part-token string 182 . 183) (nil syntax-table (15) 182 . 183) (nil font-lock-face web-mode-javascript-string-face 182 . 183) (nil fontified t 181 . 182) (nil ws-butler-chg chg 181 . 182) (nil part-side javascript 181 . 182) (nil fontified t 180 . 181) (nil ws-butler-chg chg 180 . 181) (nil part-side javascript 180 . 181) (nil part-token string 180 . 181) (nil syntax-table (15) 180 . 181) (nil font-lock-face web-mode-javascript-string-face 180 . 181) (nil fontified t 169 . 180) (nil ws-butler-chg chg 169 . 180) (nil part-side javascript 169 . 180) (nil part-token string 169 . 180) (nil font-lock-face web-mode-javascript-string-face 169 . 180) (nil fontified t 168 . 169) (nil ws-butler-chg chg 168 . 169) (nil part-side javascript 168 . 169) (nil part-token string 168 . 169) (nil syntax-table (15) 168 . 169) (nil font-lock-face web-mode-javascript-string-face 168 . 169) (nil fontified t 167 . 168) (nil ws-butler-chg chg 167 . 168) (nil part-side javascript 167 . 168) (nil fontified t 166 . 167) (nil ws-butler-chg chg 166 . 167) (nil part-side javascript 166 . 167) (nil part-token string 166 . 167) (nil syntax-table (15) 166 . 167) (nil font-lock-face web-mode-javascript-string-face 166 . 167) (nil fontified t 157 . 166) (nil ws-butler-chg chg 157 . 166) (nil part-side javascript 157 . 166) (nil part-token string 157 . 166) (nil font-lock-face web-mode-javascript-string-face 157 . 166) (nil fontified t 156 . 157) (nil ws-butler-chg chg 156 . 157) (nil part-side javascript 156 . 157) (nil part-token string 156 . 157) (nil syntax-table (15) 156 . 157) (nil font-lock-face web-mode-javascript-string-face 156 . 157) (nil fontified t 155 . 156) (nil ws-butler-chg chg 155 . 156) (nil part-side javascript 155 . 156) (nil fontified t 154 . 155) (nil ws-butler-chg chg 154 . 155) (nil part-side javascript 154 . 155) (nil part-token string 154 . 155) (nil syntax-table (15) 154 . 155) (nil font-lock-face web-mode-javascript-string-face 154 . 155) (nil fontified t 144 . 154) (nil ws-butler-chg chg 144 . 154) (nil part-side javascript 144 . 154) (nil part-token string 144 . 154) (nil font-lock-face web-mode-javascript-string-face 144 . 154) (nil fontified t 143 . 144) (nil ws-butler-chg chg 143 . 144) (nil part-side javascript 143 . 144) (nil part-token string 143 . 144) (nil syntax-table (15) 143 . 144) (nil font-lock-face web-mode-javascript-string-face 143 . 144) (nil fontified t 142 . 143) (nil ws-butler-chg chg 142 . 143) (nil part-side javascript 142 . 143) (nil fontified t 141 . 142) (nil ws-butler-chg chg 141 . 142) (nil part-side javascript 141 . 142) (nil part-token string 141 . 142) (nil syntax-table (15) 141 . 142) (nil font-lock-face web-mode-javascript-string-face 141 . 142) (nil fontified t 130 . 141) (nil ws-butler-chg chg 130 . 141) (nil part-side javascript 130 . 141) (nil part-token string 130 . 141) (nil font-lock-face web-mode-javascript-string-face 130 . 141) (nil fontified t 129 . 130) (nil ws-butler-chg chg 129 . 130) (nil part-side javascript 129 . 130) (nil part-token string 129 . 130) (nil syntax-table (15) 129 . 130) (nil font-lock-face web-mode-javascript-string-face 129 . 130) (nil fontified t 128 . 129) (nil ws-butler-chg chg 128 . 129) (nil part-side javascript 128 . 129) (nil fontified t 127 . 128) (nil ws-butler-chg chg 127 . 128) (nil part-side javascript 127 . 128) (nil part-token string 127 . 128) (nil syntax-table (15) 127 . 128) (nil font-lock-face web-mode-javascript-string-face 127 . 128) (nil fontified t 118 . 127) (nil ws-butler-chg chg 118 . 127) (nil part-side javascript 118 . 127) (nil part-token string 118 . 127) (nil font-lock-face web-mode-javascript-string-face 118 . 127) (nil fontified t 117 . 118) (nil ws-butler-chg chg 117 . 118) (nil part-side javascript 117 . 118) (nil part-token string 117 . 118) (nil syntax-table (15) 117 . 118) (nil font-lock-face web-mode-javascript-string-face 117 . 118) (nil fontified t 116 . 117) (nil ws-butler-chg chg 116 . 117) (nil part-side javascript 116 . 117) (116 . 324) (t 26518 40620 130228 503000)) nil (26521 43846 379758 268000) 0 nil])
([nil nil ((#("  " 0 2 (part-side javascript ws-butler-chg chg)) . -114) (undo-tree-id344 . -2) (undo-tree-id345 . -2) (undo-tree-id346 . -2) (undo-tree-id347 . -2) 116) nil (26521 43846 379711 743000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -111) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (#("[" 0 1 (part-side javascript)) . -112) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (#("
" 0 1 (part-side javascript)) . -113) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) 114) nil (26521 43846 379707 631000) 0 nil])
([nil nil ((111 . 112)) nil (26521 43846 379697 109000) 0 nil])
([nil nil ((#("]" 0 1 (part-side javascript)) . -323) (undo-tree-id331 . -1) 324) nil (26521 43846 379696 301000) 0 nil])
([nil nil ((#("  " 0 2 (part-side javascript ws-butler-chg chg)) . -321) (undo-tree-id330 . -2) 323) nil (26521 43846 379694 691000) 0 nil])
([nil nil ((#("
" 0 1 (syntax-table (15) part-side javascript)) . -320) (undo-tree-id328 . -1) (undo-tree-id329 . -1) 321) nil (26521 43846 379693 29000) 0 nil])
([nil nil ((320 . 321)) nil (26521 43846 379690 943000) 0 nil])
([nil nil ((321 . 322) (t 26518 40744 223011 846000)) nil (26521 43846 379690 241000) 0 nil])
([nil nil ((#("
" 0 1 (part-side javascript ws-butler-chg chg)) . -321) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) 322) nil (26521 43846 379689 174000) 0 nil])
([nil nil ((nil ws-butler-chg delete 322 . 323) (321 . 322)) nil (26521 43846 379674 346000) 0 nil])
([nil nil ((560 . 561) (t 26518 40746 956333 869000)) nil (26521 43846 379673 319000) 0 nil])
([nil nil ((#("1" 0 1 (part-side javascript block-side t)) . -363) (undo-tree-id324 . -1) 364 (t 26518 40751 589648 103000)) nil (26521 43846 379672 324000) 0 nil])
([nil nil ((#("Person " 0 6 (block-side t part-side javascript) 6 7 (block-side t part-side javascript)) . -356) (undo-tree-id322 . -7) (undo-tree-id323 . -7) 363) nil (26521 43846 379670 505000) 0 nil])
([nil nil ((356 . 358)) nil (26521 43846 379668 431000) 0 nil])
([nil nil ((358 . 359)) nil (26521 43846 379667 849000) 0 nil])
([nil nil ((#(" " 0 1 (block-side t part-side javascript ws-butler-chg chg)) . -358) (undo-tree-id321 . -1) 359) nil (26521 43846 379666 972000) 0 nil])
([nil nil ((358 . 366)) nil (26521 43846 379665 386000) 0 nil])
([nil nil ((#("e" 0 1 (block-side t part-side javascript ws-butler-chg chg)) . -364) (undo-tree-id319 . -1) (#("r" 0 1 (block-side t part-side javascript ws-butler-chg chg)) . -365) (undo-tree-id320 . -1) 366) nil (26521 43846 379664 505000) 0 nil])
([nil nil ((#("Goali" 0 5 (block-side t part-side javascript ws-butler-chg chg)) . -359) (undo-tree-id318 . -5) 364) nil (26521 43846 379661 990000) 0 nil])
([nil nil ((359 . 365)) nil (26521 43846 379659 89000) 0 nil])
([nil nil ((#("{ label: 'Scene 1', start: 10 }, { label: 'Scene 2', start: 30 }]" 0 2 (block-side t part-side javascript) 2 7 (block-side t part-side javascript) 7 10 (block-side t part-side javascript) 10 15 (block-side t part-side javascript) 15 16 (block-side t part-side javascript) 16 17 (block-side t part-side javascript) 17 20 (block-side t part-side javascript) 20 25 (block-side t part-side javascript) 25 27 (block-side t part-side javascript) 27 29 (block-side t part-side javascript) 29 35 (block-side t part-side javascript) 35 40 (block-side t part-side javascript) 40 43 (block-side t part-side javascript) 43 48 (block-side t part-side javascript) 48 49 (block-side t part-side javascript) 49 50 (block-side t part-side javascript) 50 53 (block-side t part-side javascript) 53 58 (block-side t part-side javascript) 58 60 (block-side t part-side javascript) 60 62 (block-side t part-side javascript) 62 65 (block-side t part-side javascript)) . -380) (undo-tree-id317 . -65) 445 (t 26518 42041 92975 109000)) nil (26521 43846 379658 157000) 0 nil])
([nil nil ((#("[" 0 1 (block-side t part-side javascript)) . -379) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) 380) nil (26521 43846 379656 79000) 0 nil])
([nil nil ((391 . 395) (390 . 392) (#("'" 0 1 (block-side t part-side javascript ws-butler-chg chg)) . -390) (390 . 391) (389 . 391) (#("(" 0 1 (block-side t part-side javascript ws-butler-chg chg)) . -389) (379 . 390)) nil (26521 43846 379652 785000) 0 nil])
([nil nil ((391 . 393)) nil (26521 43846 379651 392000) 0 nil])
([nil nil ((397 . 412)) nil (26521 43846 379650 797000) 0 nil])
([nil nil ((#("const " 0 5 (face web-mode-keyword-face part-side javascript) 5 6 (part-side javascript)) . 325) (undo-tree-id313 . -6) (t 26518 42296 761395 178000)) nil (26521 43846 379650 69000) 0 nil])
([nil nil ((#(" JSON.parse('./data/01-goalie.json')" 0 1 (block-side t part-side javascript) 1 6 (block-side t part-side javascript) 6 11 (block-side t part-side javascript) 11 12 (block-side t part-side javascript) 12 20 (block-side t part-side javascript) 20 34 (block-side t part-side javascript) 34 35 (block-side t part-side javascript) 35 36 (block-side t part-side javascript)) . 372) (undo-tree-id311 . -11) (undo-tree-id312 . -36) 408 (t 26518 42335 201171 740000)) nil (26521 43846 379648 487000) 0 nil])
([nil nil ((373 . 376)) nil (26521 43846 379646 134000) 0 nil])
([nil nil ((322 . 323)) nil (26521 43846 379645 530000) 0 nil])
([nil nil ((323 . 329)) nil (26521 43846 379644 847000) 0 nil])
([nil nil ((#("  " 0 2 (part-side javascript)) . -524) (#("  " 0 2 (part-side javascript)) . -420) (#("  " 0 2 (part-side javascript)) . -380) (#("  " 0 2 (part-side javascript)) . -366) (nil rear-nonsticky nil 364 . 365) (nil ws-butler-chg chg 364 . 365) (nil part-side javascript 364 . 365) (nil ws-butler-chg chg 363 . 364) (nil part-side javascript 363 . 364) (nil part-token string 363 . 364) (nil syntax-table (15) 363 . 364) (nil font-lock-face web-mode-javascript-string-face 363 . 364) (nil ws-butler-chg chg 349 . 363) (nil part-side javascript 349 . 363) (nil part-token string 349 . 363) (nil font-lock-face web-mode-javascript-string-face 349 . 363) (nil ws-butler-chg chg 342 . 349) (nil part-side javascript 342 . 349) (nil part-token string 342 . 349) (nil font-lock-face web-mode-javascript-string-face 342 . 349) (nil ws-butler-chg chg 341 . 342) (nil part-side javascript 341 . 342) (nil part-token string 341 . 342) (nil syntax-table (15) 341 . 342) (nil font-lock-face web-mode-javascript-string-face 341 . 342) (nil ws-butler-chg chg 340 . 341) (nil part-side javascript 340 . 341) (nil ws-butler-chg chg 335 . 340) (nil part-side javascript 335 . 340) (nil face web-mode-function-call-face 335 . 340) (nil ws-butler-chg chg 330 . 335) (nil part-side javascript 330 . 335) (nil ws-butler-chg chg 329 . 330) (nil part-side javascript 329 . 330) (329 . 365)) nil (26521 43846 379642 591000) 0 nil])
([nil nil ((365 . 366) (t 26518 42356 854380 517000)) nil (26521 43846 379636 469000) 0 nil])
([nil nil ((378 . 381) (377 . 379) (#("(" 0 1 (part-side javascript ws-butler-chg chg)) . -377) (366 . 378)) nil (26521 43846 379635 491000) 0 nil])
([nil nil ((382 . 383) (t 26518 42373 850950 51000)) nil (26521 43846 379634 440000) 0 nil])
([nil nil ((#("
" 0 1 (part-side javascript ws-butler-chg chg)) . -382) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) 383) nil (26521 43846 379633 266000) 0 nil])
([nil nil ((398 . 399) (432 . 433) 434 (t 26518 42375 37609 956000)) nil (26521 43846 379630 486000) 0 nil])
([nil nil ((#("  {! name: '01-goalie', sequences: seq!}," 0 2 (part-side javascript) 2 3 (part-side javascript block-side t block-controls 0 block-beg 0) 3 4 (part-side javascript block-side t) 4 5 (part-side javascript block-side t) 5 9 (part-side javascript block-side t) 9 12 (part-side javascript block-side t) 12 21 (part-side javascript block-side t) 21 22 (part-side javascript block-side t) 22 24 (part-side javascript block-side t) 24 33 (part-side javascript block-side t) 33 34 (part-side javascript block-side t) 34 35 (part-side javascript block-side t) 35 38 (part-side javascript block-side t) 38 39 (part-side javascript block-side t) 39 40 (part-side javascript block-end t block-side t) 40 41 (part-side javascript)) . -395) (undo-tree-id306 . -41) (undo-tree-id307 . -41) 436 (t 26518 42392 914175 54000)) nil (26521 43846 379629 64000) 0 nil])
([nil nil ((#("
" 0 1 (part-side javascript)) . -394) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) 395) nil (26521 43846 379626 190000) 0 nil])
([nil nil ((394 . 395) (t 26518 42396 337489 5000)) nil (26521 43846 379622 357000) 0 nil])
([nil nil ((395 . 436)) nil (26521 43846 379621 601000) 0 nil])
([nil nil ((#("!" 0 1 (block-side t part-side javascript)) . 432) (#("!" 0 1 (block-side t part-side javascript)) . 398)) nil (26521 43846 379620 670000) 0 nil])
([nil nil ((382 . 383)) nil (26521 43846 379619 976000) 0 nil])
([nil nil ((#("
" 0 1 (part-side javascript ws-butler-chg chg)) . -382) (undo-tree-id301 . -1) 383) nil (26521 43846 379619 61000) 0 nil])
([nil nil ((382 . 383) (t 26518 42405 44106 471000)) nil (26521 43846 379617 530000) 0 nil])
([nil nil ((#("
" 0 1 (part-side javascript ws-butler-chg chg)) . -382) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) 383) nil (26521 43846 379616 524000) 0 nil])
([nil nil ((382 . 383)) nil (26521 43846 379613 558000) 0 nil])
([nil nil ((343 . 344) (t 26518 42445 43882 83000)) nil (26521 43846 379612 860000) 0 nil])
([nil nil ((#("'" 0 1 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript)) . -341) (undo-tree-id297 . -1) 342 (t 26518 42461 450457 470000)) nil (26521 43846 379611 997000) 0 nil])
([nil nil ((nil part-token string 342 . 343) (nil font-lock-face web-mode-javascript-string-face 342 . 343) (nil ws-butler-chg chg 342 . 343) (nil part-side javascript 342 . 343) (341 . 343) (#("\"" 0 1 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript ws-butler-chg chg)) . -341) (341 . 342)) nil (26521 43846 379608 317000) 0 nil])
([nil nil ((#("../data/01-goalie.json" 0 1 (part-side javascript ws-butler-chg delete) 1 2 (part-side javascript) 2 22 (part-side javascript)) . 343) (undo-tree-id296 . -22) 365) nil (26521 43846 379606 849000) 0 nil])
([nil nil ((#("'" 0 1 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript ws-butler-chg delete)) . -343) (undo-tree-id295 . -1) 344) nil (26521 43846 379605 307000) 0 nil])
([nil nil ((nil rear-nonsticky nil 363 . 364) (nil ws-butler-chg chg 344 . 364) (nil part-side javascript 344 . 364) (nil part-token string 344 . 364) (nil font-lock-face web-mode-javascript-string-face 344 . 364) (nil ws-butler-chg chg 343 . 344) (nil part-side javascript 343 . 344) (nil part-token string 343 . 344) (nil font-lock-face web-mode-javascript-string-face 343 . 344) (nil ws-butler-chg chg 342 . 343) (nil part-side javascript 342 . 343) (nil part-token string 342 . 343) (nil font-lock-face web-mode-javascript-string-face 342 . 343) (342 . 364)) nil (26521 43846 379603 428000) 0 nil])
([nil nil ((366 . 367) (t 26518 42491 370292 74000)) nil (26521 43846 379600 775000) 0 nil])
([nil nil ((323 . 324) (t 26518 42492 80288 165000)) nil (26521 43846 379599 992000) 0 nil])
([nil nil ((323 . 330)) nil (26521 43846 379599 247000) 0 nil])
([nil nil ((nil rear-nonsticky nil 366 . 367) (nil ws-butler-chg chg 366 . 367) (nil part-side javascript 366 . 367) (nil ws-butler-chg chg 365 . 366) (nil part-side javascript 365 . 366) (nil part-token string 365 . 366) (nil syntax-table (15) 365 . 366) (nil font-lock-face web-mode-javascript-string-face 365 . 366) (nil ws-butler-chg chg 348 . 365) (nil part-side javascript 348 . 365) (nil part-token string 348 . 365) (nil font-lock-face web-mode-javascript-string-face 348 . 365) (nil ws-butler-chg chg 347 . 348) (nil part-side javascript 347 . 348) (nil part-token string 347 . 348) (nil syntax-table (15) 347 . 348) (nil font-lock-face web-mode-javascript-string-face 347 . 348) (nil ws-butler-chg chg 346 . 347) (nil part-side javascript 346 . 347) (nil ws-butler-chg chg 342 . 346) (nil part-side javascript 342 . 346) (nil face web-mode-keyword-face 342 . 346) (nil ws-butler-chg chg 336 . 342) (nil part-side javascript 336 . 342) (nil ws-butler-chg chg 330 . 336) (nil part-side javascript 330 . 336) (nil face web-mode-keyword-face 330 . 336) (330 . 367)) nil (26521 43846 379597 834000) 0 nil])
([nil nil ((#("import item" 0 6 (face web-mode-keyword-face part-side javascript ws-butler-chg chg) 6 11 (part-side javascript ws-butler-chg chg)) . 330) (undo-tree-id294 . -11)) nil (26521 43846 379593 544000) 0 nil])
([nil nil ((330 . 331)) nil (26521 43846 379592 274000) 0 nil])
([nil nil ((331 . 333)) nil (26521 43846 379591 677000) 0 nil])
([nil nil ((#("./data/01-goalie.json" 0 20 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 20 21 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript rear-nonsticky t)) . 380) (undo-tree-id293 . -21)) nil (26521 43846 379590 960000) 0 nil])
([nil nil ((nil rear-nonsticky nil 360 . 361) (nil rear-nonsticky t 360 . 361) (nil ws-butler-chg chg 360 . 361) (nil part-side javascript 360 . 361) (nil part-token string 360 . 361) (nil font-lock-face web-mode-javascript-string-face 360 . 361) (nil ws-butler-chg chg 340 . 360) (nil part-side javascript 340 . 360) (nil part-token string 340 . 360) (nil font-lock-face web-mode-javascript-string-face 340 . 360) (340 . 361)) nil (26521 43846 379589 123000) 0 nil])
([nil nil ((#("path/to/data.json" 0 17 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript ws-butler-chg chg)) . -361) (undo-tree-id292 . -17) 378) nil (26521 43846 379587 109000) 0 nil])
([nil nil ((364 . 390) (#("seq =  JSON.parse(\".\");" 0 6 (part-side javascript) 6 12 (part-side javascript) 12 17 (face web-mode-function-call-face part-side javascript) 17 18 (part-side javascript) 18 19 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 19 20 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 20 21 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript ws-butler-chg delete) 21 22 (part-side javascript rear-nonsticky t) 22 23 (part-side javascript)) . 364) (undo-tree-id290 . -23) (undo-tree-id291 . -23) 387) nil (26521 43846 379585 365000) 0 nil])
([nil nil ((340 . 341) (t 26518 42624 492904 443000)) nil (26521 43846 379582 956000) 0 nil])
([nil nil ((nil rear-nonsticky nil 101 . 102) (nil ws-butler-chg chg 89 . 102) (nil part-side javascript 89 . 102) (nil part-token string 89 . 102) (nil font-lock-face web-mode-javascript-string-face 89 . 102) (nil ws-butler-chg chg 82 . 89) (nil part-side javascript 82 . 89) (nil part-token string 82 . 89) (nil font-lock-face web-mode-javascript-string-face 82 . 89) (nil ws-butler-chg chg 81 . 82) (nil part-side javascript 81 . 82) (nil part-token string 81 . 82) (nil syntax-table (15) 81 . 82) (nil font-lock-face web-mode-javascript-string-face 81 . 82) (nil ws-butler-chg chg 80 . 81) (nil part-side javascript 80 . 81) (nil ws-butler-chg chg 76 . 80) (nil part-side javascript 76 . 80) (nil face web-mode-keyword-face 76 . 80) (nil ws-butler-chg chg 75 . 76) (nil part-side javascript 75 . 76) (nil ws-butler-chg chg 71 . 75) (nil part-side javascript 71 . 75) (nil face web-mode-type-face 71 . 75) (nil ws-butler-chg chg 70 . 71) (nil part-side javascript 70 . 71) (nil ws-butler-chg chg 64 . 70) (nil part-side javascript 64 . 70) (nil face web-mode-keyword-face 64 . 70) (64 . 102) (t 26518 42631 482867 187000)) nil (26521 43846 379581 338000) 0 nil])
([nil nil ((102 . 103)) nil (26521 43846 379576 456000) 0 nil])
([nil nil ((362 . 406) (#("import seq from '../data/01-goalie.json';" 0 6 (face web-mode-keyword-face part-side javascript) 6 7 (part-side javascript) 7 10 (face web-mode-type-face part-side javascript) 10 11 (part-side javascript) 11 15 (face web-mode-keyword-face part-side javascript) 15 16 (part-side javascript) 16 17 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 17 18 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 18 38 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 38 39 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript rear-nonsticky t) 39 40 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 40 41 (part-side javascript rear-nonsticky t)) . 362) (undo-tree-id288 . -41) (undo-tree-id289 . -41) 403 (t 26518 42653 392750 771000)) nil (26521 43846 379575 561000) 0 nil])
([nil nil ((nil part-side javascript 434 . 453) (434 . 453) (#("console.log(seq)" 0 8 (part-side javascript) 8 11 (face web-mode-function-call-face part-side javascript) 11 15 (part-side javascript) 15 16 (part-side javascript)) . 434) (undo-tree-id284 . -16) (undo-tree-id285 . -15) (undo-tree-id286 . -16) (undo-tree-id287 . -16) 450 (t 26518 42718 922405 563000)) nil (26521 43846 379572 763000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript ws-butler-chg chg)) . -428) (#(" " 0 1 (part-side javascript ws-butler-chg chg)) . -404) (#(" " 0 1 (part-side javascript ws-butler-chg chg)) . -362) (362 . 448) (#("// import seq from '../data/01-goalie.json';
// seq =  JSON.parse(\".\");
// console.log(seq)
" 0 1 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment part-side javascript) 1 3 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 3 9 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 9 10 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 10 13 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 13 14 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 14 18 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 18 44 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 44 45 (syntax-table (12) part-side javascript) 45 46 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment part-side javascript) 46 60 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 60 65 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 65 71 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 71 72 (syntax-table (12) part-side javascript) 72 73 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment part-side javascript) 73 83 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 83 86 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 86 91 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 91 92 (syntax-table (12) part-side javascript)) . 362) (undo-tree-id280 . -44) (undo-tree-id281 . -72) (undo-tree-id282 . -45) (undo-tree-id283 . -44) 406 (t 26518 42735 278986 712000)) nil (26521 43846 379568 176000) 0 nil])
([nil nil ((#("seq" 0 3 (face web-mode-type-face part-side javascript ws-butler-chg chg)) . -369) (undo-tree-id279 . -3) 372) nil (26521 43846 379563 928000) 0 nil])
([nil nil ((369 . 377)) nil (26521 43846 379562 481000) 0 nil])
([nil nil ((#("seq =  JSON.parse(\".\");" 0 1 (part-side javascript) 1 12 (part-side javascript) 12 17 (face web-mode-function-call-face part-side javascript) 17 18 (part-side javascript) 18 19 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 19 20 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 20 21 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 21 23 (part-side javascript)) . -409) (undo-tree-id278 . -23) 432 (t 26518 42758 25534 858000)) nil (26521 43846 379561 759000) 0 nil])
([nil nil ((#("
" 0 1 (part-side javascript)) . -408) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) 409) nil (26521 43846 379559 961000) 0 nil])
([nil nil ((#("." 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript)) . -385) (undo-tree-id274 . -1) 386 (t 26518 42765 215497 488000)) nil (26521 43846 379556 428000) 0 nil])
([nil nil ((385 . 386) (t 26518 42777 408767 548000)) nil (26521 43846 379555 4000) 0 nil])
([nil nil ((#("." 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript)) . -384) (undo-tree-id272 . -1) (#("." 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript)) . -385) (undo-tree-id273 . -1) 386 (t 26518 42781 15415 523000)) nil (26521 43846 379553 882000) 0 nil])
([nil nil ((425 . 431) (t 26518 42981 850377 174000)) nil (26521 43846 379551 638000) 0 nil])
([nil nil ((#("import json from '@rollup/plugin-json'" 0 6 (face web-mode-keyword-face part-side javascript) 6 7 (part-side javascript) 7 11 (face web-mode-type-face part-side javascript) 11 12 (part-side javascript) 12 16 (face web-mode-keyword-face part-side javascript) 16 17 (part-side javascript) 17 18 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 18 25 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 25 37 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 37 38 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript rear-nonsticky t)) . -64) (undo-tree-id271 . -38) 102 (t 26518 43001 706570 768000)) nil (26521 43846 379550 633000) 0 nil])
([nil nil ((#("
" 0 1 (part-side javascript)) . -63) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) 64 (t 26518 43025 432688 122000)) nil (26521 43846 379548 854000) 0 nil])
([nil nil ((#("s" 0 1 (block-side t part-side javascript)) . -438) (undo-tree-id264 . -1) (#("e" 0 1 (block-side t part-side javascript)) . -439) (undo-tree-id265 . -1) (#("q" 0 1 (block-side t part-side javascript)) . -440) (undo-tree-id266 . -1) 441 (t 26518 43026 129338 913000)) nil (26521 43846 379544 493000) 0 nil])
([nil nil ((nil rear-nonsticky nil 507 . 508) (nil ws-butler-chg chg 504 . 508) (nil part-side javascript 504 . 508) (nil block-side t 504 . 508) (nil ws-butler-chg chg 501 . 504) (nil part-side javascript 501 . 504) (nil block-side t 501 . 504) (nil ws-butler-chg chg 499 . 501) (nil part-side javascript 499 . 501) (nil block-side t 499 . 501) (nil ws-butler-chg chg 494 . 499) (nil part-side javascript 494 . 499) (nil block-side t 494 . 499) (nil ws-butler-chg chg 492 . 494) (nil part-side javascript 492 . 494) (nil block-side t 492 . 494) (nil ws-butler-chg chg 491 . 492) (nil part-side javascript 491 . 492) (nil block-side t 491 . 492) (nil ws-butler-chg chg 482 . 491) (nil part-side javascript 482 . 491) (nil block-side t 482 . 491) (nil ws-butler-chg chg 479 . 482) (nil part-side javascript 479 . 482) (nil block-side t 479 . 482) (nil ws-butler-chg chg 474 . 479) (nil part-side javascript 474 . 479) (nil block-side t 474 . 479) (nil ws-butler-chg chg 468 . 474) (nil part-side javascript 468 . 474) (nil block-side t 468 . 474) (nil ws-butler-chg chg 466 . 468) (nil part-side javascript 466 . 468) (nil block-side t 466 . 468) (nil ws-butler-chg chg 464 . 466) (nil part-side javascript 464 . 466) (nil block-side t 464 . 466) (nil ws-butler-chg chg 459 . 464) (nil part-side javascript 459 . 464) (nil block-side t 459 . 464) (nil ws-butler-chg chg 456 . 459) (nil part-side javascript 456 . 459) (nil block-side t 456 . 459) (nil ws-butler-chg chg 449 . 456) (nil part-side javascript 449 . 456) (nil block-side t 449 . 456) (nil ws-butler-chg chg 446 . 449) (nil part-side javascript 446 . 449) (nil block-side t 446 . 449) (nil ws-butler-chg chg 441 . 446) (nil part-side javascript 441 . 446) (nil block-side t 441 . 446) (nil ws-butler-chg chg 438 . 441) (nil part-side javascript 438 . 441) (nil block-side t 438 . 441) (438 . 508)) nil (26521 43846 379539 748000) 0 nil])
([nil nil ((#("as " 0 2 (face web-mode-keyword-face part-side javascript) 2 3 (part-side javascript)) . -332) (undo-tree-id263 . -3) 335 (t 26518 43044 448926 574000)) nil (26521 43846 379531 983000) 0 nil])
([nil nil ((#("*" 0 1 (part-side javascript)) . -330) (undo-tree-id261 . -1) (#(" " 0 1 (part-side javascript)) . -331) (undo-tree-id262 . -1) 332) nil (26521 43846 379529 793000) 0 nil])
([nil nil ((340 . 341)) nil (26521 43846 379527 519000) 0 nil])
([nil nil ((#("." 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript)) . -340) (undo-tree-id259 . -1) (undo-tree-id260 . -1) 341 (t 26518 43063 485174 894000)) nil (26521 43846 379526 673000) 0 nil])
([nil nil ((323 . 340) (#("
" 0 1 (part-side javascript)) . -362) (undo-tree-id257 . -1) (#("console.log(seq)" 0 1 (part-side javascript) 1 8 (part-side javascript) 8 11 (face web-mode-function-call-face part-side javascript) 11 16 (part-side javascript)) . 363) (undo-tree-id258 . -7) 370 (t 26518 43067 731749 605000)) nil (26521 43846 379524 180000) 0 nil])
([nil nil ((362 . 379) (#("
" 0 1 (part-side javascript ws-butler-chg delete)) . 323) (#("console.log(seq)" 0 8 (part-side javascript ws-butler-chg chg) 8 11 (face web-mode-function-call-face part-side javascript ws-butler-chg chg) 11 16 (part-side javascript ws-butler-chg chg)) . 323) (undo-tree-id256 . -7) 330) nil (26521 43846 379521 582000) 0 nil])
([nil nil ((340 . 341)) nil (26521 43846 379519 895000) 0 nil])
([nil nil ((#("[{ label: 'Opening', start: 60 }, { label: 'Interview', start: 120 }]" 0 3 (part-side javascript block-side t) 3 8 (part-side javascript block-side t) 8 21 (part-side javascript block-side t) 21 26 (part-side javascript block-side t) 26 28 (part-side javascript block-side t) 28 30 (part-side javascript block-side t) 30 36 (part-side javascript block-side t) 36 41 (part-side javascript block-side t) 41 56 (part-side javascript block-side t) 56 61 (part-side javascript block-side t) 61 63 (part-side javascript block-side t) 63 66 (part-side javascript block-side t) 66 69 (part-side javascript block-side t)) . 434) (undo-tree-id255 . -69) (t 26518 43180 639472 632000)) nil (26521 43846 379519 78000) 0 nil])
([nil nil ((434 . 437)) nil (26521 43846 379516 862000) 0 nil])
([nil nil ((#("goalie" 0 6 (block-side t part-side javascript)) . -414) (undo-tree-id254 . -6) 420 (t 26518 43214 175519 522000)) nil (26521 43846 379515 962000) 0 nil])
([nil nil ((414 . 422)) nil (26521 43846 379514 300000) 0 nil])
([nil nil ((#("01-goalie" 0 9 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript)) . 347) (undo-tree-id253 . -9)) nil (26521 43846 379513 610000) 0 nil])
([nil nil ((347 . 358)) nil (26521 43846 379512 323000) 0 nil])
([nil nil ((383 . 384) (t 26518 43286 470926 414000)) nil (26521 43846 379511 722000) 0 nil])
([nil nil ((384 . 391)) nil (26521 43846 379510 905000) 0 nil])
([nil nil ((#("foreach" 0 7 (part-side javascript ws-butler-chg chg)) . -384) (undo-tree-id250 . -6) (undo-tree-id251 . -6) (undo-tree-id252 . -7) 391) nil (26521 43846 379509 925000) 0 nil])
([nil nil ((384 . 393)) nil (26521 43846 379507 261000) 0 nil])
([nil nil ((#("each " 0 5 (part-side javascript ws-butler-chg chg)) . -388) (undo-tree-id249 . -5) 393) nil (26521 43846 379506 506000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript ws-butler-chg chg)) . -387) (undo-tree-id248 . -1) 388) nil (26521 43846 379504 984000) 0 nil])
([nil nil ((387 . 406)) nil (26521 43846 379503 474000) 0 nil])
([nil nil ((406 . 423)) nil (26521 43846 379502 877000) 0 nil])
([nil nil ((407 . 423) (t 26520 15451 413190 841000) (#("                " 0 16 (part-side javascript ws-butler-chg chg)) . 407) (undo-tree-id247 . -16) 423) nil (26521 43846 379501 996000) 0 nil])
([nil nil ((#("                " 0 16 (part-side javascript ws-butler-chg chg)) . -407) (undo-tree-id246 . -16) 423 (t 26520 15451 413190 841000)) nil (26521 43846 379500 262000) 0 nil])
([nil nil ((#("
for player in players:
" 0 1 (part-side javascript) 1 4 (face web-mode-keyword-face part-side javascript) 4 12 (part-side javascript) 12 14 (face web-mode-keyword-face part-side javascript) 14 15 (part-side javascript) 15 22 (face web-mode-variable-name-face part-side javascript) 22 24 (part-side javascript)) . 383) (undo-tree-id242 . -24) (undo-tree-id243 . -1) (undo-tree-id244 . -24) (undo-tree-id245 . -1)) nil (26521 43846 379497 983000) 0 nil])
([nil nil ((383 . 384) (t 26520 15453 923165 114000)) nil (26521 43846 379494 613000) 0 nil])
([nil nil ((384 . 391)) nil (26521 43846 379493 883000) 0 nil])
([nil nil ((#("forEach" 0 7 (part-side javascript ws-butler-chg chg)) . -384) (undo-tree-id239 . -6) (undo-tree-id240 . -6) (undo-tree-id241 . -7) 391) nil (26521 43846 379493 82000) 0 nil])
([nil nil ((384 . 394)) nil (26521 43846 379490 272000) 0 nil])
([nil nil ((394 . 395)) nil (26521 43846 379489 706000) 0 nil])
([nil nil ((392 . 399) (#("forEach" 0 7 (part-side javascript ws-butler-chg chg)) . -392) (392 . 399) (#("for" 0 3 (part-side javascript ws-butler-chg chg)) . -392) (undo-tree-id236 . -3) (undo-tree-id237 . -3) (undo-tree-id238 . -3) 395) nil (26521 43846 379488 623000) 0 nil])
([nil nil ((400 . 402) (#("{" 0 1 (part-side javascript ws-butler-chg chg)) . -400) (400 . 401) (399 . 401) (#("(" 0 1 (part-side javascript ws-butler-chg chg)) . -399) (399 . 400)) nil (26521 43846 379484 889000) 0 nil])
([nil nil ((401 . 404) (#("App" 0 3 (part-side javascript block-side t ws-butler-chg chg)) . -401) (401 . 404)) nil (26521 43846 379483 580000) 0 nil])
([nil nil ((#("App" 0 3 (block-side t part-side javascript ws-butler-chg chg)) . 401) (nil ws-butler-chg delete 404 . 405) (401 . 404) (#("App" 0 3 (part-side javascript block-side t ws-butler-chg chg)) . 401) (undo-tree-id234 . -3) (undo-tree-id235 . -3)) nil (26521 43846 379482 332000) 0 nil])
([nil nil ((#("{" 0 1 (part-side javascript ws-butler-chg chg)) . -400) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (#("}" 0 1 (part-side javascript)) . 401)) nil (26521 43846 379478 439000) 0 nil])
([nil nil ((402 . 404) (#("{" 0 1 (part-side javascript ws-butler-chg chg)) . -402) (401 . 403)) nil (26521 43846 379475 575000) 0 nil])
([nil nil ((404 . 406) (403 . 405)) nil (26521 43846 379474 716000) 0 nil])
([nil nil ((404 . 406) (t 26520 15469 486338 535000) (#("  " 0 2 (part-side javascript ws-butler-chg chg)) . 404) (undo-tree-id230 . -2) 406) nil (26521 43846 379473 749000) 0 nil])
([nil nil ((400 . 404) (t 26520 15469 486338 535000)) nil (26521 43846 379472 156000) 0 nil])
([nil nil ((#("  " 0 2 (part-side javascript ws-butler-chg chg)) . 408) (undo-tree-id229 . -2) 407) nil (26521 43846 379471 286000) 0 nil])
([nil nil ((406 . 409) (t 26520 17190 127173 671000)) nil (26521 43846 379469 906000) 0 nil])
([nil nil ((411 . 413) (t 26520 17195 857147 687000)) nil (26521 43846 379469 182000) 0 nil])
([nil nil ((411 . 413) (t 26520 17197 277141 204000) (#("  " 0 2 (part-side javascript ws-butler-chg chg)) . 411) (undo-tree-id228 . -2) 413) nil (26521 43846 379468 353000) 0 nil])
([nil nil ((383 . 384) (t 26520 17197 277141 204000)) nil (26521 43846 379466 791000) 0 nil])
([nil nil ((436 . 438) (431 . 435) (#("  " 0 2 (part-side javascript ws-butler-chg chg)) . 431) (402 . 404) (nil rear-nonsticky nil 400 . 401) (nil ws-butler-chg chg 397 . 401) (nil part-side javascript 397 . 401) (nil ws-butler-chg chg 391 . 397) (nil part-side javascript 391 . 397) (nil face web-mode-variable-name-face 391 . 397) (nil ws-butler-chg chg 390 . 391) (nil part-side javascript 390 . 391) (nil face web-mode-variable-name-face 390 . 391) (nil ws-butler-chg chg 389 . 390) (nil part-side javascript 389 . 390) (nil ws-butler-chg chg 384 . 389) (nil part-side javascript 384 . 389) (nil face web-mode-keyword-face 384 . 389) (384 . 401)) nil (26521 43846 379465 352000) 0 nil])
([nil nil ((401 . 402)) nil (26521 43846 379462 492000) 0 nil])
([nil nil ((#("  " 0 2 (part-side javascript ws-butler-chg chg)) . -403) (undo-tree-id227 . -2) 405) nil (26521 43846 379461 645000) 0 nil])
([nil nil ((#("  " 0 2 (part-side javascript ws-butler-chg chg)) . -432) 430) nil (26521 43846 379460 151000) 0 nil])
([nil nil ((#("  " 0 2 (part-side javascript ws-butler-chg chg)) . -433) (undo-tree-id226 . -2) 435) nil (26521 43846 379459 320000) 0 nil])
([nil nil ((#("  " 0 2 (part-side javascript ws-butler-chg chg)) . 430)) nil (26521 43846 379457 647000) 0 nil])
([nil nil ((430 . 432) (t 26520 17206 597098 236000)) nil (26521 43846 379456 945000) 0 nil])
([nil nil ((432 . 434) (#("{" 0 1 (part-side javascript ws-butler-chg chg)) . -432) (432 . 433)) nil (26521 43846 379456 16000) 0 nil])
([nil nil ((433 . 452)) nil (26521 43846 379455 165000) 0 nil])
([nil nil ((452 . 455)) nil (26521 43846 379454 627000) 0 nil])
([nil nil ((#("i" 0 1 (block-side t part-side javascript ws-butler-chg chg)) . -453) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (#("m" 0 1 (block-side t part-side javascript ws-butler-chg chg)) . -454) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) 455) nil (26521 43846 379453 350000) 0 nil])
([nil nil ((429 . 432)) nil (26521 43846 379448 705000) 0 nil])
([nil nil ((450 . 451) (nil ws-butler-chg chg 450 . 451) (nil part-side javascript 450 . 451) (nil part-token string 450 . 451) (nil font-lock-face web-mode-javascript-string-face 450 . 451) (449 . 451) (#("'" 0 1 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript ws-butler-chg chg)) . -449) (432 . 450)) nil (26521 43846 379447 791000) 0 nil])
([nil nil ((451 . 456)) nil (26521 43846 379446 290000) 0 nil])
([nil nil ((456 . 457)) nil (26521 43846 379445 504000) 0 nil])
([nil nil ((458 . 469)) nil (26521 43846 379444 917000) 0 nil])
([nil nil ((493 . 497) (t 26520 17255 570194 151000)) nil (26521 43846 379444 322000) 0 nil])
([nil nil ((472 . 480) (t 26520 17258 553512 417000)) nil (26521 43846 379443 474000) 0 nil])
([nil nil ((479 . 483)) nil (26521 43846 379442 497000) 0 nil])
([nil nil ((483 . 486)) nil (26521 43846 379441 610000) 0 nil])
([nil nil ((#("append" 0 6 (part-side javascript ws-butler-chg chg)) . -480) (undo-tree-id217 . -3) (undo-tree-id218 . -3) (undo-tree-id219 . -6) 486) nil (26521 43846 379440 746000) 0 nil])
([nil nil ((#("." 0 1 (part-side javascript ws-butler-chg chg)) . -479) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) 480) nil (26521 43846 379429 58000) 0 nil])
([nil nil ((479 . 482)) nil (26521 43846 379426 343000) 0 nil])
([nil nil ((480 . 484) (#("pu" 0 2 (part-side javascript ws-butler-chg chg)) . -480) (480 . 482) (#("push" 0 4 (part-side javascript ws-butler-chg chg)) . -480) (480 . 484) (#("pu" 0 2 (part-side javascript ws-butler-chg chg)) . -480) (undo-tree-id211 . -2) (undo-tree-id212 . -2) (undo-tree-id213 . -2) 482) nil (26521 43846 379424 842000) 0 nil])
([nil nil ((512 . 513) (#("(" 0 1 (part-side javascript ws-butler-chg chg)) . 486) (485 . 486) (485 . 486) (#("(" 0 1 (part-side javascript ws-butler-chg chg)) . -511) (511 . 512)) nil (26521 43846 379420 70000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript ws-butler-chg delete)) . -484) (undo-tree-id209 . -1) (undo-tree-id210 . -1) 485) nil (26521 43846 379418 707000) 0 nil])
([nil nil ((515 . 700) (#("const persons = [
  { name: '01-lavallee', sequences: seq },
  { name: 'Person 2', sequences: [{ label: 'Opening', start: 60 }, { label: 'Interview', start: 120 }] },
];
" 0 5 (face web-mode-keyword-face part-side javascript) 5 6 (part-side javascript) 6 7 (face web-mode-variable-name-face part-side javascript) 7 13 (face web-mode-variable-name-face part-side javascript) 13 17 (part-side javascript) 17 18 (part-side javascript) 18 20 (part-side javascript) 20 21 (part-side javascript block-token delimiter-beg block-side t block-controls 0 block-beg 0) 21 22 (part-side javascript block-side t) 22 26 (part-side javascript block-side t) 26 29 (part-side javascript block-side t) 29 32 (part-side javascript block-side t) 32 40 (part-side javascript block-side t) 40 41 (part-side javascript block-side t) 41 43 (part-side javascript block-side t) 43 52 (part-side javascript block-side t) 52 53 (part-side javascript block-side t) 53 54 (part-side javascript block-side t) 54 57 (part-side javascript block-side t) 57 58 (part-side javascript block-side t rear-nonsticky t) 58 59 (part-side javascript block-token delimiter-end block-end t block-side t) 59 60 (part-side javascript) 60 61 (part-side javascript) 61 63 (part-side javascript) 63 64 (part-side javascript block-token delimiter-beg block-side t block-controls 0 block-beg 0) 64 65 (part-side javascript block-side t) 65 69 (part-side javascript block-side t) 69 72 (part-side javascript block-side t) 72 78 (part-side javascript block-side t) 78 79 (part-side javascript block-side t) 79 80 (part-side javascript block-side t) 80 83 (part-side javascript block-side t) 83 92 (part-side javascript block-side t) 92 97 (part-side javascript block-side t) 97 102 (part-side javascript block-side t) 102 105 (part-side javascript block-side t) 105 112 (part-side javascript block-side t) 112 115 (part-side javascript block-side t) 115 120 (part-side javascript block-side t) 120 122 (part-side javascript block-side t) 122 124 (part-side javascript block-side t) 124 130 (part-side javascript block-side t) 130 135 (part-side javascript block-side t) 135 138 (part-side javascript block-side t) 138 147 (part-side javascript block-side t) 147 148 (part-side javascript block-side t) 148 150 (part-side javascript block-side t) 150 155 (part-side javascript block-side t) 155 157 (part-side javascript block-side t) 157 160 (part-side javascript block-side t) 160 164 (part-side javascript block-side t) 164 165 (part-side javascript block-token delimiter-end block-end t block-side t) 165 167 (part-side javascript) 167 168 (part-side javascript) 168 169 (part-side javascript) 169 170 (part-side javascript)) . 515) (undo-tree-id206 . -170) (undo-tree-id207 . -17) (undo-tree-id208 . -170) 685 (t 26520 17300 456627 179000)) nil (26521 43846 379415 999000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript ws-butler-chg chg)) . 699) 515) nil (26521 43846 379413 9000) 0 nil])
([nil nil ((418 . 419) (t 26520 17303 239945 550000)) nil (26521 43846 379412 215000) 0 nil])
([nil nil ((515 . 517)) nil (26521 43846 379411 495000) 0 nil])
([nil nil ((517 . 518) (t 26520 17325 869821 939000)) nil (26521 43846 379410 837000) 0 nil])
([nil nil ((470 . 473) (t 26520 17400 346058 646000)) nil (26521 43846 379410 87000) 0 nil])
([nil nil ((473 . 476)) nil (26521 43846 379409 300000) 0 nil])
([nil nil ((473 . 478) (#("fet" 0 3 (part-side javascript ws-butler-chg chg)) . -473) (473 . 476) (#("fetch" 0 5 (part-side javascript ws-butler-chg chg)) . -473) (473 . 478) (#("fet" 0 3 (part-side javascript ws-butler-chg chg)) . -473) (undo-tree-id203 . -3) (undo-tree-id204 . -3) (undo-tree-id205 . -3) 476) nil (26521 43846 379407 767000) 0 nil])
([nil nil ((478 . 480) (#("(" 0 1 (part-side javascript ws-butler-chg chg)) . -478) (478 . 479)) nil (26521 43846 379404 261000) 0 nil])
([nil nil ((nil rear-nonsticky nil 497 . 498) (nil ws-butler-chg chg 497 . 498) (nil part-side javascript 497 . 498) (nil part-token string 497 . 498) (nil syntax-table (15) 497 . 498) (nil font-lock-face web-mode-javascript-string-face 497 . 498) (nil ws-butler-chg chg 492 . 497) (nil part-side javascript 492 . 497) (nil part-token string 492 . 497) (nil font-lock-face web-mode-javascript-string-face 492 . 497) (nil ws-butler-chg chg 491 . 492) (nil part-side javascript 491 . 492) (nil part-token string 491 . 492) (nil syntax-table (15) 491 . 492) (nil font-lock-face web-mode-javascript-string-face 491 . 492) (nil ws-butler-chg chg 488 . 491) (nil part-side javascript 488 . 491) (nil ws-butler-chg chg 487 . 488) (nil part-side javascript 487 . 488) (nil part-token string 487 . 488) (nil syntax-table (15) 487 . 488) (nil font-lock-face web-mode-javascript-string-face 487 . 488) (nil ws-butler-chg chg 480 . 487) (nil part-side javascript 480 . 487) (nil part-token string 480 . 487) (nil font-lock-face web-mode-javascript-string-face 480 . 487) (nil ws-butler-chg chg 479 . 480) (nil part-side javascript 479 . 480) (nil part-token string 479 . 480) (nil syntax-table (15) 479 . 480) (nil font-lock-face web-mode-javascript-string-face 479 . 480) (479 . 498)) nil (26521 43846 379402 527000) 0 nil])
([nil nil ((#("fetch('./data/'+e+'.json')" 0 5 (face web-mode-function-call-face part-side javascript) 5 6 (part-side javascript) 6 7 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 7 14 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 14 15 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 15 18 (part-side javascript) 18 19 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 19 24 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 24 25 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript rear-nonsticky t) 25 26 (part-side javascript)) . 473) (undo-tree-id198 . -6) (undo-tree-id199 . -5) (undo-tree-id200 . -6) (undo-tree-id201 . -6) (undo-tree-id202 . -26) 499 (t 26520 17484 768866 406000)) nil (26521 43846 379398 6000) 0 nil])
([nil nil ((#("_" 0 1 (block-side t part-side javascript)) . -510) (undo-tree-id194 . -1) (#("s" 0 1 (block-side t part-side javascript)) . -511) (undo-tree-id195 . -1) (#("e" 0 1 (block-side t part-side javascript)) . -512) (undo-tree-id196 . -1) (#("q" 0 1 (block-side t part-side javascript)) . -513) (undo-tree-id197 . -1) 514) nil (26521 43846 379393 98000) 0 nil])
([nil nil ((nil rear-nonsticky nil 535 . 536) (nil ws-butler-chg chg 535 . 536) (nil part-side javascript 535 . 536) (nil block-side t 535 . 536) (nil rear-nonsticky t 534 . 535) (nil ws-butler-chg chg 534 . 535) (nil part-side javascript 534 . 535) (nil block-side t 534 . 535) (nil ws-butler-chg chg 529 . 534) (nil part-side javascript 529 . 534) (nil block-side t 529 . 534) (nil ws-butler-chg chg 528 . 529) (nil part-side javascript 528 . 529) (nil block-side t 528 . 529) (nil ws-butler-chg chg 525 . 528) (nil part-side javascript 525 . 528) (nil block-side t 525 . 528) (nil ws-butler-chg chg 524 . 525) (nil part-side javascript 524 . 525) (nil block-side t 524 . 525) (nil ws-butler-chg chg 517 . 524) (nil part-side javascript 517 . 524) (nil block-side t 517 . 524) (nil ws-butler-chg chg 516 . 517) (nil part-side javascript 516 . 517) (nil block-side t 516 . 517) (nil ws-butler-chg chg 515 . 516) (nil part-side javascript 515 . 516) (nil block-side t 515 . 516) (nil ws-butler-chg chg 510 . 515) (nil part-side javascript 510 . 515) (nil block-side t 510 . 515) (510 . 536)) nil (26521 43846 379388 493000) 0 nil])
([nil nil ((#("  " 0 2 (part-side javascript)) . 471) (undo-tree-id189 . -2) (undo-tree-id190 . -2) (undo-tree-id191 . -2) (undo-tree-id192 . -2) (undo-tree-id193 . -2) 536) nil (26521 43846 379383 653000) 0 nil])
([nil nil ((433 . 473) (#("import _seq from './data/'+e+'.json';" 0 6 (face web-mode-keyword-face part-side javascript) 6 7 (part-side javascript) 7 11 (face web-mode-type-face part-side javascript) 11 12 (part-side javascript) 12 16 (face web-mode-keyword-face part-side javascript) 16 17 (part-side javascript) 17 18 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 18 25 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 25 26 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 26 29 (part-side javascript) 29 30 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 30 35 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 35 36 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 36 37 (part-side javascript)) . 433) (undo-tree-id185 . -37) (undo-tree-id186 . -6) (undo-tree-id187 . -6) (undo-tree-id188 . -37) 470 (t 26520 17488 745507 417000)) nil (26521 43846 379377 557000) 0 nil])
([nil nil ((#("." 0 1 (part-side javascript block-side t)) . -518) (undo-tree-id184 . -1) 519 (t 26520 17491 845487 364000)) nil (26521 43846 379373 765000) 0 nil])
([nil nil ((518 . 520)) nil (26521 43846 379372 165000) 0 nil])
([nil nil ((#("/" 0 1 (block-side t part-side javascript ws-butler-chg chg)) . -519) (undo-tree-id183 . -1) 520) nil (26521 43846 379371 420000) 0 nil])
([nil nil ((#("." 0 1 (block-side t part-side javascript)) . -518) (undo-tree-id181 . -1) (undo-tree-id182 . -1) 519 (t 26520 17504 628737 525000)) nil (26521 43846 379369 868000) 0 nil])
([nil nil ((#("
" 0 1 (part-side javascript)) . 64) (undo-tree-id180 . -1) (63 . 64) (#(";" 0 1 (part-side javascript)) . 62) (63 . 64) 64 (t 26520 17509 568705 179000)) nil (26521 43846 379367 233000) 0 nil])
([nil nil ((nil rear-nonsticky nil 95 . 96) (nil gptel response 95 . 96) (nil fontified t 95 . 96) (nil markdown-gfm-code (46229 47140) 95 . 96) (nil font-lock-multiline t 95 . 96) (nil ws-butler-chg chg 95 . 96) (nil part-side javascript 95 . 96) (nil gptel response 94 . 95) (nil fontified t 94 . 95) (nil markdown-gfm-code (46229 47140) 94 . 95) (nil font-lock-multiline t 94 . 95) (nil ws-butler-chg chg 94 . 95) (nil part-side javascript 94 . 95) (nil part-token string 94 . 95) (nil syntax-table (15) 94 . 95) (nil font-lock-face web-mode-javascript-string-face 94 . 95) (nil gptel response 88 . 94) (nil fontified t 88 . 94) (nil markdown-gfm-code (46229 47140) 88 . 94) (nil font-lock-multiline t 88 . 94) (nil ws-butler-chg chg 88 . 94) (nil part-side javascript 88 . 94) (nil part-token string 88 . 94) (nil font-lock-face web-mode-javascript-string-face 88 . 94) (nil gptel response 87 . 88) (nil fontified t 87 . 88) (nil markdown-gfm-code (46229 47140) 87 . 88) (nil font-lock-multiline t 87 . 88) (nil ws-butler-chg chg 87 . 88) (nil part-side javascript 87 . 88) (nil part-token string 87 . 88) (nil syntax-table (15) 87 . 88) (nil font-lock-face web-mode-javascript-string-face 87 . 88) (nil gptel response 86 . 87) (nil fontified t 86 . 87) (nil markdown-gfm-code (46229 47140) 86 . 87) (nil font-lock-multiline t 86 . 87) (nil ws-butler-chg chg 86 . 87) (nil part-side javascript 86 . 87) (nil gptel response 82 . 86) (nil fontified t 82 . 86) (nil markdown-gfm-code (46229 47140) 82 . 86) (nil font-lock-multiline t 82 . 86) (nil ws-butler-chg chg 82 . 86) (nil part-side javascript 82 . 86) (nil face web-mode-keyword-face 82 . 86) (nil gptel response 81 . 82) (nil fontified t 81 . 82) (nil markdown-gfm-code (46229 47140) 81 . 82) (nil font-lock-multiline t 81 . 82) (nil ws-butler-chg chg 81 . 82) (nil part-side javascript 81 . 82) (nil gptel response 80 . 81) (nil fontified t 80 . 81) (nil markdown-gfm-code (46229 47140) 80 . 81) (nil font-lock-multiline t 80 . 81) (nil ws-butler-chg chg 80 . 81) (nil block-side t 80 . 81) (nil block-end t 80 . 81) (nil block-token delimiter-end 80 . 81) (nil part-side javascript 80 . 81) (nil gptel response 74 . 80) (nil fontified t 74 . 80) (nil markdown-gfm-code (46229 47140) 74 . 80) (nil font-lock-multiline t 74 . 80) (nil ws-butler-chg chg 74 . 80) (nil block-side t 74 . 80) (nil part-side javascript 74 . 80) (nil gptel response 71 . 74) (nil fontified t 71 . 74) (nil markdown-gfm-code (46229 47140) 71 . 74) (nil font-lock-multiline t 71 . 74) (nil ws-butler-chg chg 71 . 74) (nil block-side t 71 . 74) (nil part-side javascript 71 . 74) (nil gptel response 70 . 71) (nil fontified t 70 . 71) (nil markdown-gfm-code (46229 47140) 70 . 71) (nil font-lock-multiline t 70 . 71) (nil ws-butler-chg chg 70 . 71) (nil block-beg 0 70 . 71) (nil block-controls 0 70 . 71) (nil block-side t 70 . 71) (nil block-token delimiter-beg 70 . 71) (nil part-side javascript 70 . 71) (nil gptel response 69 . 70) (nil fontified t 69 . 70) (nil markdown-gfm-code (46229 47140) 69 . 70) (nil font-lock-multiline t 69 . 70) (nil ws-butler-chg chg 69 . 70) (nil part-side javascript 69 . 70) (nil gptel response 63 . 69) (nil fontified t 63 . 69) (nil markdown-gfm-code (46229 47140) 63 . 69) (nil font-lock-multiline t 63 . 69) (nil ws-butler-chg chg 63 . 69) (nil part-side javascript 63 . 69) (nil face web-mode-keyword-face 63 . 69) (63 . 96)) nil (26521 43846 379362 230000) 0 nil])
([nil nil ((#(";" 0 1 (part-side javascript ws-butler-chg chg)) . -96) (undo-tree-id179 . -1) 97) nil (26521 43846 379349 297000) 0 nil])
([nil nil ((96 . 97) (t 26520 17605 444723 5000)) nil (26521 43846 379347 480000) 0 nil])
([nil nil ((nil rear-nonsticky nil 889 . 890) (nil gptel response 886 . 890) (nil fontified t 886 . 890) (nil markdown-gfm-code (46229 47140) 886 . 890) (nil font-lock-multiline t 886 . 890) (nil ws-butler-chg chg 886 . 890) (nil part-side javascript 886 . 890) (nil gptel response 885 . 886) (nil fontified t 885 . 886) (nil font-lock-multiline t 885 . 886) (nil markdown-gfm-code (46229 47140) 885 . 886) (nil ws-butler-chg chg 885 . 886) (nil part-side javascript 885 . 886) (nil gptel response 882 . 885) (nil fontified t 882 . 885) (nil markdown-pre (46686 46857) 882 . 885) (nil font-lock-multiline t 882 . 885) (nil markdown-gfm-code (46229 47140) 882 . 885) (nil ws-butler-chg chg 882 . 885) (nil part-side javascript 882 . 885) (nil gptel response 880 . 882) (nil fontified t 880 . 882) (nil markdown-pre (46686 46857) 880 . 882) (nil font-lock-multiline t 880 . 882) (nil markdown-gfm-code (46229 47140) 880 . 882) (nil ws-butler-chg chg 880 . 882) (nil part-side javascript 880 . 882) (nil gptel response 879 . 880) (nil fontified t 879 . 880) (nil markdown-pre (46686 46857) 879 . 880) (nil font-lock-multiline t 879 . 880) (nil markdown-gfm-code (46229 47140) 879 . 880) (nil ws-butler-chg chg 879 . 880) (nil part-side javascript 879 . 880) (nil gptel response 876 . 879) (nil fontified t 876 . 879) (nil markdown-pre (46686 46857) 876 . 879) (nil font-lock-multiline t 876 . 879) (nil markdown-gfm-code (46229 47140) 876 . 879) (nil ws-butler-chg chg 876 . 879) (nil part-side javascript 876 . 879) (nil gptel response 869 . 876) (nil fontified t 869 . 876) (nil markdown-pre (46686 46857) 869 . 876) (nil font-lock-multiline t 869 . 876) (nil markdown-gfm-code (46229 47140) 869 . 876) (nil ws-butler-chg chg 869 . 876) (nil part-side javascript 869 . 876) (nil gptel response 868 . 869) (nil fontified t 868 . 869) (nil markdown-pre (46686 46857) 868 . 869) (nil font-lock-multiline t 868 . 869) (nil markdown-gfm-code (46229 47140) 868 . 869) (nil ws-butler-chg chg 868 . 869) (nil part-side javascript 868 . 869) (nil part-token string 868 . 869) (nil syntax-table (15) 868 . 869) (nil font-lock-face web-mode-javascript-string-face 868 . 869) (nil gptel response 867 . 868) (nil fontified t 867 . 868) (nil markdown-pre (46686 46857) 867 . 868) (nil font-lock-multiline t 867 . 868) (nil markdown-gfm-code (46229 47140) 867 . 868) (nil ws-butler-chg chg 867 . 868) (nil part-side javascript 867 . 868) (nil part-token string 867 . 868) (nil font-lock-face web-mode-javascript-string-face 867 . 868) (nil gptel response 862 . 867) (nil fontified t 862 . 867) (nil markdown-pre (46686 46857) 862 . 867) (nil font-lock-multiline t 862 . 867) (nil markdown-gfm-code (46229 47140) 862 . 867) (nil ws-butler-chg chg 862 . 867) (nil part-side javascript 862 . 867) (nil part-token string 862 . 867) (nil font-lock-face web-mode-javascript-string-face 862 . 867) (nil gptel response 856 . 862) (nil fontified t 856 . 862) (nil markdown-pre (46686 46857) 856 . 862) (nil font-lock-multiline t 856 . 862) (nil markdown-gfm-code (46229 47140) 856 . 862) (nil ws-butler-chg chg 856 . 862) (nil part-side javascript 856 . 862) (nil part-token string 856 . 862) (nil font-lock-face web-mode-javascript-string-face 856 . 862) (nil gptel response 842 . 856) (nil fontified t 842 . 856) (nil markdown-pre (46686 46857) 842 . 856) (nil font-lock-multiline t 842 . 856) (nil markdown-gfm-code (46229 47140) 842 . 856) (nil ws-butler-chg chg 842 . 856) (nil part-side javascript 842 . 856) (nil part-token string 842 . 856) (nil font-lock-face web-mode-javascript-string-face 842 . 856) (nil gptel response 841 . 842) (nil fontified t 841 . 842) (nil markdown-pre (46686 46857) 841 . 842) (nil font-lock-multiline t 841 . 842) (nil markdown-gfm-code (46229 47140) 841 . 842) (nil ws-butler-chg chg 841 . 842) (nil part-side javascript 841 . 842) (nil part-token string 841 . 842) (nil syntax-table (15) 841 . 842) (nil font-lock-face web-mode-javascript-string-face 841 . 842) (nil gptel response 840 . 841) (nil fontified t 840 . 841) (nil markdown-pre (46686 46857) 840 . 841) (nil font-lock-multiline t 840 . 841) (nil markdown-gfm-code (46229 47140) 840 . 841) (nil ws-butler-chg chg 840 . 841) (nil part-side javascript 840 . 841) (nil gptel response 835 . 840) (nil fontified t 835 . 840) (nil markdown-pre (46686 46857) 835 . 840) (nil font-lock-multiline t 835 . 840) (nil markdown-gfm-code (46229 47140) 835 . 840) (nil ws-butler-chg chg 835 . 840) (nil part-side javascript 835 . 840) (nil face web-mode-function-call-face 835 . 840) (nil gptel response 834 . 835) (nil fontified t 834 . 835) (nil markdown-pre (46686 46857) 834 . 835) (nil font-lock-multiline t 834 . 835) (nil markdown-gfm-code (46229 47140) 834 . 835) (nil ws-butler-chg chg 834 . 835) (nil part-side javascript 834 . 835) (nil gptel response 821 . 834) (nil fontified t 821 . 834) (nil markdown-pre (46686 46857) 821 . 834) (nil font-lock-multiline t 821 . 834) (nil markdown-gfm-code (46229 47140) 821 . 834) (nil ws-butler-chg chg 821 . 834) (nil part-side javascript 821 . 834) (nil gptel response 817 . 821) (nil fontified t 817 . 821) (nil markdown-pre (46686 46857) 817 . 821) (nil font-lock-multiline t 817 . 821) (nil markdown-gfm-code (46229 47140) 817 . 821) (nil ws-butler-chg chg 817 . 821) (nil part-side javascript 817 . 821) (nil gptel response 810 . 817) (nil fontified t 810 . 817) (nil markdown-pre (46686 46857) 810 . 817) (nil font-lock-multiline t 810 . 817) (nil markdown-gfm-code (46229 47140) 810 . 817) (nil ws-butler-chg chg 810 . 817) (nil part-side javascript 810 . 817) (nil gptel response 805 . 810) (nil fontified t 805 . 810) (nil markdown-pre (46686 46857) 805 . 810) (nil font-lock-multiline t 805 . 810) (nil markdown-gfm-code (46229 47140) 805 . 810) (nil ws-butler-chg chg 805 . 810) (nil part-side javascript 805 . 810) (nil face web-mode-keyword-face 805 . 810) (nil gptel response 802 . 805) (nil fontified t 802 . 805) (nil markdown-pre (46686 46857) 802 . 805) (nil font-lock-multiline t 802 . 805) (nil markdown-gfm-code (46229 47140) 802 . 805) (nil ws-butler-chg chg 802 . 805) (nil part-side javascript 802 . 805) (nil gptel response 800 . 802) (nil fontified t 800 . 802) (nil markdown-pre (46686 46857) 800 . 802) (nil font-lock-multiline t 800 . 802) (nil markdown-gfm-code (46229 47140) 800 . 802) (nil ws-butler-chg chg 800 . 802) (nil part-side javascript 800 . 802) (nil gptel response 799 . 800) (nil fontified t 799 . 800) (nil markdown-pre (46686 46857) 799 . 800) (nil font-lock-multiline t 799 . 800) (nil markdown-gfm-code (46229 47140) 799 . 800) (nil ws-butler-chg chg 799 . 800) (nil part-side javascript 799 . 800) (nil gptel response 798 . 799) (nil fontified t 798 . 799) (nil markdown-pre (46686 46857) 798 . 799) (nil font-lock-multiline t 798 . 799) (nil markdown-gfm-code (46229 47140) 798 . 799) (nil ws-butler-chg chg 798 . 799) (nil part-side javascript 798 . 799) (nil gptel response 796 . 798) (nil fontified t 796 . 798) (nil markdown-pre (46686 46857) 796 . 798) (nil font-lock-multiline t 796 . 798) (nil markdown-gfm-code (46229 47140) 796 . 798) (nil markdown-metadata-value (46725 46770 46731 46740 46740 46742 46742 46770 #<buffer *ChatGPT*>) 796 . 798) (nil ws-butler-chg chg 796 . 798) (nil part-side javascript 796 . 798) (nil gptel response 787 . 796) (nil fontified t 787 . 796) (nil markdown-pre (46686 46857) 787 . 796) (nil font-lock-multiline t 787 . 796) (nil markdown-gfm-code (46229 47140) 787 . 796) (nil markdown-metadata-value (46725 46770 46731 46740 46740 46742 46742 46770 #<buffer *ChatGPT*>) 787 . 796) (nil ws-butler-chg chg 787 . 796) (nil part-side javascript 787 . 796) (nil gptel response 784 . 787) (nil fontified t 784 . 787) (nil markdown-pre (46686 46857) 784 . 787) (nil font-lock-multiline t 784 . 787) (nil markdown-gfm-code (46229 47140) 784 . 787) (nil markdown-metadata-value (46725 46770 46731 46740 46740 46742 46742 46770 #<buffer *ChatGPT*>) 784 . 787) (nil ws-butler-chg chg 784 . 787) (nil part-side javascript 784 . 787) (nil face web-mode-function-call-face 784 . 787) (nil gptel response 775 . 784) (nil fontified t 775 . 784) (nil markdown-pre (46686 46857) 775 . 784) (nil font-lock-multiline t 775 . 784) (nil markdown-gfm-code (46229 47140) 775 . 784) (nil markdown-metadata-value (46725 46770 46731 46740 46740 46742 46742 46770 #<buffer *ChatGPT*>) 775 . 784) (nil ws-butler-chg chg 775 . 784) (nil part-side javascript 775 . 784) (nil gptel response 770 . 775) (nil fontified t 770 . 775) (nil markdown-pre (46686 46857) 770 . 775) (nil font-lock-multiline t 770 . 775) (nil markdown-gfm-code (46229 47140) 770 . 775) (nil markdown-metadata-value (46725 46770 46731 46740 46740 46742 46742 46770 #<buffer *ChatGPT*>) 770 . 775) (nil ws-butler-chg chg 770 . 775) (nil part-side javascript 770 . 775) (nil face web-mode-keyword-face 770 . 775) (nil gptel response 768 . 770) (nil fontified t 768 . 770) (nil markdown-pre (46686 46857) 768 . 770) (nil font-lock-multiline t 768 . 770) (nil markdown-gfm-code (46229 47140) 768 . 770) (nil markdown-metadata-markup (46725 46770 46731 46740 46740 46742 46742 46770 #<buffer *ChatGPT*>) 768 . 770) (nil ws-butler-chg chg 768 . 770) (nil part-side javascript 768 . 770) (nil gptel response 767 . 768) (nil fontified t 767 . 768) (nil markdown-pre (46686 46857) 767 . 768) (nil font-lock-multiline t 767 . 768) (nil markdown-gfm-code (46229 47140) 767 . 768) (nil markdown-metadata-key (46725 46770 46731 46740 46740 46742 46742 46770 #<buffer *ChatGPT*>) 767 . 768) (nil ws-butler-chg chg 767 . 768) (nil part-side javascript 767 . 768) (nil gptel response 759 . 767) (nil fontified t 759 . 767) (nil markdown-pre (46686 46857) 759 . 767) (nil font-lock-multiline t 759 . 767) (nil markdown-gfm-code (46229 47140) 759 . 767) (nil markdown-metadata-key (46725 46770 46731 46740 46740 46742 46742 46770 #<buffer *ChatGPT*>) 759 . 767) (nil ws-butler-chg chg 759 . 767) (nil part-side javascript 759 . 767) (nil gptel response 758 . 759) (nil fontified t 758 . 759) (nil markdown-pre (46686 46857) 758 . 759) (nil font-lock-multiline t 758 . 759) (nil markdown-gfm-code (46229 47140) 758 . 759) (nil ws-butler-chg chg 758 . 759) (nil part-side javascript 758 . 759) (nil gptel response 754 . 758) (nil fontified t 754 . 758) (nil markdown-pre (46686 46857) 754 . 758) (nil font-lock-multiline t 754 . 758) (nil markdown-gfm-code (46229 47140) 754 . 758) (nil ws-butler-chg chg 754 . 758) (nil part-side javascript 754 . 758) (nil gptel response 753 . 754) (nil fontified t 753 . 754) (nil markdown-pre (46686 46857) 753 . 754) (nil font-lock-multiline t 753 . 754) (nil markdown-gfm-code (46229 47140) 753 . 754) (nil ws-butler-chg chg 753 . 754) (nil part-side javascript 753 . 754) (nil gptel response 752 . 753) (nil fontified t 752 . 753) (nil markdown-pre (46686 46857) 752 . 753) (nil font-lock-multiline t 752 . 753) (nil markdown-gfm-code (46229 47140) 752 . 753) (nil ws-butler-chg chg 752 . 753) (nil part-side javascript 752 . 753) (nil syntax-table (12) 752 . 753) (nil gptel response 751 . 752) (nil fontified t 751 . 752) (nil markdown-pre (46686 46857) 751 . 752) (nil font-lock-multiline t 751 . 752) (nil markdown-gfm-code (46229 47140) 751 . 752) (nil ws-butler-chg chg 751 . 752) (nil part-side javascript 751 . 752) (nil part-token comment 751 . 752) (nil font-lock-face web-mode-javascript-comment-face 751 . 752) (nil gptel response 741 . 751) (nil fontified t 741 . 751) (nil markdown-pre (46686 46857) 741 . 751) (nil font-lock-multiline t 741 . 751) (nil markdown-gfm-code (46229 47140) 741 . 751) (nil ws-butler-chg chg 741 . 751) (nil part-side javascript 741 . 751) (nil part-token comment 741 . 751) (nil font-lock-face web-mode-javascript-comment-face 741 . 751) (nil gptel response 740 . 741) (nil fontified t 740 . 741) (nil markdown-pre (46686 46857) 740 . 741) (nil font-lock-multiline t 740 . 741) (nil markdown-gfm-code (46229 47140) 740 . 741) (nil ws-butler-chg chg 740 . 741) (nil part-side javascript 740 . 741) (nil part-token comment 740 . 741) (nil font-lock-face web-mode-javascript-comment-face 740 . 741) (nil gptel response 728 . 740) (nil fontified t 728 . 740) (nil markdown-pre (46686 46857) 728 . 740) (nil font-lock-multiline t 728 . 740) (nil markdown-gfm-code (46229 47140) 728 . 740) (nil ws-butler-chg chg 728 . 740) (nil part-side javascript 728 . 740) (nil part-token comment 728 . 740) (nil font-lock-face web-mode-javascript-comment-face 728 . 740) (nil gptel response 727 . 728) (nil fontified t 727 . 728) (nil markdown-pre (46686 46857) 727 . 728) (nil font-lock-multiline t 727 . 728) (nil markdown-gfm-code (46229 47140) 727 . 728) (nil ws-butler-chg chg 727 . 728) (nil part-side javascript 727 . 728) (nil part-token comment 727 . 728) (nil font-lock-face web-mode-javascript-comment-face 727 . 728) (nil gptel response 721 . 727) (nil fontified t 721 . 727) (nil markdown-pre (46686 46857) 721 . 727) (nil font-lock-multiline t 721 . 727) (nil markdown-gfm-code (46229 47140) 721 . 727) (nil ws-butler-chg chg 721 . 727) (nil part-side javascript 721 . 727) (nil part-token comment 721 . 727) (nil font-lock-face web-mode-javascript-comment-face 721 . 727) (nil gptel response 720 . 721) (nil fontified t 720 . 721) (nil markdown-pre (46686 46857) 720 . 721) (nil font-lock-multiline t 720 . 721) (nil markdown-gfm-code (46229 47140) 720 . 721) (nil ws-butler-chg chg 720 . 721) (nil part-side javascript 720 . 721) (nil part-token comment 720 . 721) (nil syntax-table (11) 720 . 721) (nil font-lock-face web-mode-javascript-comment-face 720 . 721) (nil gptel response 719 . 720) (nil fontified t 719 . 720) (nil markdown-pre (46686 46857) 719 . 720) (nil font-lock-multiline t 719 . 720) (nil markdown-gfm-code (46229 47140) 719 . 720) (nil ws-butler-chg chg 719 . 720) (nil part-side javascript 719 . 720) (nil gptel response 714 . 719) (nil fontified t 714 . 719) (nil markdown-pre (46686 46857) 714 . 719) (nil font-lock-multiline t 714 . 719) (nil markdown-gfm-code (46229 47140) 714 . 719) (nil ws-butler-chg chg 714 . 719) (nil part-side javascript 714 . 719) (nil gptel response 708 . 714) (nil fontified t 708 . 714) (nil markdown-gfm-code (46229 47140) 708 . 714) (nil font-lock-multiline t 708 . 714) (nil ws-butler-chg chg 708 . 714) (nil part-side javascript 708 . 714) (nil gptel response 699 . 708) (nil fontified t 699 . 708) (nil markdown-gfm-code (46229 47140) 699 . 708) (nil font-lock-multiline t 699 . 708) (nil ws-butler-chg chg 699 . 708) (nil part-side javascript 699 . 708) (nil gptel response 695 . 699) (nil fontified t 695 . 699) (nil markdown-gfm-code (46229 47140) 695 . 699) (nil font-lock-multiline t 695 . 699) (nil ws-butler-chg chg 695 . 699) (nil part-side javascript 695 . 699) (nil face web-mode-function-call-face 695 . 699) (nil gptel response 685 . 695) (nil fontified t 685 . 695) (nil markdown-gfm-code (46229 47140) 685 . 695) (nil font-lock-multiline t 685 . 695) (nil ws-butler-chg chg 685 . 695) (nil part-side javascript 685 . 695) (nil gptel response 679 . 685) (nil fontified t 679 . 685) (nil markdown-gfm-code (46229 47140) 679 . 685) (nil font-lock-multiline t 679 . 685) (nil ws-butler-chg chg 679 . 685) (nil part-side javascript 679 . 685) (nil face web-mode-keyword-face 679 . 685) (nil gptel response 671 . 679) (nil fontified t 671 . 679) (nil markdown-gfm-code (46229 47140) 671 . 679) (nil font-lock-multiline t 671 . 679) (nil ws-butler-chg chg 671 . 679) (nil part-side javascript 671 . 679) (nil gptel response 661 . 671) (nil fontified t 661 . 671) (nil markdown-gfm-code (46229 47140) 661 . 671) (nil font-lock-multiline t 661 . 671) (nil ws-butler-chg chg 661 . 671) (nil part-side javascript 661 . 671) (nil gptel response 658 . 661) (nil fontified t 658 . 661) (nil markdown-gfm-code (46229 47140) 658 . 661) (nil font-lock-multiline t 658 . 661) (nil ws-butler-chg chg 658 . 661) (nil part-side javascript 658 . 661) (nil gptel response 657 . 658) (nil fontified t 657 . 658) (nil invisible markdown-markup 657 . 658) (nil markdown-gfm-code (46229 47140) 657 . 658) (nil font-lock-multiline t 657 . 658) (nil ws-butler-chg chg 657 . 658) (nil part-side javascript 657 . 658) (nil part-token string 657 . 658) (nil syntax-table (15) 657 . 658) (nil font-lock-face web-mode-javascript-string-face 657 . 658) (nil gptel response 656 . 657) (nil fontified t 656 . 657) (nil markdown-gfm-code (46229 47140) 656 . 657) (nil font-lock-multiline t 656 . 657) (nil ws-butler-chg chg 656 . 657) (nil block-side t 656 . 657) (nil block-end t 656 . 657) (nil block-token delimiter-end 656 . 657) (nil part-side javascript 656 . 657) (nil part-token string 656 . 657) (nil gptel response 652 . 656) (nil fontified t 652 . 656) (nil markdown-gfm-code (46229 47140) 652 . 656) (nil font-lock-multiline t 652 . 656) (nil ws-butler-chg chg 652 . 656) (nil block-side t 652 . 656) (nil part-side javascript 652 . 656) (nil part-token string 652 . 656) (nil gptel response 637 . 652) (nil fontified t 637 . 652) (nil markdown-gfm-code (46229 47140) 637 . 652) (nil font-lock-multiline t 637 . 652) (nil ws-butler-chg chg 637 . 652) (nil block-side t 637 . 652) (nil part-side javascript 637 . 652) (nil part-token string 637 . 652) (nil gptel response 636 . 637) (nil fontified t 636 . 637) (nil markdown-gfm-code (46229 47140) 636 . 637) (nil font-lock-multiline t 636 . 637) (nil ws-butler-chg chg 636 . 637) (nil block-beg 0 636 . 637) (nil block-controls 0 636 . 637) (nil block-side t 636 . 637) (nil block-token delimiter-beg 636 . 637) (nil part-side javascript 636 . 637) (nil part-token string 636 . 637) (nil gptel response 635 . 636) (nil fontified t 635 . 636) (nil markdown-gfm-code (46229 47140) 635 . 636) (nil font-lock-multiline t 635 . 636) (nil ws-butler-chg chg 635 . 636) (nil part-side javascript 635 . 636) (nil part-token string 635 . 636) (nil font-lock-face web-mode-variable-name-face 635 . 636) (nil gptel response 633 . 635) (nil fontified t 633 . 635) (nil markdown-gfm-code (46229 47140) 633 . 635) (nil font-lock-multiline t 633 . 635) (nil ws-butler-chg chg 633 . 635) (nil part-side javascript 633 . 635) (nil part-token string 633 . 635) (nil font-lock-face web-mode-javascript-string-face 633 . 635) (nil gptel response 632 . 633) (nil fontified t 632 . 633) (nil markdown-gfm-code (46229 47140) 632 . 633) (nil font-lock-multiline t 632 . 633) (nil ws-butler-chg chg 632 . 633) (nil block-side t 632 . 633) (nil block-end t 632 . 633) (nil block-token delimiter-end 632 . 633) (nil part-side javascript 632 . 633) (nil part-token string 632 . 633) (nil gptel response 628 . 632) (nil fontified t 628 . 632) (nil markdown-gfm-code (46229 47140) 628 . 632) (nil font-lock-multiline t 628 . 632) (nil ws-butler-chg chg 628 . 632) (nil block-side t 628 . 632) (nil part-side javascript 628 . 632) (nil part-token string 628 . 632) (nil gptel response 627 . 628) (nil fontified t 627 . 628) (nil markdown-gfm-code (46229 47140) 627 . 628) (nil font-lock-multiline t 627 . 628) (nil ws-butler-chg chg 627 . 628) (nil block-beg 0 627 . 628) (nil block-controls 0 627 . 628) (nil block-side t 627 . 628) (nil block-token delimiter-beg 627 . 628) (nil part-side javascript 627 . 628) (nil part-token string 627 . 628) (nil gptel response 626 . 627) (nil fontified t 626 . 627) (nil markdown-gfm-code (46229 47140) 626 . 627) (nil font-lock-multiline t 626 . 627) (nil ws-butler-chg chg 626 . 627) (nil part-side javascript 626 . 627) (nil part-token string 626 . 627) (nil font-lock-face web-mode-variable-name-face 626 . 627) (nil gptel response 625 . 626) (nil fontified t 625 . 626) (nil markdown-gfm-code (46229 47140) 625 . 626) (nil font-lock-multiline t 625 . 626) (nil ws-butler-chg chg 625 . 626) (nil part-side javascript 625 . 626) (nil part-token string 625 . 626) (nil font-lock-face web-mode-javascript-string-face 625 . 626) (nil gptel response 616 . 625) (nil fontified t 616 . 625) (nil markdown-gfm-code (46229 47140) 616 . 625) (nil font-lock-multiline t 616 . 625) (nil ws-butler-chg chg 616 . 625) (nil part-side javascript 616 . 625) (nil part-token string 616 . 625) (nil font-lock-face web-mode-javascript-string-face 616 . 625) (nil gptel response 610 . 616) (nil fontified t 610 . 616) (nil markdown-gfm-code (46229 47140) 610 . 616) (nil font-lock-multiline t 610 . 616) (nil ws-butler-chg chg 610 . 616) (nil part-side javascript 610 . 616) (nil part-token string 610 . 616) (nil font-lock-face web-mode-javascript-string-face 610 . 616) (nil gptel response 609 . 610) (nil fontified t 609 . 610) (nil invisible markdown-markup 609 . 610) (nil markdown-gfm-code (46229 47140) 609 . 610) (nil font-lock-multiline t 609 . 610) (nil ws-butler-chg chg 609 . 610) (nil part-side javascript 609 . 610) (nil part-token string 609 . 610) (nil syntax-table (15) 609 . 610) (nil font-lock-face web-mode-javascript-string-face 609 . 610) (nil gptel response 608 . 609) (nil fontified t 608 . 609) (nil markdown-gfm-code (46229 47140) 608 . 609) (nil font-lock-multiline t 608 . 609) (nil ws-butler-chg chg 608 . 609) (nil part-side javascript 608 . 609) (nil gptel response 603 . 608) (nil fontified t 603 . 608) (nil markdown-gfm-code (46229 47140) 603 . 608) (nil font-lock-multiline t 603 . 608) (nil ws-butler-chg chg 603 . 608) (nil part-side javascript 603 . 608) (nil face web-mode-type-face 603 . 608) (nil gptel response 602 . 603) (nil fontified t 602 . 603) (nil markdown-gfm-code (46229 47140) 602 . 603) (nil font-lock-multiline t 602 . 603) (nil ws-butler-chg chg 602 . 603) (nil part-side javascript 602 . 603) (nil gptel response 599 . 602) (nil fontified t 599 . 602) (nil markdown-gfm-code (46229 47140) 599 . 602) (nil font-lock-multiline t 599 . 602) (nil ws-butler-chg chg 599 . 602) (nil part-side javascript 599 . 602) (nil face web-mode-keyword-face 599 . 602) (nil gptel response 598 . 599) (nil fontified t 598 . 599) (nil markdown-gfm-code (46229 47140) 598 . 599) (nil font-lock-multiline t 598 . 599) (nil ws-butler-chg chg 598 . 599) (nil part-side javascript 598 . 599) (nil gptel response 593 . 598) (nil fontified t 593 . 598) (nil markdown-gfm-code (46229 47140) 593 . 598) (nil font-lock-multiline t 593 . 598) (nil ws-butler-chg chg 593 . 598) (nil part-side javascript 593 . 598) (nil face web-mode-keyword-face 593 . 598) (nil gptel response 583 . 593) (nil fontified t 583 . 593) (nil markdown-gfm-code (46229 47140) 583 . 593) (nil font-lock-multiline t 583 . 593) (nil ws-butler-chg chg 583 . 593) (nil part-side javascript 583 . 593) (nil gptel response 579 . 583) (nil fontified t 579 . 583) (nil markdown-gfm-code (46229 47140) 579 . 583) (nil font-lock-multiline t 579 . 583) (nil ws-butler-chg chg 579 . 583) (nil part-side javascript 579 . 583) (nil gptel response 568 . 579) (nil fontified t 568 . 579) (nil markdown-gfm-code (46229 47140) 568 . 579) (nil font-lock-multiline t 568 . 579) (nil ws-butler-chg chg 568 . 579) (nil part-side javascript 568 . 579) (nil gptel response 565 . 568) (nil fontified t 565 . 568) (nil markdown-gfm-code (46229 47140) 565 . 568) (nil font-lock-multiline t 565 . 568) (nil ws-butler-chg chg 565 . 568) (nil part-side javascript 565 . 568) (nil gptel response 563 . 565) (nil fontified t 563 . 565) (nil markdown-gfm-code (46229 47140) 563 . 565) (nil font-lock-multiline t 563 . 565) (nil ws-butler-chg chg 563 . 565) (nil part-side javascript 563 . 565) (nil face web-mode-keyword-face 563 . 565) (nil gptel response 562 . 563) (nil fontified t 562 . 563) (nil markdown-gfm-code (46229 47140) 562 . 563) (nil font-lock-multiline t 562 . 563) (nil ws-butler-chg chg 562 . 563) (nil part-side javascript 562 . 563) (nil gptel response 555 . 562) (nil fontified t 555 . 562) (nil markdown-gfm-code (46229 47140) 555 . 562) (nil font-lock-multiline t 555 . 562) (nil ws-butler-chg chg 555 . 562) (nil part-side javascript 555 . 562) (nil gptel response 554 . 555) (nil fontified t 554 . 555) (nil markdown-gfm-code (46229 47140) 554 . 555) (nil font-lock-multiline t 554 . 555) (nil ws-butler-chg chg 554 . 555) (nil part-side javascript 554 . 555) (nil gptel response 552 . 554) (nil fontified t 552 . 554) (nil markdown-gfm-code (46229 47140) 552 . 554) (nil markdown-metadata-value (46477 46526 46485 46500 46500 46502 46502 46526 #<buffer *ChatGPT*>) 552 . 554) (nil font-lock-multiline t 552 . 554) (nil ws-butler-chg chg 552 . 554) (nil part-side javascript 552 . 554) (nil gptel response 551 . 552) (nil fontified t 551 . 552) (nil invisible markdown-markup 551 . 552) (nil markdown-gfm-code (46229 47140) 551 . 552) (nil markdown-metadata-value (46477 46526 46485 46500 46500 46502 46502 46526 #<buffer *ChatGPT*>) 551 . 552) (nil font-lock-multiline t 551 . 552) (nil ws-butler-chg chg 551 . 552) (nil part-side javascript 551 . 552) (nil part-token string 551 . 552) (nil syntax-table (15) 551 . 552) (nil font-lock-face web-mode-javascript-string-face 551 . 552) (nil gptel response 550 . 551) (nil fontified t 550 . 551) (nil markdown-gfm-code (46229 47140) 550 . 551) (nil markdown-metadata-value (46477 46526 46485 46500 46500 46502 46502 46526 #<buffer *ChatGPT*>) 550 . 551) (nil font-lock-multiline t 550 . 551) (nil ws-butler-chg chg 550 . 551) (nil block-side t 550 . 551) (nil block-end t 550 . 551) (nil block-token delimiter-end 550 . 551) (nil part-side javascript 550 . 551) (nil part-token string 550 . 551) (nil gptel response 546 . 550) (nil fontified t 546 . 550) (nil markdown-gfm-code (46229 47140) 546 . 550) (nil markdown-metadata-value (46477 46526 46485 46500 46500 46502 46502 46526 #<buffer *ChatGPT*>) 546 . 550) (nil font-lock-multiline t 546 . 550) (nil ws-butler-chg chg 546 . 550) (nil block-side t 546 . 550) (nil part-side javascript 546 . 550) (nil part-token string 546 . 550) (nil gptel response 545 . 546) (nil fontified t 545 . 546) (nil markdown-gfm-code (46229 47140) 545 . 546) (nil markdown-metadata-value (46477 46526 46485 46500 46500 46502 46502 46526 #<buffer *ChatGPT*>) 545 . 546) (nil font-lock-multiline t 545 . 546) (nil ws-butler-chg chg 545 . 546) (nil block-beg 0 545 . 546) (nil block-controls 0 545 . 546) (nil block-side t 545 . 546) (nil block-token delimiter-beg 545 . 546) (nil part-side javascript 545 . 546) (nil part-token string 545 . 546) (nil gptel response 544 . 545) (nil fontified t 544 . 545) (nil markdown-gfm-code (46229 47140) 544 . 545) (nil markdown-metadata-value (46477 46526 46485 46500 46500 46502 46502 46526 #<buffer *ChatGPT*>) 544 . 545) (nil font-lock-multiline t 544 . 545) (nil ws-butler-chg chg 544 . 545) (nil part-side javascript 544 . 545) (nil part-token string 544 . 545) (nil font-lock-face web-mode-variable-name-face 544 . 545) (nil gptel response 543 . 544) (nil fontified t 543 . 544) (nil markdown-gfm-code (46229 47140) 543 . 544) (nil markdown-metadata-value (46477 46526 46485 46500 46500 46502 46502 46526 #<buffer *ChatGPT*>) 543 . 544) (nil font-lock-multiline t 543 . 544) (nil ws-butler-chg chg 543 . 544) (nil part-side javascript 543 . 544) (nil part-token string 543 . 544) (nil font-lock-face web-mode-javascript-string-face 543 . 544) (nil gptel response 542 . 543) (nil fontified t 542 . 543) (nil invisible markdown-markup 542 . 543) (nil markdown-gfm-code (46229 47140) 542 . 543) (nil markdown-metadata-value (46477 46526 46485 46500 46500 46502 46502 46526 #<buffer *ChatGPT*>) 542 . 543) (nil font-lock-multiline t 542 . 543) (nil ws-butler-chg chg 542 . 543) (nil part-side javascript 542 . 543) (nil part-token string 542 . 543) (nil syntax-table (15) 542 . 543) (nil font-lock-face web-mode-javascript-string-face 542 . 543) (nil gptel response 541 . 542) (nil fontified t 541 . 542) (nil markdown-gfm-code (46229 47140) 541 . 542) (nil markdown-metadata-value (46477 46526 46485 46500 46500 46502 46502 46526 #<buffer *ChatGPT*>) 541 . 542) (nil font-lock-multiline t 541 . 542) (nil ws-butler-chg chg 541 . 542) (nil part-side javascript 541 . 542) (nil gptel response 536 . 541) (nil fontified t 536 . 541) (nil markdown-gfm-code (46229 47140) 536 . 541) (nil markdown-metadata-value (46477 46526 46485 46500 46500 46502 46502 46526 #<buffer *ChatGPT*>) 536 . 541) (nil font-lock-multiline t 536 . 541) (nil ws-butler-chg chg 536 . 541) (nil part-side javascript 536 . 541) (nil face web-mode-function-call-face 536 . 541) (nil gptel response 535 . 536) (nil fontified t 535 . 536) (nil markdown-gfm-code (46229 47140) 535 . 536) (nil markdown-metadata-value (46477 46526 46485 46500 46500 46502 46502 46526 #<buffer *ChatGPT*>) 535 . 536) (nil font-lock-multiline t 535 . 536) (nil ws-butler-chg chg 535 . 536) (nil part-side javascript 535 . 536) (nil gptel response 530 . 535) (nil fontified t 530 . 535) (nil markdown-gfm-code (46229 47140) 530 . 535) (nil markdown-metadata-value (46477 46526 46485 46500 46500 46502 46502 46526 #<buffer *ChatGPT*>) 530 . 535) (nil font-lock-multiline t 530 . 535) (nil ws-butler-chg chg 530 . 535) (nil part-side javascript 530 . 535) (nil face web-mode-keyword-face 530 . 535) (nil gptel response 528 . 530) (nil fontified t 528 . 530) (nil markdown-gfm-code (46229 47140) 528 . 530) (nil markdown-metadata-markup (46477 46526 46485 46500 46500 46502 46502 46526 #<buffer *ChatGPT*>) 528 . 530) (nil font-lock-multiline t 528 . 530) (nil ws-butler-chg chg 528 . 530) (nil part-side javascript 528 . 530) (nil gptel response 527 . 528) (nil fontified t 527 . 528) (nil markdown-gfm-code (46229 47140) 527 . 528) (nil markdown-metadata-key (46477 46526 46485 46500 46500 46502 46502 46526 #<buffer *ChatGPT*>) 527 . 528) (nil font-lock-multiline t 527 . 528) (nil ws-butler-chg chg 527 . 528) (nil part-side javascript 527 . 528) (nil gptel response 519 . 527) (nil fontified t 519 . 527) (nil markdown-gfm-code (46229 47140) 519 . 527) (nil markdown-metadata-key (46477 46526 46485 46500 46500 46502 46502 46526 #<buffer *ChatGPT*>) 519 . 527) (nil font-lock-multiline t 519 . 527) (nil ws-butler-chg chg 519 . 527) (nil part-side javascript 519 . 527) (nil face web-mode-variable-name-face 519 . 527) (nil gptel response 518 . 519) (nil fontified t 518 . 519) (nil markdown-gfm-code (46229 47140) 518 . 519) (nil markdown-metadata-key (46477 46526 46485 46500 46500 46502 46502 46526 #<buffer *ChatGPT*>) 518 . 519) (nil font-lock-multiline t 518 . 519) (nil ws-butler-chg chg 518 . 519) (nil part-side javascript 518 . 519) (nil gptel response 513 . 518) (nil fontified t 513 . 518) (nil markdown-gfm-code (46229 47140) 513 . 518) (nil markdown-metadata-key (46477 46526 46485 46500 46500 46502 46502 46526 #<buffer *ChatGPT*>) 513 . 518) (nil font-lock-multiline t 513 . 518) (nil ws-butler-chg chg 513 . 518) (nil part-side javascript 513 . 518) (nil face web-mode-keyword-face 513 . 518) (nil gptel response 512 . 513) (nil fontified t 512 . 513) (nil markdown-gfm-code (46229 47140) 512 . 513) (nil font-lock-multiline t 512 . 513) (nil ws-butler-chg chg 512 . 513) (nil part-side javascript 512 . 513) (nil gptel response 504 . 512) (nil fontified t 504 . 512) (nil markdown-gfm-code (46229 47140) 504 . 512) (nil font-lock-multiline t 504 . 512) (nil ws-butler-chg chg 504 . 512) (nil part-side javascript 504 . 512) (nil gptel response 502 . 504) (nil fontified t 502 . 504) (nil markdown-gfm-code (46229 47140) 502 . 504) (nil markdown-metadata-value (46422 46476 46428 46443 46443 46445 46445 46476 #<buffer *ChatGPT*>) 502 . 504) (nil font-lock-multiline t 502 . 504) (nil ws-butler-chg chg 502 . 504) (nil part-side javascript 502 . 504) (nil gptel response 498 . 502) (nil fontified t 498 . 502) (nil markdown-gfm-code (46229 47140) 498 . 502) (nil markdown-metadata-value (46422 46476 46428 46443 46443 46445 46445 46476 #<buffer *ChatGPT*>) 498 . 502) (nil font-lock-multiline t 498 . 502) (nil ws-butler-chg chg 498 . 502) (nil part-side javascript 498 . 502) (nil gptel response 492 . 498) (nil fontified t 492 . 498) (nil markdown-gfm-code (46229 47140) 492 . 498) (nil markdown-metadata-value (46422 46476 46428 46443 46443 46445 46445 46476 #<buffer *ChatGPT*>) 492 . 498) (nil font-lock-multiline t 492 . 498) (nil ws-butler-chg chg 492 . 498) (nil part-side javascript 492 . 498) (nil gptel response 487 . 492) (nil fontified t 487 . 492) (nil markdown-gfm-code (46229 47140) 487 . 492) (nil markdown-metadata-value (46422 46476 46428 46443 46443 46445 46445 46476 #<buffer *ChatGPT*>) 487 . 492) (nil font-lock-multiline t 487 . 492) (nil ws-butler-chg chg 487 . 492) (nil part-side javascript 487 . 492) (nil face web-mode-keyword-face 487 . 492) (nil gptel response 486 . 487) (nil fontified t 486 . 487) (nil markdown-gfm-code (46229 47140) 486 . 487) (nil markdown-metadata-value (46422 46476 46428 46443 46443 46445 46445 46476 #<buffer *ChatGPT*>) 486 . 487) (nil font-lock-multiline t 486 . 487) (nil ws-butler-chg chg 486 . 487) (nil part-side javascript 486 . 487) (nil gptel response 483 . 486) (nil fontified t 483 . 486) (nil markdown-gfm-code (46229 47140) 483 . 486) (nil markdown-metadata-value (46422 46476 46428 46443 46443 46445 46445 46476 #<buffer *ChatGPT*>) 483 . 486) (nil font-lock-multiline t 483 . 486) (nil ws-butler-chg chg 483 . 486) (nil part-side javascript 483 . 486) (nil face web-mode-function-call-face 483 . 486) (nil gptel response 482 . 483) (nil fontified t 482 . 483) (nil markdown-gfm-code (46229 47140) 482 . 483) (nil markdown-metadata-value (46422 46476 46428 46443 46443 46445 46445 46476 #<buffer *ChatGPT*>) 482 . 483) (nil font-lock-multiline t 482 . 483) (nil ws-butler-chg chg 482 . 483) (nil part-side javascript 482 . 483) (nil gptel response 473 . 482) (nil fontified t 473 . 482) (nil markdown-gfm-code (46229 47140) 473 . 482) (nil markdown-metadata-value (46422 46476 46428 46443 46443 46445 46445 46476 #<buffer *ChatGPT*>) 473 . 482) (nil font-lock-multiline t 473 . 482) (nil ws-butler-chg chg 473 . 482) (nil part-side javascript 473 . 482) (nil gptel response 472 . 473) (nil fontified t 472 . 473) (nil markdown-gfm-code (46229 47140) 472 . 473) (nil markdown-metadata-markup (46422 46476 46428 46443 46443 46445 46445 46476 #<buffer *ChatGPT*>) 472 . 473) (nil font-lock-multiline t 472 . 473) (nil ws-butler-chg chg 472 . 473) (nil part-side javascript 472 . 473) (nil gptel response 471 . 472) (nil fontified t 471 . 472) (nil markdown-gfm-code (46229 47140) 471 . 472) (nil markdown-metadata-markup (46422 46476 46428 46443 46443 46445 46445 46476 #<buffer *ChatGPT*>) 471 . 472) (nil font-lock-multiline t 471 . 472) (nil ws-butler-chg chg 471 . 472) (nil part-side javascript 471 . 472) (nil gptel response 470 . 471) (nil fontified t 470 . 471) (nil markdown-gfm-code (46229 47140) 470 . 471) (nil markdown-metadata-key (46422 46476 46428 46443 46443 46445 46445 46476 #<buffer *ChatGPT*>) 470 . 471) (nil font-lock-multiline t 470 . 471) (nil ws-butler-chg chg 470 . 471) (nil part-side javascript 470 . 471) (nil gptel response 462 . 470) (nil fontified t 462 . 470) (nil markdown-gfm-code (46229 47140) 462 . 470) (nil markdown-metadata-key (46422 46476 46428 46443 46443 46445 46445 46476 #<buffer *ChatGPT*>) 462 . 470) (nil font-lock-multiline t 462 . 470) (nil ws-butler-chg chg 462 . 470) (nil part-side javascript 462 . 470) (nil face web-mode-variable-name-face 462 . 470) (nil gptel response 461 . 462) (nil fontified t 461 . 462) (nil markdown-gfm-code (46229 47140) 461 . 462) (nil markdown-metadata-key (46422 46476 46428 46443 46443 46445 46445 46476 #<buffer *ChatGPT*>) 461 . 462) (nil font-lock-multiline t 461 . 462) (nil ws-butler-chg chg 461 . 462) (nil part-side javascript 461 . 462) (nil gptel response 456 . 461) (nil fontified t 456 . 461) (nil markdown-gfm-code (46229 47140) 456 . 461) (nil markdown-metadata-key (46422 46476 46428 46443 46443 46445 46445 46476 #<buffer *ChatGPT*>) 456 . 461) (nil font-lock-multiline t 456 . 461) (nil ws-butler-chg chg 456 . 461) (nil part-side javascript 456 . 461) (nil face web-mode-keyword-face 456 . 461) (nil gptel response 450 . 456) (nil fontified t 450 . 456) (nil markdown-gfm-code (46229 47140) 450 . 456) (nil font-lock-multiline t 450 . 456) (nil ws-butler-chg chg 450 . 456) (nil part-side javascript 450 . 456) (nil gptel response 447 . 450) (nil fontified t 447 . 450) (nil markdown-gfm-code (46229 47140) 447 . 450) (nil font-lock-multiline t 447 . 450) (nil ws-butler-chg chg 447 . 450) (nil part-side javascript 447 . 450) (nil gptel response 444 . 447) (nil fontified t 444 . 447) (nil markdown-gfm-code (46229 47140) 444 . 447) (nil font-lock-multiline t 444 . 447) (nil ws-butler-chg chg 444 . 447) (nil part-side javascript 444 . 447) (nil face web-mode-keyword-face 444 . 447) (nil gptel response 443 . 444) (nil fontified t 443 . 444) (nil markdown-gfm-code (46229 47140) 443 . 444) (nil font-lock-multiline t 443 . 444) (nil ws-butler-chg chg 443 . 444) (nil part-side javascript 443 . 444) (nil gptel response 431 . 443) (nil fontified t 431 . 443) (nil markdown-gfm-code (46229 47140) 431 . 443) (nil font-lock-multiline t 431 . 443) (nil ws-butler-chg chg 431 . 443) (nil part-side javascript 431 . 443) (nil gptel response 426 . 431) (nil fontified t 426 . 431) (nil markdown-gfm-code (46229 47140) 426 . 431) (nil font-lock-multiline t 426 . 431) (nil ws-butler-chg chg 426 . 431) (nil part-side javascript 426 . 431) (nil face web-mode-keyword-face 426 . 431) (nil gptel response 425 . 426) (nil fontified t 425 . 426) (nil markdown-gfm-code (46229 47140) 425 . 426) (nil font-lock-multiline t 425 . 426) (nil ws-butler-chg chg 425 . 426) (nil part-side javascript 425 . 426) (nil gptel response 420 . 425) (nil fontified t 420 . 425) (nil markdown-gfm-code (46229 47140) 420 . 425) (nil font-lock-multiline t 420 . 425) (nil ws-butler-chg chg 420 . 425) (nil part-side javascript 420 . 425) (nil face web-mode-function-call-face 420 . 425) (nil gptel response 418 . 420) (nil fontified t 418 . 420) (nil markdown-gfm-code (46229 47140) 418 . 420) (nil font-lock-multiline t 418 . 420) (nil ws-butler-chg chg 418 . 420) (nil part-side javascript 418 . 420) (nil face web-mode-function-call-face 418 . 420) (nil gptel response 416 . 418) (nil fontified t 416 . 418) (nil markdown-gfm-code (46229 47140) 416 . 418) (nil font-lock-multiline t 416 . 418) (nil ws-butler-chg chg 416 . 418) (nil part-side javascript 416 . 418) (416 . 890) (t 26520 17606 241384 123000)) nil (26521 43846 379317 225000) 0 nil])
([nil nil ((890 . 891)) nil (26521 43846 379165 964000) 0 nil])
([nil nil ((#("  " 0 2 (part-side javascript ws-butler-chg chg)) . -416)) nil (26521 43846 379165 278000) 0 nil])
([nil nil ((#("  " 0 2 (part-side javascript ws-butler-chg chg)) . -440) 438) nil (26521 43846 379164 367000) 0 nil])
([nil nil ((#("  " 0 2 (part-side javascript ws-butler-chg chg)) . -450) 448) nil (26521 43846 379163 524000) 0 nil])
([nil nil ((#("  " 0 2 (part-side javascript ws-butler-chg chg)) . -505) 503) nil (26521 43846 379162 544000) 0 nil])
([nil nil ((#("  " 0 2 (part-side javascript ws-butler-chg chg)) . -553)) nil (26521 43846 379161 618000) 0 nil])
([nil nil ((#("  " 0 2 (part-side javascript ws-butler-chg chg)) . -581) 579) nil (26521 43846 379160 414000) 0 nil])
([nil nil ((#("  " 0 2 (part-side javascript ws-butler-chg chg)) . -655) (undo-tree-id178 . -2) 657) nil (26521 43846 379159 376000) 0 nil])
([nil nil ((#("  " 0 2 (part-side javascript ws-butler-chg chg)) . -663)) nil (26521 43846 379157 617000) 0 nil])
([nil nil ((#("  " 0 2 (part-side javascript ws-butler-chg chg)) . -691) (undo-tree-id177 . -2) 693) nil (26521 43846 379156 744000) 0 nil])
([nil nil ((#("  " 0 2 (part-side javascript ws-butler-chg chg)) . -700)) nil (26521 43846 379155 122000) 0 nil])
([nil nil ((#("  " 0 2 (part-side javascript ws-butler-chg chg)) . -737)) nil (26521 43846 379154 474000) 0 nil])
([nil nil ((#("  " 0 2 (part-side javascript ws-butler-chg chg)) . -779) (undo-tree-id176 . -2) 781) nil (26521 43846 379153 540000) 0 nil])
([nil nil ((#("  " 0 2 (part-side javascript ws-butler-chg chg)) . -801) 799) nil (26521 43846 379151 680000) 0 nil])
([nil nil ((#("  " 0 2 (part-side javascript ws-butler-chg chg)) . -855) (undo-tree-id175 . -2) 857) nil (26521 43846 379150 505000) 0 nil])
([nil nil ((#("  " 0 2 (part-side javascript ws-butler-chg chg)) . -857) (undo-tree-id174 . -2) 859) nil (26521 43846 379148 805000) 0 nil])
([nil nil ((416 . 417) (t 26520 17625 261250 943000)) nil (26521 43846 379147 232000) 0 nil])
([nil nil ((#("file" 0 4 (part-side javascript)) . 489) (undo-tree-id173 . -4)) nil (26521 43846 379146 203000) 0 nil])
([nil nil ((490 . 507) (nil ws-butler-chg chg 490 . 491) (nil part-side javascript 490 . 491) (nil part-token string 490 . 491) (nil font-lock-face web-mode-javascript-string-face 490 . 491) (489 . 491) (#("'" 0 1 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript ws-butler-chg chg)) . -489) (489 . 490)) nil (26521 43846 379144 336000) 0 nil])
([nil nil ((#("e" 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript ws-butler-chg chg)) . -505) (undo-tree-id171 . -1) (#("e" 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript ws-butler-chg chg)) . -506) (undo-tree-id172 . -1) 507) nil (26521 43846 379141 376000) 0 nil])
([nil nil ((505 . 506)) nil (26521 43846 379137 430000) 0 nil])
([nil nil ((506 . 513)) nil (26521 43846 379136 646000) 0 nil])
([nil nil ((#("  " 0 2 (part-side javascript)) . -931) (undo-tree-id169 . -2) (undo-tree-id170 . -2) 933 (t 26520 17652 307725 946000)) nil (26521 43846 379135 746000) 0 nil])
([nil nil ((#("// import _seq from './data/'+e+'.json';" 0 1 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment part-side javascript ws-butler-chg delete) 1 3 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 3 9 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 9 10 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 10 14 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 14 15 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 15 19 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 19 20 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 20 21 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 21 28 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 28 29 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 29 32 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 32 33 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 33 38 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 38 39 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 39 40 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -931) (undo-tree-id168 . -40) 971) nil (26521 43846 379133 297000) 0 nil])
([nil nil ((#("
" 0 1 (part-side javascript)) . -930) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) 931 (t 26520 17656 981025 900000)) nil (26521 43846 379131 210000) 0 nil])
([nil nil ((#("
" 0 1 (part-side javascript ws-butler-chg delete)) . -930) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) 931) nil (26521 43846 379127 270000) 0 nil])
([nil nil ((#("'./data/02-lavallee.json'" 0 1 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 1 24 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 24 25 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript)) . 489) (undo-tree-id157 . -25) (t 26520 17658 817679 428000)) nil (26521 43846 379122 87000) 0 nil])
([nil nil ((489 . 493)) nil (26521 43846 379120 414000) 0 nil])
([nil nil ((#("onMount(async () => {
  try {
    const promises = dataFiles.map(async (file) => {
      const response = await fetch(`/${file}`);
      if (!response.ok) {
        throw new Error(`Failed to fetch ${file}: ${response.statusText}`);
      }
      return response.json();
    });

    // Await all promises to resolve
    jsonData = await Promise.all(promises);
  } catch (error) {
    console.error('Error fetching JSON files:', error);
  }
});
" 0 1 (face web-mode-function-call-face part-side javascript) 1 7 (face web-mode-function-call-face part-side javascript) 7 8 (part-side javascript) 8 13 (face web-mode-keyword-face part-side javascript) 13 22 (part-side javascript) 22 24 (part-side javascript) 24 25 (face web-mode-keyword-face part-side javascript) 25 27 (face web-mode-keyword-face part-side javascript) 27 30 (part-side javascript) 30 34 (part-side javascript) 34 35 (face web-mode-keyword-face part-side javascript) 35 39 (face web-mode-keyword-face part-side javascript) 39 40 (part-side javascript) 40 48 (face web-mode-variable-name-face part-side javascript) 48 61 (part-side javascript) 61 64 (face web-mode-function-call-face part-side javascript) 64 65 (part-side javascript) 65 70 (face web-mode-keyword-face part-side javascript) 70 72 (part-side javascript) 72 76 (part-side javascript) 76 77 (part-side javascript) 77 83 (part-side javascript) 83 89 (part-side javascript) 89 90 (face web-mode-keyword-face part-side javascript) 90 94 (face web-mode-keyword-face part-side javascript) 94 95 (part-side javascript) 95 103 (face web-mode-variable-name-face part-side javascript) 103 106 (part-side javascript) 106 111 (face web-mode-keyword-face part-side javascript) 111 112 (part-side javascript) 112 117 (face web-mode-function-call-face part-side javascript) 117 118 (part-side javascript) 118 119 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 119 120 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 120 121 (font-lock-face web-mode-variable-name-face part-token string part-side javascript) 121 122 (part-token string part-side javascript block-token delimiter-beg block-side t block-controls 0 block-beg 0) 122 126 (part-token string part-side javascript block-side t) 126 127 (part-token string part-side javascript block-token delimiter-end block-end t block-side t) 127 128 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 128 131 (part-side javascript) 131 137 (part-side javascript) 137 138 (face web-mode-keyword-face part-side javascript) 138 139 (face web-mode-keyword-face part-side javascript) 139 157 (part-side javascript) 157 165 (part-side javascript) 165 166 (face web-mode-keyword-face part-side javascript) 166 170 (face web-mode-keyword-face part-side javascript) 170 171 (part-side javascript) 171 174 (face web-mode-keyword-face part-side javascript) 174 175 (part-side javascript) 175 180 (face web-mode-type-face part-side javascript) 180 181 (part-side javascript) 181 182 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 182 198 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 198 199 (font-lock-face web-mode-variable-name-face part-token string part-side javascript) 199 200 (part-token string part-side javascript block-token delimiter-beg block-side t block-controls 0 block-beg 0) 200 204 (part-token string part-side javascript block-side t) 204 205 (part-token string part-side javascript block-token delimiter-end block-end t block-side t) 205 207 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 207 208 (font-lock-face web-mode-variable-name-face part-token string part-side javascript) 208 209 (part-token string part-side javascript block-token delimiter-beg block-side t block-controls 0 block-beg 0) 209 228 (part-token string part-side javascript block-side t) 228 229 (part-token string part-side javascript block-token delimiter-end block-end t block-side t) 229 230 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 230 233 (part-side javascript) 233 239 (part-side javascript) 239 240 (part-side javascript) 240 241 (part-side javascript) 241 247 (part-side javascript) 247 248 (face web-mode-keyword-face part-side javascript) 248 253 (face web-mode-keyword-face part-side javascript) 253 263 (part-side javascript) 263 267 (face web-mode-function-call-face part-side javascript) 267 271 (part-side javascript) 271 275 (part-side javascript) 275 276 (part-side javascript) 276 279 (part-side javascript) 279 284 (part-side javascript) 284 285 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment part-side javascript) 285 316 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 316 317 (syntax-table (12) part-side javascript) 317 321 (part-side javascript) 321 322 (part-side javascript) 322 332 (part-side javascript) 332 337 (face web-mode-keyword-face part-side javascript) 337 346 (part-side javascript) 346 349 (face web-mode-function-call-face part-side javascript) 349 361 (part-side javascript) 361 363 (part-side javascript) 363 364 (part-side javascript) 364 365 (part-side javascript) 365 370 (face web-mode-keyword-face part-side javascript) 370 381 (part-side javascript) 381 385 (part-side javascript) 385 386 (part-side javascript) 386 393 (part-side javascript) 393 398 (face web-mode-function-call-face part-side javascript) 398 399 (part-side javascript) 399 400 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 400 420 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 420 425 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 425 426 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 426 427 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 427 437 (part-side javascript) 437 439 (part-side javascript) 439 440 (part-side javascript) 440 441 (part-side javascript) 441 442 (part-side javascript) 442 443 (part-side javascript) 443 444 (part-side javascript rear-nonsticky t) 444 445 (part-side javascript)) . -417) (undo-tree-id155 . -76) (undo-tree-id156 . -445) 862 (t 26520 17676 754217 172000)) nil (26521 43846 379119 591000) 0 nil])
([nil nil ((#("
" 0 1 (part-side javascript)) . -416) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) 417 (t 26520 17737 870436 717000)) nil (26521 43846 379117 9000) 0 nil])
([nil nil ((#("import { onMount } from 'svelte';" 0 6 (face web-mode-keyword-face part-side javascript) 6 7 (part-side javascript) 7 8 (part-side javascript block-token delimiter-beg block-side t block-controls 0 block-beg 0) 8 17 (part-side javascript block-side t) 17 18 (part-side javascript block-token delimiter-end block-end t block-side t) 18 19 (part-side javascript) 19 23 (face web-mode-keyword-face part-side javascript) 23 24 (part-side javascript) 24 25 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 25 31 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 31 32 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 32 33 (part-side javascript rear-nonsticky t)) . -63) (undo-tree-id151 . -33) 96 (t 26520 17738 650430 936000)) nil (26521 43846 379113 917000) 0 nil])
([nil nil ((#("
" 0 1 (syntax-table (15) part-side javascript)) . -62) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) 63 (t 26520 17748 550357 413000)) nil (26521 43846 379112 170000) 0 nil])
([nil nil ((#("fetch('/data/'+e+'.json')" 0 5 (block-side t part-side javascript) 5 7 (block-side t part-side javascript) 7 8 (block-side t part-side javascript) 8 24 (block-side t part-side javascript) 24 25 (block-side t part-side javascript rear-nonsticky t)) . 466) (undo-tree-id147 . -25) (t 26520 17749 237018 969000)) nil (26521 43846 379107 329000) 0 nil])
([nil nil ((#("02-lavallee.json" 0 11 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 11 12 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 12 16 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript)) . 346) (undo-tree-id146 . -16) (t 26520 17769 203536 456000)) nil (26521 43846 379105 710000) 0 nil])
([nil nil ((346 . 359)) nil (26521 43846 379104 86000) 0 nil])
([nil nil ((463 . 464) (t 26520 18132 570664 445000)) nil (26521 43846 379103 315000) 0 nil])
([nil nil ((#("s" 0 1 (block-side t part-side javascript ws-butler-chg chg)) . -463) (undo-tree-id145 . -1) 464) nil (26521 43846 379102 106000) 0 nil])
([nil nil ((#("seq" 0 1 (face web-mode-type-face part-side javascript) 1 3 (face web-mode-type-face part-side javascript)) . -329) (undo-tree-id144 . -3) 332) nil (26521 43846 379073 310000) 0 nil])
([nil nil ((329 . 335)) nil (26521 43846 379071 583000) 0 nil])
([nil nil ((473 . 474) (472 . 474) (#("[" 0 1 (block-side t part-side javascript ws-butler-chg chg)) . -472) (466 . 473) (t 26520 18145 93894 699000)) nil (26521 43846 379070 518000) 0 nil])
([nil nil ((#("sequences" 0 9 (block-side t part-side javascript)) . 455) (undo-tree-id143 . -9) (t 26520 18149 563857 853000)) nil (26521 43846 379068 786000) 0 nil])
([nil nil ((455 . 458)) nil (26521 43846 379067 293000) 0 nil])
([nil nil ((365 . 384) (#("console.log(seq)" 0 8 (part-side javascript) 8 11 (face web-mode-function-call-face part-side javascript) 11 16 (part-side javascript)) . 365) (undo-tree-id140 . -16) (undo-tree-id141 . -16) (undo-tree-id142 . -16) 381 (t 26520 18478 471087 368000)) nil (26521 43846 379066 306000) 0 nil])
([nil nil ((461 . 467)) nil (26521 43846 379063 385000) 0 nil])
([nil nil ((432 . 435) (t 26520 18494 104286 692000)) nil (26521 43846 379062 660000) 0 nil])
([nil nil ((#("  " 0 2 (part-side javascript ws-butler-chg chg)) . 433) (undo-tree-id138 . -2) (undo-tree-id139 . -2)) nil (26521 43846 379061 671000) 0 nil])
([nil nil ((#("
" 0 1 (part-side javascript ws-butler-chg chg)) . -432) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) 433) nil (26521 43846 379059 615000) 0 nil])
([nil nil ((485 . 486)) nil (26521 43846 379056 900000) 0 nil])
([nil nil ((498 . 505) (497 . 499) (#("(" 0 1 (part-side javascript ws-butler-chg chg)) . -497) (486 . 498)) nil (26521 43846 379056 84000) 0 nil])
([nil nil ((#("e" 0 1 (part-side javascript block-side t)) . -455) (undo-tree-id134 . -1) 456 (t 26520 18516 184097 150000)) nil (26521 43846 379054 514000) 0 nil])
([nil nil ((462 . 463) (461 . 463) (#("[" 0 1 (block-side t part-side javascript ws-butler-chg chg)) . -461) (455 . 462)) nil (26521 43846 379052 693000) 0 nil])
([nil nil ((464 . 466) (#("[" 0 1 (block-side t part-side javascript ws-butler-chg chg)) . -464) (464 . 465)) nil (26521 43846 379051 236000) 0 nil])
([nil nil ((466 . 470) (465 . 467) (#("'" 0 1 (block-side t part-side javascript ws-butler-chg chg)) . -465) (465 . 466)) nil (26521 43846 379049 750000) 0 nil])
([nil nil ((496 . 499) (495 . 497) (#("'" 0 1 (block-side t part-side javascript ws-butler-chg chg)) . -495) (495 . 496) (494 . 496) (#("[" 0 1 (block-side t part-side javascript ws-butler-chg chg)) . -494) (494 . 495)) nil (26521 43846 379048 4000) 0 nil])
([nil nil ((#("seq" 0 3 (block-side t part-side javascript)) . -496) (undo-tree-id132 . -3) (undo-tree-id133 . -3) 499 (t 26520 18547 240496 682000)) nil (26521 43846 379045 886000) 0 nil])
([nil nil ((496 . 502)) nil (26521 43846 379043 573000) 0 nil])
([nil nil ((17 . 1248) (#("VideoDashboard from './VideoDashboard.svelte'

const videoId = 'Q_FNGS4liw0';
const players = ['01-goalie','02-lavallee','03-deraspe','04-beland','05-duchesne','06-gauthier','07-dion','08-drolet','10-parent','11-chaput','12-pelletier','13-trudelle','14-bergeron','15-rochette','16-dorval','17-gauthier']

import shifts from './data/player_shifts';
// console.log(seq)

const persons = []
players.forEach((e, i) => {
  persons.push({name: shifts[i]['name'], sequences: shifts[i]['shifts']})
});

console.log(persons)
// const persons = [
//   { name: '01-lavallee', sequences: seq },
//   { name: 'Person 2', sequences: [{ label: 'Opening', start: 60 }, { label: 'Interview', start: 120 }] },
// ];
//
</script>

<main>
  <VideoDashboard {videoId} {persons} />" 0 14 (face web-mode-type-face part-side javascript) 14 15 (part-side javascript) 15 19 (face web-mode-keyword-face part-side javascript) 19 20 (part-side javascript) 20 21 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 21 44 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 44 45 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 45 46 (syntax-table (15) part-side javascript) 46 47 (part-side javascript) 47 52 (face web-mode-keyword-face part-side javascript) 52 53 (part-side javascript) 53 60 (face web-mode-variable-name-face part-side javascript) 60 63 (part-side javascript) 63 64 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 64 74 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 74 75 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript rear-nonsticky t) 75 76 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 76 77 (part-side javascript) 77 78 (part-side javascript) 78 83 (face web-mode-keyword-face part-side javascript) 83 84 (part-side javascript) 84 91 (face web-mode-variable-name-face part-side javascript) 91 93 (part-side javascript) 93 94 (part-side javascript) 94 95 (part-side javascript) 95 96 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 96 105 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 105 106 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 106 107 (part-side javascript) 107 108 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 108 119 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 119 120 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 120 121 (part-side javascript) 121 122 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 122 132 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 132 133 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 133 134 (part-side javascript) 134 135 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 135 144 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 144 145 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 145 146 (part-side javascript) 146 147 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 147 158 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 158 159 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 159 160 (part-side javascript) 160 161 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 161 172 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 172 173 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 173 174 (part-side javascript) 174 175 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 175 182 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 182 183 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 183 184 (part-side javascript) 184 185 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 185 194 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 194 195 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 195 196 (part-side javascript) 196 197 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 197 206 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 206 207 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 207 208 (part-side javascript) 208 209 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 209 218 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 218 219 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 219 220 (part-side javascript) 220 221 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 221 233 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 233 234 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 234 235 (part-side javascript) 235 236 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 236 247 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 247 248 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 248 249 (part-side javascript) 249 250 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 250 261 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 261 262 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 262 263 (part-side javascript) 263 264 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 264 275 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 275 276 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 276 277 (part-side javascript) 277 278 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 278 287 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 287 288 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 288 289 (part-side javascript) 289 290 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 290 301 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 301 302 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript rear-nonsticky t) 302 303 (part-side javascript) 303 304 (part-side javascript) 304 305 (part-side javascript) 305 306 (face web-mode-keyword-face part-side javascript) 306 311 (face web-mode-keyword-face part-side javascript) 311 312 (part-side javascript) 312 318 (face web-mode-type-face part-side javascript) 318 319 (part-side javascript) 319 323 (face web-mode-keyword-face part-side javascript) 323 324 (part-side javascript) 324 325 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 325 326 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 326 327 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 327 332 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 332 345 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 345 346 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 346 347 (part-side javascript) 347 348 (part-side javascript) 348 349 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment part-side javascript) 349 359 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 359 362 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 362 367 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 367 368 (syntax-table (12) part-side javascript) 368 369 (part-side javascript) 369 374 (face web-mode-keyword-face part-side javascript) 374 375 (part-side javascript) 375 382 (face web-mode-variable-name-face part-side javascript) 382 385 (part-side javascript) 385 386 (part-side javascript rear-nonsticky t) 386 387 (part-side javascript) 387 388 (part-side javascript) 388 389 (part-side javascript) 389 396 (part-side javascript) 396 403 (face web-mode-function-call-face part-side javascript) 403 404 (part-side javascript) 404 405 (part-side javascript) 405 409 (part-side javascript) 409 410 (part-side javascript) 410 411 (part-side javascript) 411 414 (part-side javascript) 414 415 (part-side javascript) 415 416 (part-side javascript) 416 418 (part-side javascript) 418 426 (part-side javascript) 426 430 (face web-mode-function-call-face part-side javascript) 430 431 (part-side javascript) 431 432 (block-token delimiter-beg block-side t block-controls 0 block-beg 0 part-side javascript) 432 436 (block-side t part-side javascript) 436 438 (block-side t part-side javascript) 438 444 (block-side t part-side javascript) 444 446 (block-side t part-side javascript) 446 447 (block-side t part-side javascript) 447 448 (block-side t part-side javascript) 448 453 (block-side t part-side javascript) 453 454 (block-side t part-side javascript) 454 455 (block-side t part-side javascript) 455 456 (block-side t part-side javascript) 456 457 (block-side t part-side javascript) 457 460 (block-side t part-side javascript) 460 466 (block-side t part-side javascript) 466 467 (block-side t part-side javascript) 467 468 (block-side t part-side javascript) 468 474 (block-side t part-side javascript) 474 476 (block-side t part-side javascript) 476 477 (block-side t part-side javascript) 477 478 (block-side t part-side javascript) 478 479 (block-side t part-side javascript) 479 485 (block-side t part-side javascript) 485 486 (block-side t part-side javascript) 486 487 (block-side t part-side javascript) 487 488 (block-token delimiter-end block-end t block-side t part-side javascript) 488 489 (part-side javascript) 489 490 (part-side javascript) 490 491 (part-side javascript) 491 493 (part-side javascript) 493 494 (part-side javascript) 494 503 (part-side javascript) 503 506 (face web-mode-function-call-face part-side javascript) 506 514 (part-side javascript) 514 515 (part-side javascript) 515 516 (part-side javascript) 516 517 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment part-side javascript) 517 519 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 519 524 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 524 525 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 525 532 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 532 536 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 536 537 (syntax-table (12) part-side javascript) 537 538 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment part-side javascript) 538 542 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 542 543 (part-token comment part-side javascript block-token delimiter-beg block-side t block-controls 0 block-beg 0) 543 544 (part-token comment part-side javascript block-side t) 544 548 (part-token comment part-side javascript block-side t) 548 565 (part-token comment part-side javascript block-side t) 565 574 (part-token comment part-side javascript block-side t) 574 580 (part-token comment part-side javascript block-side t) 580 581 (part-token comment part-side javascript block-token delimiter-end block-end t block-side t) 581 582 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 582 583 (syntax-table (12) part-side javascript) 583 584 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment part-side javascript) 584 588 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 588 589 (part-token comment part-side javascript block-token delimiter-beg block-side t block-controls 0 block-beg 0) 589 590 (part-token comment part-side javascript block-side t) 590 594 (part-token comment part-side javascript block-side t) 594 604 (part-token comment part-side javascript block-side t) 604 605 (part-token comment part-side javascript block-side t) 605 608 (part-token comment part-side javascript block-side t) 608 617 (part-token comment part-side javascript block-side t) 617 622 (part-token comment part-side javascript block-side t) 622 627 (part-token comment part-side javascript block-side t) 627 640 (part-token comment part-side javascript block-side t) 640 645 (part-token comment part-side javascript block-side t) 645 647 (part-token comment part-side javascript block-side t) 647 649 (part-token comment part-side javascript block-side t) 649 655 (part-token comment part-side javascript block-side t) 655 660 (part-token comment part-side javascript block-side t) 660 672 (part-token comment part-side javascript block-side t) 672 673 (part-token comment part-side javascript block-side t) 673 675 (part-token comment part-side javascript block-side t) 675 680 (part-token comment part-side javascript block-side t) 680 682 (part-token comment part-side javascript block-side t) 682 685 (part-token comment part-side javascript block-side t) 685 689 (part-token comment part-side javascript block-side t) 689 690 (part-token comment part-side javascript block-token delimiter-end block-end t block-side t) 690 691 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 691 692 (syntax-table (12) part-side javascript) 692 693 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment part-side javascript) 693 697 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 697 698 (syntax-table (12) part-side javascript) 698 699 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment part-side javascript) 699 700 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 700 701 (syntax-table (12) part-side javascript) 701 702 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "script") 702 703 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "script") 703 709 (font-lock-face web-mode-html-tag-face tag-type end tag-name "script") 709 710 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "script") 712 713 (font-lock-face web-mode-html-tag-bracket-face tag-beg 16 tag-type start tag-name "main") 713 717 (font-lock-face web-mode-html-tag-face tag-type start tag-name "main") 717 718 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "main") 721 722 (font-lock-face web-mode-html-tag-bracket-face tag-beg 24 tag-type void tag-name "videodashboard") 722 736 (font-lock-face web-mode-html-tag-face tag-type void tag-name "videodashboard") 736 737 (tag-type void tag-name "videodashboard") 737 738 (font-lock-face web-mode-block-delimiter-face tag-type void tag-name "videodashboard" block-token delimiter-beg block-side t block-controls 0 block-beg 0) 738 745 (face web-mode-variable-name-face tag-type void tag-name "videodashboard" block-side t) 745 746 (font-lock-face web-mode-block-delimiter-face tag-type void tag-name "videodashboard" block-token delimiter-end block-end t block-side t) 746 747 (tag-type void tag-name "videodashboard") 747 748 (font-lock-face web-mode-block-delimiter-face tag-type void tag-name "videodashboard" block-token delimiter-beg block-side t block-controls 0 block-beg 0) 748 755 (face web-mode-variable-name-face tag-type void tag-name "videodashboard" block-side t) 755 756 (font-lock-face web-mode-block-delimiter-face tag-type void tag-name "videodashboard" block-token delimiter-end block-end t block-side t) 756 757 (tag-type void tag-name "videodashboard") 757 758 (font-lock-face web-mode-html-tag-bracket-face tag-type void tag-name "videodashboard") 758 759 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type void tag-name "videodashboard")) . 17) (undo-tree-id100 . -91) (undo-tree-id101 . -405) (undo-tree-id102 . -403) (undo-tree-id103 . -405) (undo-tree-id104 . -410) (undo-tree-id105 . -405) (undo-tree-id106 . -416) (undo-tree-id107 . -416) (undo-tree-id108 . -407) (undo-tree-id109 . -406) (undo-tree-id110 . -407) (undo-tree-id111 . -415) (undo-tree-id112 . -409) (undo-tree-id113 . -415) (undo-tree-id114 . -415) (undo-tree-id115 . -415) (undo-tree-id116 . -415) (undo-tree-id117 . -415) (undo-tree-id118 . -348) (undo-tree-id119 . -368) (undo-tree-id120 . -368) (undo-tree-id121 . -516) (undo-tree-id122 . -516) (undo-tree-id123 . -507) (undo-tree-id124 . -506) (undo-tree-id125 . -507) (undo-tree-id126 . -515) (undo-tree-id127 . -514) (undo-tree-id128 . -489) (undo-tree-id129 . -489) (undo-tree-id130 . -84) (undo-tree-id131 . -84) (t 26520 18550 460468 951000)) nil (26521 43846 379041 619000) 0 nil])
([nil nil ((930 . 1352) (#("select bind:value={selectedPlayer}>
  {#each persons as person}
    <option value={person}>
      <img src={person.image} alt={person.name} width=\"20\" height=\"20\" />
      {person.name}
    </option>
  {/each}
</select>

<main>
  {#if selectedPlayer}
    <VideoDashboard {videoId} persons={[selectedPlayer]} />
  {/if}" 0 6 (font-lock-face web-mode-html-tag-face tag-type start tag-name "select") 6 7 (tag-type start tag-name "select") 7 8 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "select" tag-attr t tag-attr-beg 0) 8 17 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "select" tag-attr t) 17 18 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "select" tag-attr t) 18 19 (tag-type start tag-name "select" tag-attr t block-token delimiter-beg block-side t block-controls 0 block-beg 0) 19 33 (tag-type start tag-name "select" tag-attr t block-side t) 33 34 (tag-type start tag-name "select" tag-attr-end 10 tag-attr t block-token delimiter-end block-end t block-side t) 34 35 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "select") 38 39 (block-token delimiter-beg block-side t block-controls 0 block-beg 0) 39 40 (block-token delimiter-beg block-side t) 40 62 (block-side t) 62 63 (block-token delimiter-end block-end t block-side t) 68 69 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "option") 69 75 (font-lock-face web-mode-html-tag-face tag-type start tag-name "option") 75 76 (tag-type start tag-name "option") 76 77 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "option" tag-attr t tag-attr-beg 0) 77 81 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "option" tag-attr t) 81 82 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "option" tag-attr t) 82 83 (tag-type start tag-name "option" tag-attr t block-token delimiter-beg block-side t block-controls 0 block-beg 0) 83 89 (tag-type start tag-name "option" tag-attr t block-side t) 89 90 (tag-type start tag-name "option" tag-attr-end 5 tag-attr t block-token delimiter-end block-end t block-side t) 90 91 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "option") 98 99 (font-lock-face web-mode-html-tag-bracket-face tag-beg 25 tag-type void tag-name "img") 99 102 (font-lock-face web-mode-html-tag-face tag-type void tag-name "img") 102 103 (tag-type void tag-name "img") 103 104 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr t tag-attr-beg 0) 104 106 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr t) 106 107 (font-lock-face web-mode-html-attr-equal-face tag-type void tag-name "img" tag-attr t) 107 108 (tag-type void tag-name "img" tag-attr t block-token delimiter-beg block-side t block-controls 0 block-beg 0) 108 120 (tag-type void tag-name "img" tag-attr t block-side t) 120 121 (tag-type void tag-name "img" tag-attr-end 3 tag-attr t block-token delimiter-end block-end t block-side t) 121 122 (tag-type void tag-name "img") 122 123 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr t tag-attr-beg 0) 123 125 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr t) 125 126 (font-lock-face web-mode-html-attr-equal-face tag-type void tag-name "img" tag-attr t) 126 127 (tag-type void tag-name "img" tag-attr t block-token delimiter-beg block-side t block-controls 0 block-beg 0) 127 138 (tag-type void tag-name "img" tag-attr t block-side t) 138 139 (tag-type void tag-name "img" tag-attr-end 3 tag-attr t block-token delimiter-end block-end t block-side t) 139 140 (tag-type void tag-name "img") 140 141 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr t tag-attr-beg 0) 141 145 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr t) 145 146 (font-lock-face web-mode-html-attr-equal-face tag-type void tag-name "img" tag-attr t) 146 147 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "img" tag-attr t) 147 149 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "img" tag-attr t) 149 150 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "img" tag-attr-end 5 tag-attr t) 150 151 (tag-type void tag-name "img") 151 152 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr t tag-attr-beg 0) 152 157 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr t) 157 158 (font-lock-face web-mode-html-attr-equal-face tag-type void tag-name "img" tag-attr t) 158 159 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "img" tag-attr t) 159 161 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "img" tag-attr t) 161 162 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "img" tag-attr-end 6 tag-attr t) 162 163 (tag-type void tag-name "img") 163 164 (font-lock-face web-mode-html-tag-bracket-face tag-type void tag-name "img") 164 165 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type void tag-name "img") 172 173 (block-token delimiter-beg block-side t block-controls 0 block-beg 0) 173 184 (block-side t) 184 185 (block-token delimiter-end block-end t block-side t) 190 191 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "option") 191 192 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "option") 192 198 (font-lock-face web-mode-html-tag-face tag-type end tag-name "option") 198 199 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "option") 202 203 (block-token delimiter-beg block-side t block-controls 0 block-beg 0) 203 204 (block-token delimiter-beg block-side t) 204 208 (block-side t) 208 209 (block-token delimiter-end block-end t block-side t) 210 211 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "select") 211 212 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "select") 212 218 (font-lock-face web-mode-html-tag-face tag-type end tag-name "select") 218 219 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "select") 221 222 (font-lock-face web-mode-html-tag-bracket-face tag-beg 16 tag-type start tag-name "main") 222 226 (font-lock-face web-mode-html-tag-face tag-type start tag-name "main") 226 227 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "main") 230 231 (block-token delimiter-beg block-side t block-controls 0 block-beg 0) 231 232 (block-token delimiter-beg block-side t) 232 249 (block-side t) 249 250 (block-token delimiter-end block-end t block-side t) 255 256 (font-lock-face web-mode-html-tag-bracket-face tag-beg 25 tag-type void tag-name "videodashboard") 256 270 (font-lock-face web-mode-html-tag-face tag-type void tag-name "videodashboard") 270 271 (tag-type void tag-name "videodashboard") 271 272 (tag-type void tag-name "videodashboard" block-token delimiter-beg block-side t block-controls 0 block-beg 0) 272 279 (tag-type void tag-name "videodashboard" block-side t) 279 280 (tag-type void tag-name "videodashboard" block-token delimiter-end block-end t block-side t) 280 281 (tag-type void tag-name "videodashboard") 281 282 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "videodashboard" tag-attr t tag-attr-beg 0) 282 288 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "videodashboard" tag-attr t) 288 289 (font-lock-face web-mode-html-attr-equal-face tag-type void tag-name "videodashboard" tag-attr t) 289 290 (tag-type void tag-name "videodashboard" tag-attr t block-token delimiter-beg block-side t block-controls 0 block-beg 0) 290 306 (tag-type void tag-name "videodashboard" tag-attr t block-side t) 306 307 (tag-type void tag-name "videodashboard" tag-attr-end 7 tag-attr t block-token delimiter-end block-end t block-side t) 307 308 (tag-type void tag-name "videodashboard") 308 309 (font-lock-face web-mode-html-tag-bracket-face tag-type void tag-name "videodashboard") 309 310 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type void tag-name "videodashboard") 313 314 (block-token delimiter-beg block-side t block-controls 0 block-beg 0) 314 315 (block-token delimiter-beg block-side t) 315 317 (block-side t) 317 318 (block-token delimiter-end block-end t block-side t)) . 930) (undo-tree-id96 . -220) (undo-tree-id97 . -220) (undo-tree-id98 . -220) (undo-tree-id99 . -220) (t 26521 34817 714745 407000)) nil (26521 43846 379015 540000) 0 nil])
([nil nil ((985 . 1073) (#("<select bind:value={selectedPlayer}>
    {#each persons as person}
      <option value={person}>
        <img src={person.image} alt={person.name} width=\"20\" height=\"20\" />
        {person.name}
      </option>
    {/each}
  </select>

  {#if selectedPlayer}
    <VideoDashboard {videoId} persons={[selectedPlayer]}" 0 1 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "select" invisible nil) 1 7 (font-lock-face web-mode-html-tag-face tag-type start tag-name "select" invisible nil) 7 8 (tag-type start tag-name "select" invisible nil) 8 9 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "select" tag-attr t tag-attr-beg 0 invisible nil) 9 18 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "select" tag-attr t invisible nil) 18 19 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "select" tag-attr t invisible nil) 19 20 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "select" tag-attr t block-token delimiter-beg block-side t block-controls 0 block-beg 0 invisible nil) 20 34 (face web-mode-variable-name-face tag-type start tag-name "select" tag-attr t block-side t invisible nil) 34 35 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "select" tag-attr-end 10 tag-attr t block-token delimiter-end block-end t block-side t invisible nil) 35 36 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "select" invisible nil) 36 41 (invisible nil) 41 42 (font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t block-controls 0 block-beg 0 invisible nil) 42 43 (font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t invisible nil) 43 47 (face web-mode-block-control-face block-side t invisible nil) 47 48 (block-side t invisible nil) 48 55 (face web-mode-variable-name-face block-side t invisible nil) 55 56 (block-side t invisible nil) 56 58 (face web-mode-keyword-face block-side t invisible nil) 58 59 (block-side t invisible nil) 59 65 (face web-mode-variable-name-face block-side t invisible nil) 65 66 (font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-end t block-side t invisible nil) 66 73 (invisible nil) 73 74 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "option" invisible nil) 74 80 (font-lock-face web-mode-html-tag-face tag-type start tag-name "option" invisible nil) 80 81 (tag-type start tag-name "option" invisible nil) 81 82 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "option" tag-attr t tag-attr-beg 0 invisible nil) 82 86 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "option" tag-attr t invisible nil) 86 87 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "option" tag-attr t invisible nil) 87 88 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "option" tag-attr t block-token delimiter-beg block-side t block-controls 0 block-beg 0 invisible nil) 88 94 (face web-mode-variable-name-face tag-type start tag-name "option" tag-attr t block-side t invisible nil) 94 95 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "option" tag-attr-end 5 tag-attr t block-token delimiter-end block-end t block-side t invisible nil) 95 96 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "option" invisible nil) 96 105 (invisible nil) 105 106 (font-lock-face web-mode-html-tag-bracket-face tag-beg 25 tag-type void tag-name "img" invisible nil) 106 109 (font-lock-face web-mode-html-tag-face tag-type void tag-name "img" invisible nil) 109 110 (tag-type void tag-name "img" invisible nil) 110 111 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr t tag-attr-beg 0 invisible nil) 111 113 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr t invisible nil) 113 114 (font-lock-face web-mode-html-attr-equal-face tag-type void tag-name "img" tag-attr t invisible nil) 114 115 (font-lock-face web-mode-block-delimiter-face tag-type void tag-name "img" tag-attr t block-token delimiter-beg block-side t block-controls 0 block-beg 0 invisible nil) 115 127 (face web-mode-variable-name-face tag-type void tag-name "img" tag-attr t block-side t invisible nil) 127 128 (font-lock-face web-mode-block-delimiter-face tag-type void tag-name "img" tag-attr-end 3 tag-attr t block-token delimiter-end block-end t block-side t invisible nil) 128 129 (tag-type void tag-name "img" invisible nil) 129 130 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr t tag-attr-beg 0 invisible nil) 130 132 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr t invisible nil) 132 133 (font-lock-face web-mode-html-attr-equal-face tag-type void tag-name "img" tag-attr t invisible nil) 133 134 (font-lock-face web-mode-block-delimiter-face tag-type void tag-name "img" tag-attr t block-token delimiter-beg block-side t block-controls 0 block-beg 0 invisible nil) 134 145 (face web-mode-variable-name-face tag-type void tag-name "img" tag-attr t block-side t invisible nil) 145 146 (font-lock-face web-mode-block-delimiter-face tag-type void tag-name "img" tag-attr-end 3 tag-attr t block-token delimiter-end block-end t block-side t invisible nil) 146 147 (tag-type void tag-name "img" invisible nil) 147 148 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr t tag-attr-beg 0 invisible nil) 148 152 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr t invisible nil) 152 153 (font-lock-face web-mode-html-attr-equal-face tag-type void tag-name "img" tag-attr t invisible nil) 153 154 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "img" tag-attr t invisible nil) 154 156 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "img" tag-attr t invisible nil) 156 157 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "img" tag-attr-end 5 tag-attr t invisible nil) 157 158 (tag-type void tag-name "img" invisible nil) 158 159 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr t tag-attr-beg 0 invisible nil) 159 164 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr t invisible nil) 164 165 (font-lock-face web-mode-html-attr-equal-face tag-type void tag-name "img" tag-attr t invisible nil) 165 166 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "img" tag-attr t invisible nil) 166 168 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "img" tag-attr t invisible nil) 168 169 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "img" tag-attr-end 6 tag-attr t invisible nil) 169 170 (tag-type void tag-name "img" invisible nil) 170 171 (font-lock-face web-mode-html-tag-bracket-face tag-type void tag-name "img" invisible nil) 171 172 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type void tag-name "img" invisible nil) 172 181 (invisible nil) 181 182 (font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t block-controls 0 block-beg 0 invisible nil) 182 193 (face web-mode-variable-name-face block-side t invisible nil) 193 194 (font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-end t block-side t invisible nil) 194 201 (invisible nil) 201 202 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "option" invisible nil) 202 203 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "option" invisible nil) 203 209 (font-lock-face web-mode-html-tag-face tag-type end tag-name "option" invisible nil) 209 210 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "option" invisible nil) 210 215 (invisible nil) 215 216 (font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t block-controls 0 block-beg 0 invisible nil) 216 217 (font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t invisible nil) 217 221 (face web-mode-block-control-face block-side t invisible nil) 221 222 (font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-end t block-side t invisible nil) 222 225 (invisible nil) 225 226 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "select" invisible nil) 226 227 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "select" invisible nil) 227 233 (font-lock-face web-mode-html-tag-face tag-type end tag-name "select" invisible nil) 233 234 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "select" invisible nil) 234 238 (invisible nil) 238 239 (font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t block-controls 0 block-beg 0 invisible nil) 239 240 (font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t invisible nil) 240 242 (face web-mode-block-control-face block-side t invisible nil) 242 243 (block-side t invisible nil) 243 257 (face web-mode-variable-name-face block-side t invisible nil) 257 258 (font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-end t block-side t invisible nil) 258 263 (invisible nil) 263 264 (font-lock-face web-mode-html-tag-bracket-face tag-beg 25 tag-type void tag-name "videodashboard" invisible nil) 264 278 (font-lock-face web-mode-html-tag-face tag-type void tag-name "videodashboard" invisible nil) 278 279 (tag-type void tag-name "videodashboard" invisible nil) 279 280 (font-lock-face web-mode-block-delimiter-face tag-type void tag-name "videodashboard" block-token delimiter-beg block-side t block-controls 0 block-beg 0 invisible nil) 280 287 (face web-mode-variable-name-face tag-type void tag-name "videodashboard" block-side t invisible nil) 287 288 (font-lock-face web-mode-block-delimiter-face tag-type void tag-name "videodashboard" block-token delimiter-end block-end t block-side t invisible nil) 288 289 (tag-type void tag-name "videodashboard" invisible nil) 289 290 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "videodashboard" tag-attr t tag-attr-beg 0 invisible nil) 290 296 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "videodashboard" tag-attr t invisible nil) 296 297 (font-lock-face web-mode-html-attr-equal-face tag-type void tag-name "videodashboard" tag-attr t invisible nil) 297 298 (font-lock-face web-mode-block-delimiter-face tag-type void tag-name "videodashboard" tag-attr t block-token delimiter-beg block-side t block-controls 0 block-beg 0 invisible nil) 298 299 (tag-type void tag-name "videodashboard" tag-attr t block-side t invisible nil) 299 313 (face web-mode-variable-name-face tag-type void tag-name "videodashboard" tag-attr t block-side t invisible nil) 313 314 (tag-type void tag-name "videodashboard" tag-attr t block-side t invisible nil) 314 315 (font-lock-face web-mode-block-delimiter-face tag-type void tag-name "videodashboard" tag-attr-end 7 tag-attr t block-token delimiter-end block-end t block-side t invisible nil)) . 985) 928 (t 26521 35528 823293 251000)) nil (26521 43846 378930 302000) 0 nil])
([nil nil ((1134 . 1135) (t 26521 41469 584991 95000)) nil (26521 43846 378929 345000) 0 nil])
([nil nil ((#("B" 0 1 (ws-butler-chg chg invisible nil)) . 1134) (undo-tree-id95 . -1)) nil (26521 43846 378928 434000) 0 nil])
([nil nil ((44 . 4232) (#("import VideoDashboard from './VideoDashboard.svelte';

const videoId = 'Q_FNGS4liw0';
const players = ['01-goalie','02-lavallee','03-deraspe','04-beland','05-duchesne','06-gauthier','07-dion','08-drolet','10-parent','11-chaput','12-pelletier','13-trudelle','14-bergeron','15-rochette','16-dorval','17-gauthier']

import shifts from './data/player_shifts';
// console.log(seq)

let selectedPlayer = null;
let persons = [];

players.forEach((e, i) => {
  persons.push({
    name: shifts[i]['name'],
    sequences: shifts[i]['shifts'],
    image: `/images/players/${e}.png`
  });
});

onMount(() => {
  if (persons.length > 0) {
    selectedPlayer = persons[0];
  }
});

console.log(persons)
// const persons = [
//   { name: '01-lavallee', sequences: seq },
//   { name: 'Person 2', sequences: [{ label: 'Opening', start: 60 }, { label: 'Interview', start: 120 }] },
// ];
//
</script>

<div style=\"display: flex; align-items: flex-start;\">
  {#if selectedPlayer}
    <VideoDashboard {videoId} persons={persons} bind:selectedPlayer /" 0 6 (face web-mode-keyword-face part-side javascript invisible nil) 6 7 (part-side javascript invisible nil) 7 21 (face web-mode-type-face part-side javascript invisible nil) 21 22 (part-side javascript invisible nil) 22 26 (face web-mode-keyword-face part-side javascript invisible nil) 26 27 (part-side javascript invisible nil) 27 28 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript invisible nil) 28 51 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript invisible nil) 51 52 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript invisible nil) 52 55 (part-side javascript invisible nil) 55 60 (face web-mode-keyword-face part-side javascript invisible nil) 60 61 (part-side javascript invisible nil) 61 68 (face web-mode-variable-name-face part-side javascript invisible nil) 68 71 (part-side javascript invisible nil) 71 72 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript invisible nil) 72 83 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript invisible nil) 83 84 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript invisible nil) 84 86 (part-side javascript invisible nil) 86 91 (face web-mode-keyword-face part-side javascript invisible nil) 91 92 (part-side javascript invisible nil) 92 99 (face web-mode-variable-name-face part-side javascript invisible nil) 99 103 (part-side javascript invisible nil) 103 104 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript invisible nil) 104 113 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript invisible nil) 113 114 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript invisible nil) 114 115 (part-side javascript invisible nil) 115 116 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript invisible nil) 116 127 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript invisible nil) 127 128 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript invisible nil) 128 129 (part-side javascript invisible nil) 129 130 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript invisible nil) 130 140 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript invisible nil) 140 141 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript invisible nil) 141 142 (part-side javascript invisible nil) 142 143 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript invisible nil) 143 152 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript invisible nil) 152 153 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript invisible nil) 153 154 (part-side javascript invisible nil) 154 155 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript invisible nil) 155 166 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript invisible nil) 166 167 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript invisible nil) 167 168 (part-side javascript invisible nil) 168 169 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript invisible nil) 169 180 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript invisible nil) 180 181 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript invisible nil) 181 182 (part-side javascript invisible nil) 182 183 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript invisible nil) 183 190 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript invisible nil) 190 191 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript invisible nil) 191 192 (part-side javascript invisible nil) 192 193 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript invisible nil) 193 202 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript invisible nil) 202 203 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript invisible nil) 203 204 (part-side javascript invisible nil) 204 205 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript invisible nil) 205 214 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript invisible nil) 214 215 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript invisible nil) 215 216 (part-side javascript invisible nil) 216 217 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript invisible nil) 217 226 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript invisible nil) 226 227 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript invisible nil) 227 228 (part-side javascript invisible nil) 228 229 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript invisible nil) 229 241 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript invisible nil) 241 242 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript invisible nil) 242 243 (part-side javascript invisible nil) 243 244 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript invisible nil) 244 255 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript invisible nil) 255 256 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript invisible nil) 256 257 (part-side javascript invisible nil) 257 258 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript invisible nil) 258 269 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript invisible nil) 269 270 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript invisible nil) 270 271 (part-side javascript invisible nil) 271 272 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript invisible nil) 272 283 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript invisible nil) 283 284 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript invisible nil) 284 285 (part-side javascript invisible nil) 285 286 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript invisible nil) 286 295 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript invisible nil) 295 296 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript invisible nil) 296 297 (part-side javascript invisible nil) 297 298 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript invisible nil) 298 309 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript invisible nil) 309 310 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript invisible nil) 310 313 (part-side javascript invisible nil) 313 319 (face web-mode-keyword-face part-side javascript invisible nil) 319 320 (part-side javascript invisible nil) 320 326 (face web-mode-type-face part-side javascript invisible nil) 326 327 (part-side javascript invisible nil) 327 331 (face web-mode-keyword-face part-side javascript invisible nil) 331 332 (part-side javascript invisible nil) 332 333 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript invisible nil) 333 353 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript invisible nil) 353 354 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript invisible nil) 354 356 (part-side javascript invisible nil) 356 357 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment part-side javascript invisible nil) 357 367 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript invisible nil) 367 370 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript invisible nil) 370 375 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript invisible nil) 375 376 (syntax-table (12) part-side javascript invisible nil) 376 377 (part-side javascript invisible nil) 377 380 (face web-mode-keyword-face part-side javascript invisible nil) 380 381 (part-side javascript invisible nil) 381 395 (face web-mode-variable-name-face part-side javascript invisible nil) 395 398 (part-side javascript invisible nil) 398 402 (face web-mode-constant-face part-side javascript invisible nil) 402 404 (part-side javascript invisible nil) 404 407 (face web-mode-keyword-face part-side javascript invisible nil) 407 408 (part-side javascript invisible nil) 408 415 (face web-mode-variable-name-face part-side javascript invisible nil) 415 431 (part-side javascript invisible nil) 431 438 (face web-mode-function-call-face part-side javascript invisible nil) 438 461 (part-side javascript invisible nil) 461 465 (face web-mode-function-call-face part-side javascript invisible nil) 465 472 (part-side javascript invisible nil) 472 476 (face web-mode-variable-name-face part-side javascript invisible nil) 476 488 (part-side javascript invisible nil) 488 489 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript invisible nil) 489 493 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript invisible nil) 493 494 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript invisible nil) 494 501 (part-side javascript invisible nil) 501 510 (face web-mode-variable-name-face part-side javascript invisible nil) 510 522 (part-side javascript invisible nil) 522 523 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript invisible nil) 523 529 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript invisible nil) 529 530 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript invisible nil) 530 537 (part-side javascript invisible nil) 537 542 (face web-mode-variable-name-face part-side javascript invisible nil) 542 544 (part-side javascript invisible nil) 544 545 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript invisible nil) 545 561 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript invisible nil) 561 562 (font-lock-face web-mode-variable-name-face part-token string part-side javascript invisible nil) 562 563 (font-lock-face web-mode-block-delimiter-face part-token string part-side javascript block-token delimiter-beg block-side t block-controls 0 block-beg 0 invisible nil) 563 564 (face web-mode-variable-name-face part-token string part-side javascript block-side t invisible nil) 564 565 (font-lock-face web-mode-block-delimiter-face part-token string part-side javascript block-token delimiter-end block-end t block-side t invisible nil) 565 566 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript invisible nil) 566 570 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript invisible nil) 570 571 (syntax-table (15) part-side javascript invisible nil) 571 582 (part-side javascript invisible nil) 582 589 (face web-mode-function-call-face part-side javascript invisible nil) 589 600 (part-side javascript invisible nil) 600 602 (face web-mode-keyword-face part-side javascript invisible nil) 602 621 (part-side javascript invisible nil) 621 622 (part-side javascript invisible nil) 622 655 (part-side javascript invisible nil) 655 656 (part-side javascript invisible nil) 656 676 (part-side javascript invisible nil) 676 679 (face web-mode-function-call-face part-side javascript invisible nil) 679 689 (part-side javascript invisible nil) 689 690 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment part-side javascript invisible nil) 690 692 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript invisible nil) 692 697 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript invisible nil) 697 698 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript invisible nil) 698 705 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript invisible nil) 705 709 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript invisible nil) 709 710 (syntax-table (12) part-side javascript invisible nil) 710 711 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment part-side javascript invisible nil) 711 715 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript invisible nil) 715 716 (font-lock-face web-mode-block-delimiter-face part-token comment part-side javascript block-token delimiter-beg block-side t block-controls 0 block-beg 0 invisible nil) 716 717 (part-token comment part-side javascript block-side t invisible nil) 717 721 (face web-mode-variable-name-face part-token comment part-side javascript block-side t invisible nil) 721 724 (part-token comment part-side javascript block-side t invisible nil) 724 726 (face web-mode-variable-name-face part-token comment part-side javascript block-side t invisible nil) 726 727 (part-token comment part-side javascript block-side t invisible nil) 727 735 (face web-mode-variable-name-face part-token comment part-side javascript block-side t invisible nil) 735 738 (part-token comment part-side javascript block-side t invisible nil) 738 747 (face web-mode-variable-name-face part-token comment part-side javascript block-side t invisible nil) 747 749 (part-token comment part-side javascript block-side t invisible nil) 749 752 (face web-mode-variable-name-face part-token comment part-side javascript block-side t invisible nil) 752 753 (part-token comment part-side javascript block-side t invisible nil) 753 754 (font-lock-face web-mode-block-delimiter-face part-token comment part-side javascript block-token delimiter-end block-end t block-side t invisible nil) 754 755 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript invisible nil) 755 756 (syntax-table (12) part-side javascript invisible nil) 756 757 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment part-side javascript invisible nil) 757 761 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript invisible nil) 761 762 (font-lock-face web-mode-block-delimiter-face part-token comment part-side javascript block-token delimiter-beg block-side t block-controls 0 block-beg 0 invisible nil) 762 763 (part-token comment part-side javascript block-side t invisible nil) 763 767 (face web-mode-variable-name-face part-token comment part-side javascript block-side t invisible nil) 767 770 (part-token comment part-side javascript block-side t invisible nil) 770 776 (face web-mode-variable-name-face part-token comment part-side javascript block-side t invisible nil) 776 777 (part-token comment part-side javascript block-side t invisible nil) 777 778 (face web-mode-variable-name-face part-token comment part-side javascript block-side t invisible nil) 778 781 (part-token comment part-side javascript block-side t invisible nil) 781 790 (face web-mode-variable-name-face part-token comment part-side javascript block-side t invisible nil) 790 795 (part-token comment part-side javascript block-side t invisible nil) 795 800 (face web-mode-variable-name-face part-token comment part-side javascript block-side t invisible nil) 800 803 (part-token comment part-side javascript block-side t invisible nil) 803 810 (face web-mode-variable-name-face part-token comment part-side javascript block-side t invisible nil) 810 813 (part-token comment part-side javascript block-side t invisible nil) 813 818 (face web-mode-variable-name-face part-token comment part-side javascript block-side t invisible nil) 818 820 (part-token comment part-side javascript block-side t invisible nil) 820 822 (face web-mode-variable-name-face part-token comment part-side javascript block-side t invisible nil) 822 828 (part-token comment part-side javascript block-side t invisible nil) 828 833 (face web-mode-variable-name-face part-token comment part-side javascript block-side t invisible nil) 833 836 (part-token comment part-side javascript block-side t invisible nil) 836 845 (face web-mode-variable-name-face part-token comment part-side javascript block-side t invisible nil) 845 848 (part-token comment part-side javascript block-side t invisible nil) 848 853 (face web-mode-variable-name-face part-token comment part-side javascript block-side t invisible nil) 853 855 (part-token comment part-side javascript block-side t invisible nil) 855 858 (face web-mode-variable-name-face part-token comment part-side javascript block-side t invisible nil) 858 862 (part-token comment part-side javascript block-side t invisible nil) 862 863 (font-lock-face web-mode-block-delimiter-face part-token comment part-side javascript block-token delimiter-end block-end t block-side t invisible nil) 863 864 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript invisible nil) 864 865 (syntax-table (12) part-side javascript invisible nil) 865 866 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment part-side javascript invisible nil) 866 870 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript invisible nil) 870 871 (syntax-table (12) part-side javascript invisible nil) 871 872 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment part-side javascript invisible nil) 872 873 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript invisible nil) 873 874 (syntax-table (12) part-side javascript invisible nil) 874 875 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "script" invisible nil) 875 876 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "script" invisible nil) 876 882 (font-lock-face web-mode-html-tag-face tag-type end tag-name "script" invisible nil) 882 883 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "script" invisible nil) 883 885 (invisible nil) 885 886 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div" invisible nil) 886 889 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div" invisible nil) 889 890 (tag-type start tag-name "div" invisible nil) 890 891 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0 invisible nil) 891 895 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t invisible nil) 895 896 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t invisible nil) 896 936 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t invisible nil) 936 937 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 5 tag-attr t invisible nil) 937 938 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div" invisible nil) 938 941 (invisible nil) 941 942 (font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t block-controls 0 block-beg 0) 942 943 (font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t) 943 945 (face web-mode-block-control-face block-side t) 945 946 (block-side t) 946 960 (face web-mode-variable-name-face block-side t) 960 961 (font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-end t block-side t) 966 967 (font-lock-face web-mode-html-tag-bracket-face tag-beg 25 tag-type void tag-name "videodashboard") 967 981 (font-lock-face web-mode-html-tag-face tag-type void tag-name "videodashboard") 981 982 (tag-type void tag-name "videodashboard") 982 983 (font-lock-face web-mode-block-delimiter-face tag-type void tag-name "videodashboard" block-token delimiter-beg block-side t block-controls 0 block-beg 0) 983 990 (face web-mode-variable-name-face tag-type void tag-name "videodashboard" block-side t) 990 991 (font-lock-face web-mode-block-delimiter-face tag-type void tag-name "videodashboard" block-token delimiter-end block-end t block-side t) 991 992 (tag-type void tag-name "videodashboard") 992 993 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "videodashboard" tag-attr t tag-attr-beg 0) 993 999 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "videodashboard" tag-attr t) 999 1000 (font-lock-face web-mode-html-attr-equal-face tag-type void tag-name "videodashboard" tag-attr t) 1000 1001 (font-lock-face web-mode-block-delimiter-face tag-type void tag-name "videodashboard" tag-attr t block-token delimiter-beg block-side t block-controls 0 block-beg 0) 1001 1008 (face web-mode-variable-name-face tag-type void tag-name "videodashboard" tag-attr t block-side t) 1008 1009 (font-lock-face web-mode-block-delimiter-face tag-type void tag-name "videodashboard" tag-attr-end 7 tag-attr t block-token delimiter-end block-end t block-side t) 1009 1010 (tag-type void tag-name "videodashboard") 1010 1011 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "videodashboard" tag-attr t tag-attr-beg 0) 1011 1028 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "videodashboard" tag-attr t) 1028 1029 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "videodashboard" tag-attr-end 0 tag-attr t) 1029 1030 (tag-type void tag-name "videodashboard" invisible nil) 1030 1031 (font-lock-face web-mode-html-tag-bracket-face tag-type void tag-name "videodashboard" invisible nil)) . 44) (undo-tree-id87 . -939) (undo-tree-id88 . -886) (undo-tree-id89 . -886) (undo-tree-id90 . -581) (undo-tree-id91 . -886) (undo-tree-id92 . -571) (undo-tree-id93 . -939) (undo-tree-id94 . -939) (t 26521 41469 584991 95000)) nil (26521 43846 378926 605000) 0 nil])
([nil nil ((4293 . 4298) (4255 . 4260) (4249 . 4299) (#("
<main style=\"margin-top: 20px;\">
</main>" 0 1 (invisible nil) 1 2 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "main" invisible nil) 2 6 (font-lock-face web-mode-html-tag-face tag-type start tag-name "main" invisible nil) 6 7 (tag-type start tag-name "main" invisible nil) 7 8 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "main" tag-attr t tag-attr-beg 0 invisible nil) 8 12 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "main" tag-attr t invisible nil) 12 13 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "main" tag-attr t invisible nil) 13 31 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t invisible nil) 31 32 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr-end 5 tag-attr t invisible nil) 32 33 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "main" invisible nil) 33 34 (invisible nil) 34 35 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "main" invisible nil) 35 36 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "main" invisible nil) 36 40 (font-lock-face web-mode-html-tag-face tag-type end tag-name "main" invisible nil) 40 41 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "main" invisible nil)) . 4249) 4291 (t 26521 41568 378019 330000)) nil (26521 43846 378919 329000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-comment-face tag-type comment ws-butler-chg chg)) . 4253) 4310) nil (26521 43846 378917 538000) 0 nil])
([nil nil ((4253 . 4254) (t 26521 41612 827852 701000)) nil (26521 43846 378916 599000) 0 nil])
([nil nil ((4249 . 4290) (#("<!-- 
<main style=\"margin-top: 20px;\">
</main> -->" 0 1 (font-lock-face web-mode-comment-face tag-beg 0 tag-type comment) 1 4 (font-lock-face web-mode-comment-face tag-type comment) 4 5 (font-lock-face web-mode-comment-face tag-type comment ws-butler-chg chg) 5 6 (font-lock-face web-mode-comment-face tag-type comment) 6 49 (font-lock-face web-mode-comment-face tag-type comment) 49 50 (font-lock-face web-mode-comment-face tag-end t tag-type comment)) . 4249) (#("     " 0 5 (font-lock-face web-mode-comment-face tag-type comment)) . 4255) (#("     " 0 5 (font-lock-face web-mode-comment-face tag-type comment)) . 4293)) nil (26521 43846 378915 267000) 0 nil])
([nil nil ((44 . 1302) (#("
const videoId = 'Q_FNGS4liw0';
const players = ['01-goalie','02-lavallee','03-deraspe','04-beland','05-duchesne','06-gauthier','07-dion','08-drolet','10-parent','11-chaput','12-pelletier','13-trudelle','14-bergeron','15-rochette','16-dorval','17-gauthier']

import shifts from './data/player_shifts';
// console.log(seq)

let selectedPlayer = null;
let persons = [];

players.forEach((e, i) => {
  persons.push({
    name: shifts[i]['name'],
    sequences: shifts[i]['shifts'],
    image: `/images/players/${e}.png`
  });
});

onMount(() => {
  if (persons.length > 0) {
    selectedPlayer = persons[0];
  }
});

console.log(persons)
// const persons = [
//   { name: '01-lavallee', sequences: seq },
//   { name: 'Person 2', sequences: [{ label: 'Opening', start: 60 }, { label: 'Interview', start: 120 }] },
// ];
//
let currentPage = 1;
let pauseVideoTime = 1;

const seekVideo = (start, end) => {
  const iframe = document.querySelector('iframe');
  iframe.contentWindow.postMessage(
    JSON.stringify({ event: 'command', func: 'seekTo', args: [start, true] }),
    '*'
  );
  iframe.contentWindow.postMessage(
    JSON.stringify({ event: 'command', func: 'playVideo' }),
    '*'
  );
  pauseVideoTime = end;
};

const goToPage = (page, sequences) => {
  currentPage = page;
  const sequence = sequences[page - 1];
  if (sequence) {
    seekVideo(sequence.start, sequence.end);
  }
};

(function() {
  var stopPlayTimer;

  // This code loads the IFrame Player API code asynchronously.
  var tag = document.createElement(\"script\");
  tag.src = \"//www.youtube.com/iframe_api\";
  var firstScriptTag = document.getElementsByTagName(\"script\")[0];
  firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

  // This function creates an <iframe> (and YouTube player)
  // after the API code downloads.
  var player;
  window.onYouTubeIframeAPIReady = function() {
    player = new YT.Player(\"player\", {
      \"videoId\": videoId,
      \"width\": \"100%\",
      \"events\": {
        \"onReady\": onPlayerReady,
        \"onStateChange\": onPlayerStateChange
      }
    });
  }

  // The API will call this function when the video player is ready.
  // This automatically starts the video playback when the player is loaded.
  function onPlayerReady(event) {
    event.target.playVideo();
  }

  // The API calls this function when the player's state changes.
  function onPlayerStateChange(event) {
    var time, rate, remainingTime;
    clearTimeout(stopPlayTimer);
    if (event.data == YT.PlayerState.PLAYING) {
      time = player.getCurrentTime();
      // Add .4 of a second to the time in case it's close to the current time
      // (The API kept returning ~9.7 when hitting play after stopping at 10s)
      if (time + .4 < pauseVideoTime) {
        rate = player.getPlaybackRate();
        remainingTime = (pauseVideoTime - time) / rate;
        stopPlayTimer = setTimeout(pauseVideo, remainingTime * 1000);
      }
    }
  }
  function pauseVideo() {
    player.pauseVideo();
  }
})();
</script>

<div style=\"display: flex; align-items: flex-start;\">
  <select bind:value={selectedPlayer}>
    {#each persons as person}
      <option value={person}>
        <img src={person.image} alt={person.name} width=\"20\" height=\"20\" />
        {person.name}
      </option>
    {/each}
  </select>

  {#if selectedPlayer}
    <div class=\"flex h-screen\">
      <div class=\"flex-1 w-4/5 h-full\">
        <div class=\"video w-full h-full\">
          <div id=\"player\"/>
        </div>
      </div>
      <div class=\"w-1/5 p-4 bg-gray-100 overflow-y-auto\">
        {#each persons as person}
          <div class=\"mb-4\">
            <div class=\"flex justify-center mt-4 flex-wrap space-x-2\">
              {#each person.sequences as _, index}
                <button
                  class=\"px-4 py-2 m-1 bg-gray-300 rounded transition-colors duration-200 {currentPage === (index + 1) ? 'bg-blue-500 text-white' : 'hover:bg-gray-400 text-gray-700'}\"
                  on:click={() => goToPage(index + 1, person.sequences)}
                  >
                  {index + 1}
                </button>
              {/each}
            </div>
          </div>
        {/each}
      </div>
    </div" 0 1 (part-side javascript) 1 6 (face web-mode-keyword-face part-side javascript) 6 7 (part-side javascript) 7 14 (face web-mode-variable-name-face part-side javascript) 14 17 (part-side javascript) 17 18 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 18 29 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 29 30 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 30 32 (part-side javascript) 32 37 (face web-mode-keyword-face part-side javascript) 37 38 (part-side javascript) 38 45 (face web-mode-variable-name-face part-side javascript) 45 49 (part-side javascript) 49 50 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 50 59 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 59 60 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 60 61 (part-side javascript) 61 62 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 62 73 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 73 74 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 74 75 (part-side javascript) 75 76 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 76 86 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 86 87 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 87 88 (part-side javascript) 88 89 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 89 98 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 98 99 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 99 100 (part-side javascript) 100 101 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 101 112 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 112 113 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 113 114 (part-side javascript) 114 115 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 115 126 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 126 127 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 127 128 (part-side javascript) 128 129 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 129 136 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 136 137 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 137 138 (part-side javascript) 138 139 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 139 148 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 148 149 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 149 150 (part-side javascript) 150 151 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 151 160 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 160 161 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 161 162 (part-side javascript) 162 163 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 163 172 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 172 173 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 173 174 (part-side javascript) 174 175 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 175 187 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 187 188 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 188 189 (part-side javascript) 189 190 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 190 201 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 201 202 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 202 203 (part-side javascript) 203 204 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 204 215 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 215 216 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 216 217 (part-side javascript) 217 218 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 218 229 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 229 230 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 230 231 (part-side javascript) 231 232 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 232 241 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 241 242 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 242 243 (part-side javascript) 243 244 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 244 255 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 255 256 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 256 259 (part-side javascript) 259 265 (face web-mode-keyword-face part-side javascript) 265 266 (part-side javascript) 266 272 (face web-mode-type-face part-side javascript) 272 273 (part-side javascript) 273 277 (face web-mode-keyword-face part-side javascript) 277 278 (part-side javascript) 278 279 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 279 299 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 299 300 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 300 302 (part-side javascript) 302 303 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment part-side javascript) 303 313 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 313 316 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 316 321 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 321 322 (syntax-table (12) part-side javascript) 322 323 (part-side javascript) 323 326 (face web-mode-keyword-face part-side javascript) 326 327 (part-side javascript) 327 341 (face web-mode-variable-name-face part-side javascript) 341 344 (part-side javascript) 344 348 (face web-mode-constant-face part-side javascript) 348 350 (part-side javascript) 350 353 (face web-mode-keyword-face part-side javascript) 353 354 (part-side javascript) 354 361 (face web-mode-variable-name-face part-side javascript) 361 377 (part-side javascript) 377 384 (face web-mode-function-call-face part-side javascript) 384 407 (part-side javascript) 407 411 (face web-mode-function-call-face part-side javascript) 411 418 (part-side javascript) 418 422 (face web-mode-variable-name-face part-side javascript) 422 434 (part-side javascript) 434 435 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 435 439 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 439 440 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 440 447 (part-side javascript) 447 456 (face web-mode-variable-name-face part-side javascript) 456 468 (part-side javascript) 468 469 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 469 475 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 475 476 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 476 483 (part-side javascript) 483 488 (face web-mode-variable-name-face part-side javascript) 488 490 (part-side javascript) 490 491 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 491 507 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 507 508 (font-lock-face web-mode-variable-name-face part-token string part-side javascript) 508 509 (font-lock-face web-mode-block-delimiter-face part-token string part-side javascript block-token delimiter-beg block-side t block-controls 0 block-beg 0) 509 510 (face web-mode-variable-name-face part-token string part-side javascript block-side t) 510 511 (font-lock-face web-mode-block-delimiter-face part-token string part-side javascript block-token delimiter-end block-end t block-side t) 511 512 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 512 516 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 516 517 (syntax-table (15) part-side javascript) 517 528 (part-side javascript) 528 535 (face web-mode-function-call-face part-side javascript) 535 546 (part-side javascript) 546 548 (face web-mode-keyword-face part-side javascript) 548 567 (part-side javascript) 567 568 (part-side javascript) 568 601 (part-side javascript) 601 602 (part-side javascript) 602 622 (part-side javascript) 622 625 (face web-mode-function-call-face part-side javascript) 625 635 (part-side javascript) 635 636 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment part-side javascript) 636 638 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 638 643 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 643 644 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 644 651 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 651 655 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 655 656 (syntax-table (12) part-side javascript) 656 657 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment part-side javascript) 657 661 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 661 662 (font-lock-face web-mode-block-delimiter-face part-token comment part-side javascript block-token delimiter-beg block-side t block-controls 0 block-beg 0) 662 663 (part-token comment part-side javascript block-side t) 663 667 (face web-mode-variable-name-face part-token comment part-side javascript block-side t) 667 670 (part-token comment part-side javascript block-side t) 670 672 (face web-mode-variable-name-face part-token comment part-side javascript block-side t) 672 673 (part-token comment part-side javascript block-side t) 673 681 (face web-mode-variable-name-face part-token comment part-side javascript block-side t) 681 684 (part-token comment part-side javascript block-side t) 684 693 (face web-mode-variable-name-face part-token comment part-side javascript block-side t) 693 695 (part-token comment part-side javascript block-side t) 695 698 (face web-mode-variable-name-face part-token comment part-side javascript block-side t) 698 699 (part-token comment part-side javascript block-side t) 699 700 (font-lock-face web-mode-block-delimiter-face part-token comment part-side javascript block-token delimiter-end block-end t block-side t) 700 701 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 701 702 (syntax-table (12) part-side javascript) 702 703 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment part-side javascript) 703 707 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 707 708 (font-lock-face web-mode-block-delimiter-face part-token comment part-side javascript block-token delimiter-beg block-side t block-controls 0 block-beg 0) 708 709 (part-token comment part-side javascript block-side t) 709 713 (face web-mode-variable-name-face part-token comment part-side javascript block-side t) 713 716 (part-token comment part-side javascript block-side t) 716 722 (face web-mode-variable-name-face part-token comment part-side javascript block-side t) 722 723 (part-token comment part-side javascript block-side t) 723 724 (face web-mode-variable-name-face part-token comment part-side javascript block-side t) 724 727 (part-token comment part-side javascript block-side t) 727 736 (face web-mode-variable-name-face part-token comment part-side javascript block-side t) 736 741 (part-token comment part-side javascript block-side t) 741 746 (face web-mode-variable-name-face part-token comment part-side javascript block-side t) 746 749 (part-token comment part-side javascript block-side t) 749 756 (face web-mode-variable-name-face part-token comment part-side javascript block-side t) 756 759 (part-token comment part-side javascript block-side t) 759 764 (face web-mode-variable-name-face part-token comment part-side javascript block-side t) 764 766 (part-token comment part-side javascript block-side t) 766 768 (face web-mode-variable-name-face part-token comment part-side javascript block-side t) 768 774 (part-token comment part-side javascript block-side t) 774 779 (face web-mode-variable-name-face part-token comment part-side javascript block-side t) 779 782 (part-token comment part-side javascript block-side t) 782 791 (face web-mode-variable-name-face part-token comment part-side javascript block-side t) 791 794 (part-token comment part-side javascript block-side t) 794 799 (face web-mode-variable-name-face part-token comment part-side javascript block-side t) 799 801 (part-token comment part-side javascript block-side t) 801 804 (face web-mode-variable-name-face part-token comment part-side javascript block-side t) 804 808 (part-token comment part-side javascript block-side t) 808 809 (font-lock-face web-mode-block-delimiter-face part-token comment part-side javascript block-token delimiter-end block-end t block-side t) 809 810 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 810 811 (syntax-table (12) part-side javascript) 811 812 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment part-side javascript) 812 816 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 816 817 (syntax-table (12) part-side javascript) 817 818 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment part-side javascript) 818 819 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 819 820 (syntax-table (12) part-side javascript) 820 823 (face web-mode-keyword-face part-side javascript) 823 824 (part-side javascript) 824 835 (face web-mode-variable-name-face part-side javascript) 835 838 (part-side javascript) 838 839 (part-side javascript) 839 841 (part-side javascript) 841 844 (face web-mode-keyword-face part-side javascript) 844 845 (part-side javascript) 845 859 (face web-mode-variable-name-face part-side javascript) 859 862 (part-side javascript) 862 863 (part-side javascript) 863 866 (part-side javascript) 866 871 (face web-mode-keyword-face part-side javascript) 871 872 (part-side javascript) 872 881 (face web-mode-function-name-face part-side javascript) 881 904 (part-side javascript) 904 909 (face web-mode-keyword-face part-side javascript) 909 910 (part-side javascript) 910 916 (face web-mode-variable-name-face part-side javascript) 916 928 (part-side javascript) 928 941 (face web-mode-function-call-face part-side javascript) 941 942 (part-side javascript) 942 943 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 943 949 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 949 950 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 950 976 (part-side javascript) 976 987 (face web-mode-function-call-face part-side javascript) 987 998 (part-side javascript) 998 1007 (face web-mode-function-call-face part-side javascript) 1007 1008 (part-side javascript) 1008 1009 (font-lock-face web-mode-block-delimiter-face part-side javascript block-token delimiter-beg block-side t block-controls 0 block-beg 0) 1009 1010 (part-side javascript block-side t) 1010 1015 (face web-mode-variable-name-face part-side javascript block-side t) 1015 1018 (part-side javascript block-side t) 1018 1025 (face web-mode-variable-name-face part-side javascript block-side t) 1025 1028 (part-side javascript block-side t) 1028 1032 (face web-mode-variable-name-face part-side javascript block-side t) 1032 1035 (part-side javascript block-side t) 1035 1041 (face web-mode-variable-name-face part-side javascript block-side t) 1041 1044 (part-side javascript block-side t) 1044 1048 (face web-mode-variable-name-face part-side javascript block-side t) 1048 1051 (part-side javascript block-side t) 1051 1056 (face web-mode-variable-name-face part-side javascript block-side t) 1056 1058 (part-side javascript block-side t) 1058 1062 (face web-mode-variable-name-face part-side javascript block-side t) 1062 1064 (part-side javascript block-side t) 1064 1065 (font-lock-face web-mode-block-delimiter-face part-side javascript block-token delimiter-end block-end t block-side t) 1065 1072 (part-side javascript) 1072 1073 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 1073 1075 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 1075 1076 (syntax-table (15) part-side javascript) 1076 1104 (part-side javascript) 1104 1115 (face web-mode-function-call-face part-side javascript) 1115 1126 (part-side javascript) 1126 1135 (face web-mode-function-call-face part-side javascript) 1135 1136 (part-side javascript) 1136 1137 (font-lock-face web-mode-block-delimiter-face part-side javascript block-token delimiter-beg block-side t block-controls 0 block-beg 0) 1137 1138 (part-side javascript block-side t) 1138 1143 (face web-mode-variable-name-face part-side javascript block-side t) 1143 1146 (part-side javascript block-side t) 1146 1153 (face web-mode-variable-name-face part-side javascript block-side t) 1153 1156 (part-side javascript block-side t) 1156 1160 (face web-mode-variable-name-face part-side javascript block-side t) 1160 1163 (part-side javascript block-side t) 1163 1172 (face web-mode-variable-name-face part-side javascript block-side t) 1172 1174 (part-side javascript block-side t) 1174 1175 (font-lock-face web-mode-block-delimiter-face part-side javascript block-token delimiter-end block-end t block-side t) 1175 1182 (part-side javascript) 1182 1183 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 1183 1185 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 1185 1186 (syntax-table (15) part-side javascript) 1186 1219 (part-side javascript) 1219 1224 (face web-mode-keyword-face part-side javascript) 1224 1225 (part-side javascript) 1225 1233 (face web-mode-function-name-face part-side javascript) 1233 1283 (part-side javascript) 1283 1288 (face web-mode-keyword-face part-side javascript) 1288 1289 (part-side javascript) 1289 1297 (face web-mode-variable-name-face part-side javascript) 1297 1317 (part-side javascript) 1317 1318 (part-side javascript) 1318 1323 (part-side javascript) 1323 1325 (face web-mode-keyword-face part-side javascript) 1325 1343 (part-side javascript) 1343 1352 (face web-mode-function-call-face part-side javascript) 1352 1393 (part-side javascript) 1393 1401 (face web-mode-keyword-face part-side javascript) 1401 1408 (part-side javascript) 1408 1411 (face web-mode-keyword-face part-side javascript) 1411 1412 (part-side javascript) 1412 1425 (face web-mode-variable-name-face part-side javascript) 1425 1430 (part-side javascript) 1430 1431 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment part-side javascript) 1431 1491 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 1491 1492 (syntax-table (12) part-side javascript) 1492 1494 (part-side javascript) 1494 1497 (face web-mode-keyword-face part-side javascript) 1497 1498 (part-side javascript) 1498 1501 (face web-mode-variable-name-face part-side javascript) 1501 1513 (part-side javascript) 1513 1526 (face web-mode-function-call-face part-side javascript) 1526 1527 (part-side javascript) 1527 1528 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 1528 1534 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 1534 1535 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 1535 1550 (part-side javascript) 1550 1551 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 1551 1579 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 1579 1580 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 1580 1584 (part-side javascript) 1584 1587 (face web-mode-keyword-face part-side javascript) 1587 1588 (part-side javascript) 1588 1602 (face web-mode-variable-name-face part-side javascript) 1602 1614 (part-side javascript) 1614 1634 (face web-mode-function-call-face part-side javascript) 1634 1635 (part-side javascript) 1635 1636 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 1636 1642 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 1642 1643 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 1643 1645 (part-side javascript) 1645 1646 (part-side javascript) 1646 1677 (part-side javascript) 1677 1689 (face web-mode-function-call-face part-side javascript) 1689 1715 (part-side javascript) 1715 1716 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment part-side javascript) 1716 1723 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 1723 1731 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 1731 1732 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 1732 1739 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 1739 1772 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 1772 1773 (syntax-table (12) part-side javascript) 1773 1775 (part-side javascript) 1775 1776 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment part-side javascript) 1776 1807 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 1807 1808 (syntax-table (12) part-side javascript) 1808 1810 (part-side javascript) 1810 1813 (face web-mode-keyword-face part-side javascript) 1813 1814 (part-side javascript) 1814 1820 (face web-mode-variable-name-face part-side javascript) 1820 1857 (part-side javascript) 1857 1865 (face web-mode-keyword-face part-side javascript) 1865 1883 (part-side javascript) 1883 1886 (face web-mode-keyword-face part-side javascript) 1886 1887 (part-side javascript) 1887 1896 (face web-mode-type-face part-side javascript) 1896 1897 (part-side javascript) 1897 1898 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 1898 1904 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 1904 1905 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 1905 1915 (part-side javascript) 1915 1916 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 1916 1923 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 1923 1924 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 1924 1941 (part-side javascript) 1941 1942 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 1942 1947 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 1947 1948 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 1948 1950 (part-side javascript) 1950 1951 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 1951 1954 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 1954 1955 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 1955 1956 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 1956 1964 (part-side javascript) 1964 1965 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 1965 1971 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 1971 1972 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 1972 1984 (part-side javascript) 1984 1985 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 1985 1992 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 1992 1993 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 1993 2018 (part-side javascript) 2018 2019 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 2019 2032 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 2032 2033 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 2033 2078 (part-side javascript) 2078 2079 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment part-side javascript) 2079 2099 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 2099 2103 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 2103 2104 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 2104 2112 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 2112 2113 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 2113 2117 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 2117 2144 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 2144 2145 (syntax-table (12) part-side javascript) 2145 2147 (part-side javascript) 2147 2148 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment part-side javascript) 2148 2221 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 2221 2222 (syntax-table (12) part-side javascript) 2222 2224 (part-side javascript) 2224 2232 (face web-mode-keyword-face part-side javascript) 2232 2233 (part-side javascript) 2233 2246 (face web-mode-function-name-face part-side javascript) 2246 2273 (part-side javascript) 2273 2282 (face web-mode-function-call-face part-side javascript) 2282 2293 (part-side javascript) 2293 2294 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment part-side javascript) 2294 2310 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 2310 2314 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 2314 2315 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 2315 2323 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 2323 2324 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 2324 2328 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 2328 2356 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 2356 2357 (syntax-table (12) part-side javascript) 2357 2359 (part-side javascript) 2359 2367 (face web-mode-keyword-face part-side javascript) 2367 2368 (part-side javascript) 2368 2387 (face web-mode-function-name-face part-side javascript) 2387 2401 (part-side javascript) 2401 2404 (face web-mode-keyword-face part-side javascript) 2404 2405 (part-side javascript) 2405 2409 (face web-mode-variable-name-face part-side javascript) 2409 2436 (part-side javascript) 2436 2448 (face web-mode-function-call-face part-side javascript) 2448 2469 (part-side javascript) 2469 2471 (face web-mode-keyword-face part-side javascript) 2471 2533 (part-side javascript) 2533 2547 (face web-mode-function-call-face part-side javascript) 2547 2557 (part-side javascript) 2557 2558 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment part-side javascript) 2558 2565 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 2565 2566 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 2566 2567 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 2567 2569 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 2569 2591 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 2591 2593 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 2593 2594 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 2594 2598 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 2598 2629 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 2629 2630 (syntax-table (12) part-side javascript) 2630 2636 (part-side javascript) 2636 2637 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment part-side javascript) 2637 2664 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 2664 2667 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 2667 2708 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 2708 2709 (syntax-table (12) part-side javascript) 2709 2715 (part-side javascript) 2715 2717 (face web-mode-keyword-face part-side javascript) 2717 2727 (part-side javascript) 2727 2728 (part-side javascript) 2728 2771 (part-side javascript) 2771 2786 (face web-mode-function-call-face part-side javascript) 2786 2870 (part-side javascript) 2870 2880 (face web-mode-function-call-face part-side javascript) 2880 2909 (part-side javascript) 2909 2913 (part-side javascript) 2913 2936 (part-side javascript) 2936 2944 (face web-mode-keyword-face part-side javascript) 2944 2945 (part-side javascript) 2945 2955 (face web-mode-function-name-face part-side javascript) 2955 2971 (part-side javascript) 2971 2981 (face web-mode-function-call-face part-side javascript) 2981 2995 (part-side javascript) 2995 2996 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "script") 2996 2997 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "script") 2997 3003 (font-lock-face web-mode-html-tag-face tag-type end tag-name "script") 3003 3004 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "script") 3006 3007 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div") 3007 3010 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div") 3010 3011 (tag-type start tag-name "div") 3011 3012 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0) 3012 3016 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 3016 3017 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 3017 3057 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 3057 3058 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 5 tag-attr t) 3058 3059 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div") 3062 3063 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "select") 3063 3069 (font-lock-face web-mode-html-tag-face tag-type start tag-name "select") 3069 3070 (tag-type start tag-name "select") 3070 3071 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "select" tag-attr t tag-attr-beg 0) 3071 3080 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "select" tag-attr t) 3080 3081 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "select" tag-attr t) 3081 3082 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "select" tag-attr t block-token delimiter-beg block-side t block-controls 0 block-beg 0) 3082 3096 (face web-mode-variable-name-face tag-type start tag-name "select" tag-attr t block-side t) 3096 3097 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "select" tag-attr-end 10 tag-attr t block-token delimiter-end block-end t block-side t) 3097 3098 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "select") 3103 3104 (font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t block-controls 0 block-beg 0) 3104 3105 (font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t) 3105 3109 (face web-mode-block-control-face block-side t) 3109 3110 (block-side t) 3110 3117 (face web-mode-variable-name-face block-side t) 3117 3118 (block-side t) 3118 3120 (face web-mode-keyword-face block-side t) 3120 3121 (block-side t) 3121 3127 (face web-mode-variable-name-face block-side t) 3127 3128 (font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-end t block-side t) 3135 3136 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "option") 3136 3142 (font-lock-face web-mode-html-tag-face tag-type start tag-name "option") 3142 3143 (tag-type start tag-name "option") 3143 3144 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "option" tag-attr t tag-attr-beg 0) 3144 3148 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "option" tag-attr t) 3148 3149 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "option" tag-attr t) 3149 3150 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "option" tag-attr t block-token delimiter-beg block-side t block-controls 0 block-beg 0) 3150 3156 (face web-mode-variable-name-face tag-type start tag-name "option" tag-attr t block-side t) 3156 3157 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "option" tag-attr-end 5 tag-attr t block-token delimiter-end block-end t block-side t) 3157 3158 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "option") 3167 3168 (font-lock-face web-mode-html-tag-bracket-face tag-beg 25 tag-type void tag-name "img") 3168 3171 (font-lock-face web-mode-html-tag-face tag-type void tag-name "img") 3171 3172 (tag-type void tag-name "img") 3172 3173 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr t tag-attr-beg 0) 3173 3175 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr t) 3175 3176 (font-lock-face web-mode-html-attr-equal-face tag-type void tag-name "img" tag-attr t) 3176 3177 (font-lock-face web-mode-block-delimiter-face tag-type void tag-name "img" tag-attr t block-token delimiter-beg block-side t block-controls 0 block-beg 0) 3177 3189 (face web-mode-variable-name-face tag-type void tag-name "img" tag-attr t block-side t) 3189 3190 (font-lock-face web-mode-block-delimiter-face tag-type void tag-name "img" tag-attr-end 3 tag-attr t block-token delimiter-end block-end t block-side t) 3190 3191 (tag-type void tag-name "img") 3191 3192 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr t tag-attr-beg 0) 3192 3194 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr t) 3194 3195 (font-lock-face web-mode-html-attr-equal-face tag-type void tag-name "img" tag-attr t) 3195 3196 (font-lock-face web-mode-block-delimiter-face tag-type void tag-name "img" tag-attr t block-token delimiter-beg block-side t block-controls 0 block-beg 0) 3196 3207 (face web-mode-variable-name-face tag-type void tag-name "img" tag-attr t block-side t) 3207 3208 (font-lock-face web-mode-block-delimiter-face tag-type void tag-name "img" tag-attr-end 3 tag-attr t block-token delimiter-end block-end t block-side t) 3208 3209 (tag-type void tag-name "img") 3209 3210 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr t tag-attr-beg 0) 3210 3214 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr t) 3214 3215 (font-lock-face web-mode-html-attr-equal-face tag-type void tag-name "img" tag-attr t) 3215 3216 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "img" tag-attr t) 3216 3218 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "img" tag-attr t) 3218 3219 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "img" tag-attr-end 5 tag-attr t) 3219 3220 (tag-type void tag-name "img") 3220 3221 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr t tag-attr-beg 0) 3221 3226 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr t) 3226 3227 (font-lock-face web-mode-html-attr-equal-face tag-type void tag-name "img" tag-attr t) 3227 3228 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "img" tag-attr t) 3228 3230 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "img" tag-attr t) 3230 3231 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "img" tag-attr-end 6 tag-attr t) 3231 3232 (tag-type void tag-name "img") 3232 3233 (font-lock-face web-mode-html-tag-bracket-face tag-type void tag-name "img") 3233 3234 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type void tag-name "img") 3243 3244 (font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t block-controls 0 block-beg 0) 3244 3255 (face web-mode-variable-name-face block-side t) 3255 3256 (font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-end t block-side t) 3263 3264 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "option") 3264 3265 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "option") 3265 3271 (font-lock-face web-mode-html-tag-face tag-type end tag-name "option") 3271 3272 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "option") 3277 3278 (font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t block-controls 0 block-beg 0) 3278 3279 (font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t) 3279 3283 (face web-mode-block-control-face block-side t) 3283 3284 (font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-end t block-side t) 3287 3288 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "select") 3288 3289 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "select") 3289 3295 (font-lock-face web-mode-html-tag-face tag-type end tag-name "select") 3295 3296 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "select") 3300 3301 (font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t block-controls 0 block-beg 0) 3301 3302 (font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t) 3302 3304 (face web-mode-block-control-face block-side t) 3304 3305 (block-side t) 3305 3319 (face web-mode-variable-name-face block-side t) 3319 3320 (font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-end t block-side t) 3325 3326 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div") 3326 3329 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div") 3329 3330 (tag-type start tag-name "div") 3330 3331 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0) 3331 3335 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 3335 3336 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 3336 3350 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 3350 3351 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 5 tag-attr t) 3351 3352 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div") 3359 3360 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div") 3360 3363 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div") 3363 3364 (tag-type start tag-name "div") 3364 3365 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0) 3365 3369 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 3369 3370 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 3370 3382 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 3382 3383 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 3383 3390 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 3390 3391 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 5 tag-attr t) 3391 3392 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div") 3401 3402 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div") 3402 3405 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div") 3405 3406 (tag-type start tag-name "div") 3406 3407 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0) 3407 3411 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 3411 3412 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 3412 3432 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 3432 3433 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 5 tag-attr t) 3433 3434 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div") 3445 3446 (font-lock-face web-mode-html-tag-bracket-face tag-beg 25 tag-type void tag-name "div") 3446 3449 (font-lock-face web-mode-html-tag-face tag-type void tag-name "div") 3449 3450 (tag-type void tag-name "div") 3450 3451 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "div" tag-attr t tag-attr-beg 0) 3451 3452 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "div" tag-attr t) 3452 3453 (font-lock-face web-mode-html-attr-equal-face tag-type void tag-name "div" tag-attr t) 3453 3460 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "div" tag-attr t) 3460 3461 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "div" tag-attr-end 2 tag-attr t) 3461 3462 (font-lock-face web-mode-html-tag-bracket-face tag-type void tag-name "div") 3462 3463 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type void tag-name "div") 3472 3473 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div") 3473 3474 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div") 3474 3477 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div") 3477 3478 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div") 3485 3486 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div") 3486 3487 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div") 3487 3490 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div") 3490 3491 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div") 3498 3499 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div") 3499 3502 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div") 3502 3503 (tag-type start tag-name "div") 3503 3504 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0) 3504 3508 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 3508 3509 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 3509 3514 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 3514 3515 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 3515 3547 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 3547 3548 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 5 tag-attr t) 3548 3549 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div") 3558 3559 (font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t block-controls 0 block-beg 0) 3559 3560 (font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t) 3560 3564 (face web-mode-block-control-face block-side t) 3564 3565 (block-side t) 3565 3572 (face web-mode-variable-name-face block-side t) 3572 3573 (block-side t) 3573 3575 (face web-mode-keyword-face block-side t) 3575 3576 (block-side t) 3576 3582 (face web-mode-variable-name-face block-side t) 3582 3583 (font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-end t block-side t) 3594 3595 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div") 3595 3598 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div") 3598 3599 (tag-type start tag-name "div") 3599 3600 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0) 3600 3604 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 3604 3605 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 3605 3610 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 3610 3611 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 5 tag-attr t) 3611 3612 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div") 3625 3626 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div") 3626 3629 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div") 3629 3630 (tag-type start tag-name "div") 3630 3631 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0) 3631 3635 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 3635 3636 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 3636 3681 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 3681 3682 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 5 tag-attr t) 3682 3683 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div") 3698 3699 (font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t block-controls 0 block-beg 0) 3699 3700 (font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t) 3700 3704 (face web-mode-block-control-face block-side t) 3704 3705 (block-side t) 3705 3721 (face web-mode-variable-name-face block-side t) 3721 3722 (block-side t) 3722 3724 (face web-mode-keyword-face block-side t) 3724 3725 (block-side t) 3725 3726 (face web-mode-variable-name-face block-side t) 3726 3728 (block-side t) 3728 3733 (face web-mode-variable-name-face block-side t) 3733 3734 (font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-end t block-side t) 3751 3752 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "button") 3752 3758 (font-lock-face web-mode-html-tag-face tag-type start tag-name "button") 3758 3777 (tag-type start tag-name "button") 3777 3778 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t tag-attr-beg 0) 3778 3782 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t) 3782 3783 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "button" tag-attr t) 3783 3849 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr t) 3849 3850 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "button" tag-attr t block-token delimiter-beg block-side t block-controls 0 block-beg 0) 3850 3861 (face web-mode-variable-name-face tag-type start tag-name "button" tag-attr t block-side t) 3861 3867 (tag-type start tag-name "button" tag-attr t block-side t) 3867 3872 (face web-mode-variable-name-face tag-type start tag-name "button" tag-attr t block-side t) 3872 3875 (tag-type start tag-name "button" tag-attr t block-side t) 3875 3876 (face web-mode-variable-name-face tag-type start tag-name "button" tag-attr t block-side t) 3876 3881 (tag-type start tag-name "button" tag-attr t block-side t) 3881 3883 (face web-mode-variable-name-face tag-type start tag-name "button" tag-attr t block-side t) 3883 3884 (tag-type start tag-name "button" tag-attr t block-side t) 3884 3888 (face web-mode-variable-name-face tag-type start tag-name "button" tag-attr t block-side t) 3888 3889 (tag-type start tag-name "button" tag-attr t block-side t) 3889 3892 (face web-mode-variable-name-face tag-type start tag-name "button" tag-attr t block-side t) 3892 3893 (tag-type start tag-name "button" tag-attr t block-side t) 3893 3897 (face web-mode-variable-name-face tag-type start tag-name "button" tag-attr t block-side t) 3897 3898 (tag-type start tag-name "button" tag-attr t block-side t) 3898 3903 (face web-mode-variable-name-face tag-type start tag-name "button" tag-attr t block-side t) 3903 3908 (tag-type start tag-name "button" tag-attr t block-side t) 3908 3913 (face web-mode-variable-name-face tag-type start tag-name "button" tag-attr t block-side t) 3913 3914 (tag-type start tag-name "button" tag-attr t block-side t) 3914 3916 (face web-mode-variable-name-face tag-type start tag-name "button" tag-attr t block-side t) 3916 3917 (tag-type start tag-name "button" tag-attr t block-side t) 3917 3921 (face web-mode-variable-name-face tag-type start tag-name "button" tag-attr t block-side t) 3921 3922 (tag-type start tag-name "button" tag-attr t block-side t) 3922 3925 (face web-mode-variable-name-face tag-type start tag-name "button" tag-attr t block-side t) 3925 3926 (tag-type start tag-name "button" tag-attr t block-side t) 3926 3930 (face web-mode-variable-name-face tag-type start tag-name "button" tag-attr t block-side t) 3930 3931 (tag-type start tag-name "button" tag-attr t block-side t) 3931 3935 (face web-mode-variable-name-face tag-type start tag-name "button" tag-attr t block-side t) 3935 3936 (tag-type start tag-name "button" tag-attr t block-side t) 3936 3939 (face web-mode-variable-name-face tag-type start tag-name "button" tag-attr t block-side t) 3939 3940 (tag-type start tag-name "button" tag-attr t block-side t) 3940 3941 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "button" tag-attr t block-token delimiter-end block-end t block-side t) 3941 3942 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr-end 5 tag-attr t) 3942 3961 (tag-type start tag-name "button") 3961 3962 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t tag-attr-beg 0) 3962 3969 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t) 3969 3970 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "button" tag-attr t) 3970 3971 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "button" tag-attr t block-token delimiter-beg block-side t block-controls 0 block-beg 0) 3971 3974 (tag-type start tag-name "button" tag-attr t block-side t) 3974 3975 (tag-type start tag-name "button" tag-attr-end 8 tag-attr t block-side t) 3975 3976 (tag-end t tag-type start tag-name "button" block-side t) 3976 3977 (block-side t) 3977 3985 (face web-mode-variable-name-face block-side t) 3985 3986 (block-side t) 3986 3991 (face web-mode-variable-name-face block-side t) 3991 3994 (block-side t) 3994 3995 (face web-mode-variable-name-face block-side t) 3995 3997 (block-side t) 3997 4013 (face web-mode-variable-name-face block-side t) 4013 4014 (block-side t) 4014 4015 (font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-end t block-side t) 4054 4055 (font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t block-controls 0 block-beg 0) 4055 4060 (face web-mode-variable-name-face block-side t) 4060 4063 (block-side t) 4063 4064 (face web-mode-variable-name-face block-side t) 4064 4065 (font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-end t block-side t) 4082 4083 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "button") 4083 4084 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "button") 4084 4090 (font-lock-face web-mode-html-tag-face tag-type end tag-name "button") 4090 4091 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "button") 4106 4107 (font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t block-controls 0 block-beg 0) 4107 4108 (font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t) 4108 4112 (face web-mode-block-control-face block-side t) 4112 4113 (font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-end t block-side t) 4126 4127 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div") 4127 4128 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div") 4128 4131 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div") 4131 4132 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div") 4143 4144 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div") 4144 4145 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div") 4145 4148 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div") 4148 4149 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div") 4158 4159 (font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t block-controls 0 block-beg 0) 4159 4160 (font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t) 4160 4164 (face web-mode-block-control-face block-side t) 4164 4165 (font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-end t block-side t) 4172 4173 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div") 4173 4174 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div") 4174 4177 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div") 4177 4178 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div") 4183 4184 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div") 4184 4185 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div") 4185 4188 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div")) . 44) (undo-tree-id86 . -3684) 4291 (t 26521 41640 971072 115000)) nil (26521 43846 378913 719000) 0 nil])
([nil nil ((44 . 4232) (#("import VideoDashboard from './VideoDashboard.svelte';

const videoId = 'Q_FNGS4liw0';
const players = ['01-goalie','02-lavallee','03-deraspe','04-beland','05-duchesne','06-gauthier','07-dion','08-drolet','10-parent','11-chaput','12-pelletier','13-trudelle','14-bergeron','15-rochette','16-dorval','17-gauthier']

import shifts from './data/player_shifts';
// console.log(seq)

let selectedPlayer = null;
let persons = [];

players.forEach((e, i) => {
  persons.push({
    name: shifts[i]['name'],
    sequences: shifts[i]['shifts'],
    image: `/images/players/${e}.png`
  });
});

onMount(() => {
  if (persons.length > 0) {
    selectedPlayer = persons[0];
  }
});

console.log(persons)
// const persons = [
//   { name: '01-lavallee', sequences: seq },
//   { name: 'Person 2', sequences: [{ label: 'Opening', start: 60 }, { label: 'Interview', start: 120 }] },
// ];
//
</script>

<div style=\"display: flex; align-items: flex-start;\">
  <select bind:value={selectedPlayer}>
    {#each persons as person}
      <option value={person}>
        <img src={person.image} alt={person.name} width=\"20\" height=\"20\" />
        {person.name}
      </option>
    {/each}
  </select>

  {#if selectedPlayer}
    <VideoDashboard {videoId} persons={[selectedPlayer]} /" 0 6 (face web-mode-keyword-face part-side javascript) 6 7 (part-side javascript) 7 21 (face web-mode-type-face part-side javascript) 21 22 (part-side javascript) 22 26 (face web-mode-keyword-face part-side javascript) 26 27 (part-side javascript) 27 28 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 28 51 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 51 52 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 52 55 (part-side javascript) 55 60 (face web-mode-keyword-face part-side javascript) 60 61 (part-side javascript) 61 68 (face web-mode-variable-name-face part-side javascript) 68 71 (part-side javascript) 71 72 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 72 83 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 83 84 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 84 86 (part-side javascript) 86 91 (face web-mode-keyword-face part-side javascript) 91 92 (part-side javascript) 92 99 (face web-mode-variable-name-face part-side javascript) 99 103 (part-side javascript) 103 104 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 104 113 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 113 114 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 114 115 (part-side javascript) 115 116 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 116 127 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 127 128 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 128 129 (part-side javascript) 129 130 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 130 140 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 140 141 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 141 142 (part-side javascript) 142 143 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 143 152 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 152 153 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 153 154 (part-side javascript) 154 155 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 155 166 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 166 167 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 167 168 (part-side javascript) 168 169 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 169 180 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 180 181 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 181 182 (part-side javascript) 182 183 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 183 190 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 190 191 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 191 192 (part-side javascript) 192 193 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 193 202 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 202 203 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 203 204 (part-side javascript) 204 205 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 205 214 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 214 215 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 215 216 (part-side javascript) 216 217 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 217 226 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 226 227 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 227 228 (part-side javascript) 228 229 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 229 241 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 241 242 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 242 243 (part-side javascript) 243 244 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 244 255 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 255 256 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 256 257 (part-side javascript) 257 258 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 258 269 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 269 270 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 270 271 (part-side javascript) 271 272 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 272 283 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 283 284 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 284 285 (part-side javascript) 285 286 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 286 295 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 295 296 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 296 297 (part-side javascript) 297 298 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 298 309 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 309 310 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 310 313 (part-side javascript) 313 319 (face web-mode-keyword-face part-side javascript) 319 320 (part-side javascript) 320 326 (face web-mode-type-face part-side javascript) 326 327 (part-side javascript) 327 331 (face web-mode-keyword-face part-side javascript) 331 332 (part-side javascript) 332 333 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 333 353 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 353 354 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 354 356 (part-side javascript) 356 357 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment part-side javascript) 357 367 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 367 370 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 370 375 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 375 376 (syntax-table (12) part-side javascript) 376 377 (part-side javascript) 377 380 (face web-mode-keyword-face part-side javascript) 380 381 (part-side javascript) 381 395 (face web-mode-variable-name-face part-side javascript) 395 398 (part-side javascript) 398 402 (face web-mode-constant-face part-side javascript) 402 404 (part-side javascript) 404 407 (face web-mode-keyword-face part-side javascript) 407 408 (part-side javascript) 408 415 (face web-mode-variable-name-face part-side javascript) 415 431 (part-side javascript) 431 438 (face web-mode-function-call-face part-side javascript) 438 461 (part-side javascript) 461 465 (face web-mode-function-call-face part-side javascript) 465 472 (part-side javascript) 472 476 (face web-mode-variable-name-face part-side javascript) 476 488 (part-side javascript) 488 489 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 489 493 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 493 494 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 494 501 (part-side javascript) 501 510 (face web-mode-variable-name-face part-side javascript) 510 522 (part-side javascript) 522 523 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 523 529 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 529 530 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 530 537 (part-side javascript) 537 542 (face web-mode-variable-name-face part-side javascript) 542 544 (part-side javascript) 544 545 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 545 561 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 561 562 (font-lock-face web-mode-variable-name-face part-token string part-side javascript) 562 563 (font-lock-face web-mode-block-delimiter-face part-token string part-side javascript block-token delimiter-beg block-side t block-controls 0 block-beg 0) 563 564 (face web-mode-variable-name-face part-token string part-side javascript block-side t) 564 565 (font-lock-face web-mode-block-delimiter-face part-token string part-side javascript block-token delimiter-end block-end t block-side t) 565 566 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 566 570 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 570 571 (syntax-table (15) part-side javascript) 571 582 (part-side javascript) 582 589 (face web-mode-function-call-face part-side javascript) 589 600 (part-side javascript) 600 602 (face web-mode-keyword-face part-side javascript) 602 621 (part-side javascript) 621 622 (part-side javascript) 622 655 (part-side javascript) 655 656 (part-side javascript) 656 676 (part-side javascript) 676 679 (face web-mode-function-call-face part-side javascript) 679 689 (part-side javascript) 689 690 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment part-side javascript) 690 692 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 692 697 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 697 698 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 698 705 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 705 709 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 709 710 (syntax-table (12) part-side javascript) 710 711 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment part-side javascript) 711 715 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 715 716 (font-lock-face web-mode-block-delimiter-face part-token comment part-side javascript block-token delimiter-beg block-side t block-controls 0 block-beg 0) 716 717 (part-token comment part-side javascript block-side t) 717 721 (face web-mode-variable-name-face part-token comment part-side javascript block-side t) 721 724 (part-token comment part-side javascript block-side t) 724 726 (face web-mode-variable-name-face part-token comment part-side javascript block-side t) 726 727 (part-token comment part-side javascript block-side t) 727 735 (face web-mode-variable-name-face part-token comment part-side javascript block-side t) 735 738 (part-token comment part-side javascript block-side t) 738 747 (face web-mode-variable-name-face part-token comment part-side javascript block-side t) 747 749 (part-token comment part-side javascript block-side t) 749 752 (face web-mode-variable-name-face part-token comment part-side javascript block-side t) 752 753 (part-token comment part-side javascript block-side t) 753 754 (font-lock-face web-mode-block-delimiter-face part-token comment part-side javascript block-token delimiter-end block-end t block-side t) 754 755 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 755 756 (syntax-table (12) part-side javascript) 756 757 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment part-side javascript) 757 761 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 761 762 (font-lock-face web-mode-block-delimiter-face part-token comment part-side javascript block-token delimiter-beg block-side t block-controls 0 block-beg 0) 762 763 (part-token comment part-side javascript block-side t) 763 767 (face web-mode-variable-name-face part-token comment part-side javascript block-side t) 767 770 (part-token comment part-side javascript block-side t) 770 776 (face web-mode-variable-name-face part-token comment part-side javascript block-side t) 776 777 (part-token comment part-side javascript block-side t) 777 778 (face web-mode-variable-name-face part-token comment part-side javascript block-side t) 778 781 (part-token comment part-side javascript block-side t) 781 790 (face web-mode-variable-name-face part-token comment part-side javascript block-side t) 790 795 (part-token comment part-side javascript block-side t) 795 800 (face web-mode-variable-name-face part-token comment part-side javascript block-side t) 800 803 (part-token comment part-side javascript block-side t) 803 810 (face web-mode-variable-name-face part-token comment part-side javascript block-side t) 810 813 (part-token comment part-side javascript block-side t) 813 818 (face web-mode-variable-name-face part-token comment part-side javascript block-side t) 818 820 (part-token comment part-side javascript block-side t) 820 822 (face web-mode-variable-name-face part-token comment part-side javascript block-side t) 822 828 (part-token comment part-side javascript block-side t) 828 833 (face web-mode-variable-name-face part-token comment part-side javascript block-side t) 833 836 (part-token comment part-side javascript block-side t) 836 845 (face web-mode-variable-name-face part-token comment part-side javascript block-side t) 845 848 (part-token comment part-side javascript block-side t) 848 853 (face web-mode-variable-name-face part-token comment part-side javascript block-side t) 853 855 (part-token comment part-side javascript block-side t) 855 858 (face web-mode-variable-name-face part-token comment part-side javascript block-side t) 858 862 (part-token comment part-side javascript block-side t) 862 863 (font-lock-face web-mode-block-delimiter-face part-token comment part-side javascript block-token delimiter-end block-end t block-side t) 863 864 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 864 865 (syntax-table (12) part-side javascript) 865 866 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment part-side javascript) 866 870 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 870 871 (syntax-table (12) part-side javascript) 871 872 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment part-side javascript) 872 873 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 873 874 (syntax-table (12) part-side javascript) 874 875 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "script") 875 876 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "script") 876 882 (font-lock-face web-mode-html-tag-face tag-type end tag-name "script") 882 883 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "script") 885 886 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div") 886 889 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div") 889 890 (tag-type start tag-name "div") 890 891 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0) 891 895 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 895 896 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 896 936 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 936 937 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 5 tag-attr t) 937 938 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div") 941 942 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "select") 942 948 (font-lock-face web-mode-html-tag-face tag-type start tag-name "select") 948 949 (tag-type start tag-name "select") 949 950 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "select" tag-attr t tag-attr-beg 0) 950 959 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "select" tag-attr t) 959 960 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "select" tag-attr t) 960 961 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "select" tag-attr t block-token delimiter-beg block-side t block-controls 0 block-beg 0) 961 975 (face web-mode-variable-name-face tag-type start tag-name "select" tag-attr t block-side t) 975 976 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "select" tag-attr-end 10 tag-attr t block-token delimiter-end block-end t block-side t) 976 977 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "select") 982 983 (font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t block-controls 0 block-beg 0) 983 984 (font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t) 984 988 (face web-mode-block-control-face block-side t) 988 989 (block-side t) 989 996 (face web-mode-variable-name-face block-side t) 996 997 (block-side t) 997 999 (face web-mode-keyword-face block-side t) 999 1000 (block-side t) 1000 1006 (face web-mode-variable-name-face block-side t) 1006 1007 (font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-end t block-side t) 1014 1015 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "option") 1015 1021 (font-lock-face web-mode-html-tag-face tag-type start tag-name "option") 1021 1022 (tag-type start tag-name "option") 1022 1023 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "option" tag-attr t tag-attr-beg 0) 1023 1027 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "option" tag-attr t) 1027 1028 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "option" tag-attr t) 1028 1029 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "option" tag-attr t block-token delimiter-beg block-side t block-controls 0 block-beg 0) 1029 1035 (face web-mode-variable-name-face tag-type start tag-name "option" tag-attr t block-side t) 1035 1036 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "option" tag-attr-end 5 tag-attr t block-token delimiter-end block-end t block-side t) 1036 1037 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "option") 1046 1047 (font-lock-face web-mode-html-tag-bracket-face tag-beg 25 tag-type void tag-name "img") 1047 1050 (font-lock-face web-mode-html-tag-face tag-type void tag-name "img") 1050 1051 (tag-type void tag-name "img") 1051 1052 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr t tag-attr-beg 0) 1052 1054 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr t) 1054 1055 (font-lock-face web-mode-html-attr-equal-face tag-type void tag-name "img" tag-attr t) 1055 1056 (font-lock-face web-mode-block-delimiter-face tag-type void tag-name "img" tag-attr t block-token delimiter-beg block-side t block-controls 0 block-beg 0) 1056 1068 (face web-mode-variable-name-face tag-type void tag-name "img" tag-attr t block-side t) 1068 1069 (font-lock-face web-mode-block-delimiter-face tag-type void tag-name "img" tag-attr-end 3 tag-attr t block-token delimiter-end block-end t block-side t) 1069 1070 (tag-type void tag-name "img") 1070 1071 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr t tag-attr-beg 0) 1071 1073 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr t) 1073 1074 (font-lock-face web-mode-html-attr-equal-face tag-type void tag-name "img" tag-attr t) 1074 1075 (font-lock-face web-mode-block-delimiter-face tag-type void tag-name "img" tag-attr t block-token delimiter-beg block-side t block-controls 0 block-beg 0) 1075 1086 (face web-mode-variable-name-face tag-type void tag-name "img" tag-attr t block-side t) 1086 1087 (font-lock-face web-mode-block-delimiter-face tag-type void tag-name "img" tag-attr-end 3 tag-attr t block-token delimiter-end block-end t block-side t) 1087 1088 (tag-type void tag-name "img") 1088 1089 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr t tag-attr-beg 0) 1089 1093 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr t) 1093 1094 (font-lock-face web-mode-html-attr-equal-face tag-type void tag-name "img" tag-attr t) 1094 1095 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "img" tag-attr t) 1095 1097 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "img" tag-attr t) 1097 1098 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "img" tag-attr-end 5 tag-attr t) 1098 1099 (tag-type void tag-name "img") 1099 1100 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr t tag-attr-beg 0) 1100 1105 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr t) 1105 1106 (font-lock-face web-mode-html-attr-equal-face tag-type void tag-name "img" tag-attr t) 1106 1107 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "img" tag-attr t) 1107 1109 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "img" tag-attr t) 1109 1110 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "img" tag-attr-end 6 tag-attr t) 1110 1111 (tag-type void tag-name "img") 1111 1112 (font-lock-face web-mode-html-tag-bracket-face tag-type void tag-name "img") 1112 1113 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type void tag-name "img") 1122 1123 (font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t block-controls 0 block-beg 0) 1123 1134 (face web-mode-variable-name-face block-side t) 1134 1135 (font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-end t block-side t) 1142 1143 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "option") 1143 1144 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "option") 1144 1150 (font-lock-face web-mode-html-tag-face tag-type end tag-name "option") 1150 1151 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "option") 1156 1157 (font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t block-controls 0 block-beg 0) 1157 1158 (font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t) 1158 1162 (face web-mode-block-control-face block-side t) 1162 1163 (font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-end t block-side t) 1166 1167 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "select") 1167 1168 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "select") 1168 1174 (font-lock-face web-mode-html-tag-face tag-type end tag-name "select") 1174 1175 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "select") 1179 1180 (font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t block-controls 0 block-beg 0) 1180 1181 (font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t) 1181 1183 (face web-mode-block-control-face block-side t) 1183 1184 (block-side t) 1184 1198 (face web-mode-variable-name-face block-side t) 1198 1199 (font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-end t block-side t) 1204 1205 (font-lock-face web-mode-html-tag-bracket-face tag-beg 25 tag-type void tag-name "videodashboard") 1205 1219 (font-lock-face web-mode-html-tag-face tag-type void tag-name "videodashboard") 1219 1220 (tag-type void tag-name "videodashboard") 1220 1221 (font-lock-face web-mode-block-delimiter-face tag-type void tag-name "videodashboard" block-token delimiter-beg block-side t block-controls 0 block-beg 0) 1221 1228 (face web-mode-variable-name-face tag-type void tag-name "videodashboard" block-side t) 1228 1229 (font-lock-face web-mode-block-delimiter-face tag-type void tag-name "videodashboard" block-token delimiter-end block-end t block-side t) 1229 1230 (tag-type void tag-name "videodashboard") 1230 1231 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "videodashboard" tag-attr t tag-attr-beg 0) 1231 1237 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "videodashboard" tag-attr t) 1237 1238 (font-lock-face web-mode-html-attr-equal-face tag-type void tag-name "videodashboard" tag-attr t) 1238 1239 (font-lock-face web-mode-block-delimiter-face tag-type void tag-name "videodashboard" tag-attr t block-token delimiter-beg block-side t block-controls 0 block-beg 0) 1239 1240 (tag-type void tag-name "videodashboard" tag-attr t block-side t) 1240 1254 (face web-mode-variable-name-face tag-type void tag-name "videodashboard" tag-attr t block-side t) 1254 1255 (tag-type void tag-name "videodashboard" tag-attr t block-side t) 1255 1256 (font-lock-face web-mode-block-delimiter-face tag-type void tag-name "videodashboard" tag-attr-end 7 tag-attr t block-token delimiter-end block-end t block-side t) 1256 1257 (tag-type void tag-name "videodashboard") 1257 1258 (font-lock-face web-mode-html-tag-bracket-face tag-type void tag-name "videodashboard")) . 44) (undo-tree-id84 . -667) (undo-tree-id85 . -667) (t 26521 41643 687727 456000)) nil (26521 43846 378911 803000) 0 nil])
([nil nil ((44 . 1075) (#("
const videoId = 'Q_FNGS4liw0';
const players = ['01-goalie','02-lavallee','03-deraspe','04-beland','05-duchesne','06-gauthier','07-dion','08-drolet','10-parent','11-chaput','12-pelletier','13-trudelle','14-bergeron','15-rochette','16-dorval','17-gauthier']

import shifts from './data/player_shifts';
// console.log(seq)

let selectedPlayer = null;
let persons = [];

players.forEach((e, i) => {
  persons.push({
    name: shifts[i]['name'],
    sequences: shifts[i]['shifts'],
    image: `/images/players/${e}.png`
  });
});

onMount(() => {
  if (persons.length > 0) {
    selectedPlayer = persons[0];
  }
});

console.log(persons)
// const persons = [
//   { name: '01-lavallee', sequences: seq },
//   { name: 'Person 2', sequences: [{ label: 'Opening', start: 60 }, { label: 'Interview', start: 120 }] },
// ];
//
let currentPage = 1;
let pauseVideoTime = 1;

const seekVideo = (start, end) => {
  const iframe = document.querySelector('iframe');
  iframe.contentWindow.postMessage(
    JSON.stringify({ event: 'command', func: 'seekTo', args: [start, true] }),
    '*'
  );
  iframe.contentWindow.postMessage(
    JSON.stringify({ event: 'command', func: 'playVideo' }),
    '*'
  );
  pauseVideoTime = end;
};

const goToPage = (page, sequences) => {
  currentPage = page;
  const sequence = sequences[page - 1];
  if (sequence) {
    seekVideo(sequence.start, sequence.end);
  }
};

(function() {
  var stopPlayTimer;

  // This code loads the IFrame Player API code asynchronously.
  var tag = document.createElement(\"script\");
  tag.src = \"//www.youtube.com/iframe_api\";
  var firstScriptTag = document.getElementsByTagName(\"script\")[0];
  firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

  // This function creates an <iframe> (and YouTube player)
  // after the API code downloads.
  var player;
  window.onYouTubeIframeAPIReady = function() {
    player = new YT.Player(\"player\", {
      \"videoId\": videoId,
      \"width\": \"100%\",
      \"events\": {
        \"onReady\": onPlayerReady,
        \"onStateChange\": onPlayerStateChange
      }
    });
  }

  // The API will call this function when the video player is ready.
  // This automatically starts the video playback when the player is loaded.
  function onPlayerReady(event) {
    event.target.playVideo();
  }

  // The API calls this function when the player's state changes.
  function onPlayerStateChange(event) {
    var time, rate, remainingTime;
    clearTimeout(stopPlayTimer);
    if (event.data == YT.PlayerState.PLAYING) {
      time = player.getCurrentTime();
      // Add .4 of a second to the time in case it's close to the current time
      // (The API kept returning ~9.7 when hitting play after stopping at 10s)
      if (time + .4 < pauseVideoTime) {
        rate = player.getPlaybackRate();
        remainingTime = (pauseVideoTime - time) / rate;
        stopPlayTimer = setTimeout(pauseVideo, remainingTime * 1000);
      }
    }
  }
  function pauseVideo() {
    player.pauseVideo();
  }
})();
</script>

<div style=\"display: flex; align-items: flex-start;\">
  <select bind:value={selectedPlayer}>
    {#each persons as person}
      <option value={person}>
        <img src={person.image} alt={person.name} width=\"20\" height=\"20\" />
        {person.name}
      </option>
    {/each}
  </select>

  {#if selectedPlayer}
    <div class=\"flex h-screen\">
      <div class=\"flex-1 w-4/5 h-full\">
        <div class=\"video w-full h-full\">
          <div id=\"player\"/>
        </div>
      </div>
      <div class=\"w-1/5 p-4 bg-gray-100 overflow-y-auto\">
        {#each persons as person}
          <div class=\"mb-4\">
            <div class=\"flex justify-center mt-4 flex-wrap space-x-2\">
              {#each person.sequences as _, index}
                <button
                  class=\"px-4 py-2 m-1 bg-gray-300 rounded transition-colors duration-200 {currentPage === (index + 1) ? 'bg-blue-500 text-white' : 'hover:bg-gray-400 text-gray-700'}\"
                  on:click={() => goToPage(index + 1, person.sequences)}
                  >
                  {index + 1}
                </button>
              {/each}
            </div>
          </div>
        {/each}
      </div>
    </div" 0 1 (part-side javascript) 1 6 (face web-mode-keyword-face part-side javascript) 6 7 (part-side javascript) 7 14 (face web-mode-variable-name-face part-side javascript) 14 17 (part-side javascript) 17 18 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 18 29 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 29 30 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 30 32 (part-side javascript) 32 37 (face web-mode-keyword-face part-side javascript) 37 38 (part-side javascript) 38 45 (face web-mode-variable-name-face part-side javascript) 45 49 (part-side javascript) 49 50 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 50 59 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 59 60 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 60 61 (part-side javascript) 61 62 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 62 73 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 73 74 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 74 75 (part-side javascript) 75 76 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 76 86 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 86 87 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 87 88 (part-side javascript) 88 89 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 89 98 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 98 99 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 99 100 (part-side javascript) 100 101 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 101 112 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 112 113 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 113 114 (part-side javascript) 114 115 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 115 126 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 126 127 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 127 128 (part-side javascript) 128 129 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 129 136 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 136 137 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 137 138 (part-side javascript) 138 139 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 139 148 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 148 149 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 149 150 (part-side javascript) 150 151 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 151 160 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 160 161 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 161 162 (part-side javascript) 162 163 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 163 172 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 172 173 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 173 174 (part-side javascript) 174 175 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 175 187 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 187 188 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 188 189 (part-side javascript) 189 190 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 190 201 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 201 202 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 202 203 (part-side javascript) 203 204 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 204 215 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 215 216 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 216 217 (part-side javascript) 217 218 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 218 229 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 229 230 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 230 231 (part-side javascript) 231 232 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 232 241 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 241 242 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 242 243 (part-side javascript) 243 244 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 244 255 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 255 256 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 256 259 (part-side javascript) 259 265 (face web-mode-keyword-face part-side javascript) 265 266 (part-side javascript) 266 272 (face web-mode-type-face part-side javascript) 272 273 (part-side javascript) 273 277 (face web-mode-keyword-face part-side javascript) 277 278 (part-side javascript) 278 279 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 279 299 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 299 300 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 300 302 (part-side javascript) 302 303 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment part-side javascript) 303 313 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 313 316 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 316 321 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 321 322 (syntax-table (12) part-side javascript) 322 323 (part-side javascript) 323 326 (face web-mode-keyword-face part-side javascript) 326 327 (part-side javascript) 327 341 (face web-mode-variable-name-face part-side javascript) 341 344 (part-side javascript) 344 348 (face web-mode-constant-face part-side javascript) 348 350 (part-side javascript) 350 353 (face web-mode-keyword-face part-side javascript) 353 354 (part-side javascript) 354 361 (face web-mode-variable-name-face part-side javascript) 361 377 (part-side javascript) 377 384 (face web-mode-function-call-face part-side javascript) 384 407 (part-side javascript) 407 411 (face web-mode-function-call-face part-side javascript) 411 418 (part-side javascript) 418 422 (face web-mode-variable-name-face part-side javascript) 422 434 (part-side javascript) 434 435 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 435 439 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 439 440 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 440 447 (part-side javascript) 447 456 (face web-mode-variable-name-face part-side javascript) 456 468 (part-side javascript) 468 469 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 469 475 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 475 476 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 476 483 (part-side javascript) 483 488 (face web-mode-variable-name-face part-side javascript) 488 490 (part-side javascript) 490 491 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 491 507 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 507 508 (font-lock-face web-mode-variable-name-face part-token string part-side javascript) 508 509 (font-lock-face web-mode-block-delimiter-face part-token string part-side javascript block-token delimiter-beg block-side t block-controls 0 block-beg 0) 509 510 (face web-mode-variable-name-face part-token string part-side javascript block-side t) 510 511 (font-lock-face web-mode-block-delimiter-face part-token string part-side javascript block-token delimiter-end block-end t block-side t) 511 512 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 512 516 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 516 517 (syntax-table (15) part-side javascript) 517 528 (part-side javascript) 528 535 (face web-mode-function-call-face part-side javascript) 535 546 (part-side javascript) 546 548 (face web-mode-keyword-face part-side javascript) 548 567 (part-side javascript) 567 568 (part-side javascript) 568 601 (part-side javascript) 601 602 (part-side javascript) 602 622 (part-side javascript) 622 625 (face web-mode-function-call-face part-side javascript) 625 635 (part-side javascript) 635 636 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment part-side javascript) 636 638 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 638 643 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 643 644 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 644 651 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 651 655 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 655 656 (syntax-table (12) part-side javascript) 656 657 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment part-side javascript) 657 661 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 661 662 (font-lock-face web-mode-block-delimiter-face part-token comment part-side javascript block-token delimiter-beg block-side t block-controls 0 block-beg 0) 662 663 (part-token comment part-side javascript block-side t) 663 667 (face web-mode-variable-name-face part-token comment part-side javascript block-side t) 667 670 (part-token comment part-side javascript block-side t) 670 672 (face web-mode-variable-name-face part-token comment part-side javascript block-side t) 672 673 (part-token comment part-side javascript block-side t) 673 681 (face web-mode-variable-name-face part-token comment part-side javascript block-side t) 681 684 (part-token comment part-side javascript block-side t) 684 693 (face web-mode-variable-name-face part-token comment part-side javascript block-side t) 693 695 (part-token comment part-side javascript block-side t) 695 698 (face web-mode-variable-name-face part-token comment part-side javascript block-side t) 698 699 (part-token comment part-side javascript block-side t) 699 700 (font-lock-face web-mode-block-delimiter-face part-token comment part-side javascript block-token delimiter-end block-end t block-side t) 700 701 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 701 702 (syntax-table (12) part-side javascript) 702 703 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment part-side javascript) 703 707 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 707 708 (font-lock-face web-mode-block-delimiter-face part-token comment part-side javascript block-token delimiter-beg block-side t block-controls 0 block-beg 0) 708 709 (part-token comment part-side javascript block-side t) 709 713 (face web-mode-variable-name-face part-token comment part-side javascript block-side t) 713 716 (part-token comment part-side javascript block-side t) 716 722 (face web-mode-variable-name-face part-token comment part-side javascript block-side t) 722 723 (part-token comment part-side javascript block-side t) 723 724 (face web-mode-variable-name-face part-token comment part-side javascript block-side t) 724 727 (part-token comment part-side javascript block-side t) 727 736 (face web-mode-variable-name-face part-token comment part-side javascript block-side t) 736 741 (part-token comment part-side javascript block-side t) 741 746 (face web-mode-variable-name-face part-token comment part-side javascript block-side t) 746 749 (part-token comment part-side javascript block-side t) 749 756 (face web-mode-variable-name-face part-token comment part-side javascript block-side t) 756 759 (part-token comment part-side javascript block-side t) 759 764 (face web-mode-variable-name-face part-token comment part-side javascript block-side t) 764 766 (part-token comment part-side javascript block-side t) 766 768 (face web-mode-variable-name-face part-token comment part-side javascript block-side t) 768 774 (part-token comment part-side javascript block-side t) 774 779 (face web-mode-variable-name-face part-token comment part-side javascript block-side t) 779 782 (part-token comment part-side javascript block-side t) 782 791 (face web-mode-variable-name-face part-token comment part-side javascript block-side t) 791 794 (part-token comment part-side javascript block-side t) 794 799 (face web-mode-variable-name-face part-token comment part-side javascript block-side t) 799 801 (part-token comment part-side javascript block-side t) 801 804 (face web-mode-variable-name-face part-token comment part-side javascript block-side t) 804 808 (part-token comment part-side javascript block-side t) 808 809 (font-lock-face web-mode-block-delimiter-face part-token comment part-side javascript block-token delimiter-end block-end t block-side t) 809 810 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 810 811 (syntax-table (12) part-side javascript) 811 812 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment part-side javascript) 812 816 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 816 817 (syntax-table (12) part-side javascript) 817 818 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment part-side javascript) 818 819 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 819 820 (syntax-table (12) part-side javascript) 820 823 (face web-mode-keyword-face part-side javascript) 823 824 (part-side javascript) 824 835 (face web-mode-variable-name-face part-side javascript) 835 838 (part-side javascript) 838 839 (part-side javascript) 839 841 (part-side javascript) 841 844 (face web-mode-keyword-face part-side javascript) 844 845 (part-side javascript) 845 859 (face web-mode-variable-name-face part-side javascript) 859 862 (part-side javascript) 862 863 (part-side javascript) 863 866 (part-side javascript) 866 871 (face web-mode-keyword-face part-side javascript) 871 872 (part-side javascript) 872 881 (face web-mode-function-name-face part-side javascript) 881 904 (part-side javascript) 904 909 (face web-mode-keyword-face part-side javascript) 909 910 (part-side javascript) 910 916 (face web-mode-variable-name-face part-side javascript) 916 928 (part-side javascript) 928 941 (face web-mode-function-call-face part-side javascript) 941 942 (part-side javascript) 942 943 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 943 949 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 949 950 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 950 976 (part-side javascript) 976 987 (face web-mode-function-call-face part-side javascript) 987 998 (part-side javascript) 998 1007 (face web-mode-function-call-face part-side javascript) 1007 1008 (part-side javascript) 1008 1009 (font-lock-face web-mode-block-delimiter-face part-side javascript block-token delimiter-beg block-side t block-controls 0 block-beg 0) 1009 1010 (part-side javascript block-side t) 1010 1015 (face web-mode-variable-name-face part-side javascript block-side t) 1015 1018 (part-side javascript block-side t) 1018 1025 (face web-mode-variable-name-face part-side javascript block-side t) 1025 1028 (part-side javascript block-side t) 1028 1032 (face web-mode-variable-name-face part-side javascript block-side t) 1032 1035 (part-side javascript block-side t) 1035 1041 (face web-mode-variable-name-face part-side javascript block-side t) 1041 1044 (part-side javascript block-side t) 1044 1048 (face web-mode-variable-name-face part-side javascript block-side t) 1048 1051 (part-side javascript block-side t) 1051 1056 (face web-mode-variable-name-face part-side javascript block-side t) 1056 1058 (part-side javascript block-side t) 1058 1062 (face web-mode-variable-name-face part-side javascript block-side t) 1062 1064 (part-side javascript block-side t) 1064 1065 (font-lock-face web-mode-block-delimiter-face part-side javascript block-token delimiter-end block-end t block-side t) 1065 1072 (part-side javascript) 1072 1073 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 1073 1075 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 1075 1076 (syntax-table (15) part-side javascript) 1076 1104 (part-side javascript) 1104 1115 (face web-mode-function-call-face part-side javascript) 1115 1126 (part-side javascript) 1126 1135 (face web-mode-function-call-face part-side javascript) 1135 1136 (part-side javascript) 1136 1137 (font-lock-face web-mode-block-delimiter-face part-side javascript block-token delimiter-beg block-side t block-controls 0 block-beg 0) 1137 1138 (part-side javascript block-side t) 1138 1143 (face web-mode-variable-name-face part-side javascript block-side t) 1143 1146 (part-side javascript block-side t) 1146 1153 (face web-mode-variable-name-face part-side javascript block-side t) 1153 1156 (part-side javascript block-side t) 1156 1160 (face web-mode-variable-name-face part-side javascript block-side t) 1160 1163 (part-side javascript block-side t) 1163 1172 (face web-mode-variable-name-face part-side javascript block-side t) 1172 1174 (part-side javascript block-side t) 1174 1175 (font-lock-face web-mode-block-delimiter-face part-side javascript block-token delimiter-end block-end t block-side t) 1175 1182 (part-side javascript) 1182 1183 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 1183 1185 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 1185 1186 (syntax-table (15) part-side javascript) 1186 1219 (part-side javascript) 1219 1224 (face web-mode-keyword-face part-side javascript) 1224 1225 (part-side javascript) 1225 1233 (face web-mode-function-name-face part-side javascript) 1233 1283 (part-side javascript) 1283 1288 (face web-mode-keyword-face part-side javascript) 1288 1289 (part-side javascript) 1289 1297 (face web-mode-variable-name-face part-side javascript) 1297 1317 (part-side javascript) 1317 1318 (part-side javascript) 1318 1323 (part-side javascript) 1323 1325 (face web-mode-keyword-face part-side javascript) 1325 1343 (part-side javascript) 1343 1352 (face web-mode-function-call-face part-side javascript) 1352 1393 (part-side javascript) 1393 1401 (face web-mode-keyword-face part-side javascript) 1401 1408 (part-side javascript) 1408 1411 (face web-mode-keyword-face part-side javascript) 1411 1412 (part-side javascript) 1412 1425 (face web-mode-variable-name-face part-side javascript) 1425 1430 (part-side javascript) 1430 1431 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment part-side javascript) 1431 1491 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 1491 1492 (syntax-table (12) part-side javascript) 1492 1494 (part-side javascript) 1494 1497 (face web-mode-keyword-face part-side javascript) 1497 1498 (part-side javascript) 1498 1501 (face web-mode-variable-name-face part-side javascript) 1501 1513 (part-side javascript) 1513 1526 (face web-mode-function-call-face part-side javascript) 1526 1527 (part-side javascript) 1527 1528 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 1528 1534 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 1534 1535 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 1535 1550 (part-side javascript) 1550 1551 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 1551 1579 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 1579 1580 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 1580 1584 (part-side javascript) 1584 1587 (face web-mode-keyword-face part-side javascript) 1587 1588 (part-side javascript) 1588 1602 (face web-mode-variable-name-face part-side javascript) 1602 1614 (part-side javascript) 1614 1634 (face web-mode-function-call-face part-side javascript) 1634 1635 (part-side javascript) 1635 1636 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 1636 1642 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 1642 1643 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 1643 1645 (part-side javascript) 1645 1646 (part-side javascript) 1646 1677 (part-side javascript) 1677 1689 (face web-mode-function-call-face part-side javascript) 1689 1715 (part-side javascript) 1715 1716 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment part-side javascript) 1716 1723 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 1723 1731 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 1731 1732 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 1732 1739 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 1739 1772 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 1772 1773 (syntax-table (12) part-side javascript) 1773 1775 (part-side javascript) 1775 1776 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment part-side javascript) 1776 1807 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 1807 1808 (syntax-table (12) part-side javascript) 1808 1810 (part-side javascript) 1810 1813 (face web-mode-keyword-face part-side javascript) 1813 1814 (part-side javascript) 1814 1820 (face web-mode-variable-name-face part-side javascript) 1820 1857 (part-side javascript) 1857 1865 (face web-mode-keyword-face part-side javascript) 1865 1883 (part-side javascript) 1883 1886 (face web-mode-keyword-face part-side javascript) 1886 1887 (part-side javascript) 1887 1896 (face web-mode-type-face part-side javascript) 1896 1897 (part-side javascript) 1897 1898 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 1898 1904 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 1904 1905 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 1905 1915 (part-side javascript) 1915 1916 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 1916 1923 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 1923 1924 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 1924 1941 (part-side javascript) 1941 1942 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 1942 1947 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 1947 1948 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 1948 1950 (part-side javascript) 1950 1951 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 1951 1954 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 1954 1955 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 1955 1956 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 1956 1964 (part-side javascript) 1964 1965 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 1965 1971 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 1971 1972 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 1972 1984 (part-side javascript) 1984 1985 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 1985 1992 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 1992 1993 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 1993 2018 (part-side javascript) 2018 2019 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 2019 2032 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 2032 2033 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 2033 2078 (part-side javascript) 2078 2079 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment part-side javascript) 2079 2099 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 2099 2103 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 2103 2104 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 2104 2112 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 2112 2113 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 2113 2117 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 2117 2144 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 2144 2145 (syntax-table (12) part-side javascript) 2145 2147 (part-side javascript) 2147 2148 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment part-side javascript) 2148 2221 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 2221 2222 (syntax-table (12) part-side javascript) 2222 2224 (part-side javascript) 2224 2232 (face web-mode-keyword-face part-side javascript) 2232 2233 (part-side javascript) 2233 2246 (face web-mode-function-name-face part-side javascript) 2246 2273 (part-side javascript) 2273 2282 (face web-mode-function-call-face part-side javascript) 2282 2293 (part-side javascript) 2293 2294 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment part-side javascript) 2294 2310 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 2310 2314 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 2314 2315 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 2315 2323 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 2323 2324 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 2324 2328 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 2328 2356 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 2356 2357 (syntax-table (12) part-side javascript) 2357 2359 (part-side javascript) 2359 2367 (face web-mode-keyword-face part-side javascript) 2367 2368 (part-side javascript) 2368 2387 (face web-mode-function-name-face part-side javascript) 2387 2401 (part-side javascript) 2401 2404 (face web-mode-keyword-face part-side javascript) 2404 2405 (part-side javascript) 2405 2409 (face web-mode-variable-name-face part-side javascript) 2409 2436 (part-side javascript) 2436 2448 (face web-mode-function-call-face part-side javascript) 2448 2469 (part-side javascript) 2469 2471 (face web-mode-keyword-face part-side javascript) 2471 2533 (part-side javascript) 2533 2547 (face web-mode-function-call-face part-side javascript) 2547 2557 (part-side javascript) 2557 2558 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment part-side javascript) 2558 2565 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 2565 2566 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 2566 2567 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 2567 2569 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 2569 2591 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 2591 2593 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 2593 2594 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 2594 2598 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 2598 2629 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 2629 2630 (syntax-table (12) part-side javascript) 2630 2636 (part-side javascript) 2636 2637 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment part-side javascript) 2637 2664 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 2664 2667 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 2667 2708 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 2708 2709 (syntax-table (12) part-side javascript) 2709 2715 (part-side javascript) 2715 2717 (face web-mode-keyword-face part-side javascript) 2717 2727 (part-side javascript) 2727 2728 (part-side javascript) 2728 2771 (part-side javascript) 2771 2786 (face web-mode-function-call-face part-side javascript) 2786 2870 (part-side javascript) 2870 2880 (face web-mode-function-call-face part-side javascript) 2880 2909 (part-side javascript) 2909 2913 (part-side javascript) 2913 2936 (part-side javascript) 2936 2944 (face web-mode-keyword-face part-side javascript) 2944 2945 (part-side javascript) 2945 2955 (face web-mode-function-name-face part-side javascript) 2955 2971 (part-side javascript) 2971 2981 (face web-mode-function-call-face part-side javascript) 2981 2995 (part-side javascript) 2995 2996 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "script") 2996 2997 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "script") 2997 3003 (font-lock-face web-mode-html-tag-face tag-type end tag-name "script") 3003 3004 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "script") 3006 3007 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div") 3007 3010 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div") 3010 3011 (tag-type start tag-name "div") 3011 3012 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0) 3012 3016 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 3016 3017 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 3017 3057 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 3057 3058 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 5 tag-attr t) 3058 3059 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div") 3062 3063 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "select") 3063 3069 (font-lock-face web-mode-html-tag-face tag-type start tag-name "select") 3069 3070 (tag-type start tag-name "select") 3070 3071 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "select" tag-attr t tag-attr-beg 0) 3071 3080 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "select" tag-attr t) 3080 3081 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "select" tag-attr t) 3081 3082 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "select" tag-attr t block-token delimiter-beg block-side t block-controls 0 block-beg 0) 3082 3096 (face web-mode-variable-name-face tag-type start tag-name "select" tag-attr t block-side t) 3096 3097 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "select" tag-attr-end 10 tag-attr t block-token delimiter-end block-end t block-side t) 3097 3098 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "select") 3103 3104 (font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t block-controls 0 block-beg 0) 3104 3105 (font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t) 3105 3109 (face web-mode-block-control-face block-side t) 3109 3110 (block-side t) 3110 3117 (face web-mode-variable-name-face block-side t) 3117 3118 (block-side t) 3118 3120 (face web-mode-keyword-face block-side t) 3120 3121 (block-side t) 3121 3127 (face web-mode-variable-name-face block-side t) 3127 3128 (font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-end t block-side t) 3135 3136 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "option") 3136 3142 (font-lock-face web-mode-html-tag-face tag-type start tag-name "option") 3142 3143 (tag-type start tag-name "option") 3143 3144 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "option" tag-attr t tag-attr-beg 0) 3144 3148 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "option" tag-attr t) 3148 3149 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "option" tag-attr t) 3149 3150 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "option" tag-attr t block-token delimiter-beg block-side t block-controls 0 block-beg 0) 3150 3156 (face web-mode-variable-name-face tag-type start tag-name "option" tag-attr t block-side t) 3156 3157 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "option" tag-attr-end 5 tag-attr t block-token delimiter-end block-end t block-side t) 3157 3158 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "option") 3167 3168 (font-lock-face web-mode-html-tag-bracket-face tag-beg 25 tag-type void tag-name "img") 3168 3171 (font-lock-face web-mode-html-tag-face tag-type void tag-name "img") 3171 3172 (tag-type void tag-name "img") 3172 3173 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr t tag-attr-beg 0) 3173 3175 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr t) 3175 3176 (font-lock-face web-mode-html-attr-equal-face tag-type void tag-name "img" tag-attr t) 3176 3177 (font-lock-face web-mode-block-delimiter-face tag-type void tag-name "img" tag-attr t block-token delimiter-beg block-side t block-controls 0 block-beg 0) 3177 3189 (face web-mode-variable-name-face tag-type void tag-name "img" tag-attr t block-side t) 3189 3190 (font-lock-face web-mode-block-delimiter-face tag-type void tag-name "img" tag-attr-end 3 tag-attr t block-token delimiter-end block-end t block-side t) 3190 3191 (tag-type void tag-name "img") 3191 3192 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr t tag-attr-beg 0) 3192 3194 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr t) 3194 3195 (font-lock-face web-mode-html-attr-equal-face tag-type void tag-name "img" tag-attr t) 3195 3196 (font-lock-face web-mode-block-delimiter-face tag-type void tag-name "img" tag-attr t block-token delimiter-beg block-side t block-controls 0 block-beg 0) 3196 3207 (face web-mode-variable-name-face tag-type void tag-name "img" tag-attr t block-side t) 3207 3208 (font-lock-face web-mode-block-delimiter-face tag-type void tag-name "img" tag-attr-end 3 tag-attr t block-token delimiter-end block-end t block-side t) 3208 3209 (tag-type void tag-name "img") 3209 3210 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr t tag-attr-beg 0) 3210 3214 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr t) 3214 3215 (font-lock-face web-mode-html-attr-equal-face tag-type void tag-name "img" tag-attr t) 3215 3216 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "img" tag-attr t) 3216 3218 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "img" tag-attr t) 3218 3219 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "img" tag-attr-end 5 tag-attr t) 3219 3220 (tag-type void tag-name "img") 3220 3221 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr t tag-attr-beg 0) 3221 3226 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr t) 3226 3227 (font-lock-face web-mode-html-attr-equal-face tag-type void tag-name "img" tag-attr t) 3227 3228 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "img" tag-attr t) 3228 3230 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "img" tag-attr t) 3230 3231 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "img" tag-attr-end 6 tag-attr t) 3231 3232 (tag-type void tag-name "img") 3232 3233 (font-lock-face web-mode-html-tag-bracket-face tag-type void tag-name "img") 3233 3234 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type void tag-name "img") 3243 3244 (font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t block-controls 0 block-beg 0) 3244 3255 (face web-mode-variable-name-face block-side t) 3255 3256 (font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-end t block-side t) 3263 3264 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "option") 3264 3265 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "option") 3265 3271 (font-lock-face web-mode-html-tag-face tag-type end tag-name "option") 3271 3272 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "option") 3277 3278 (font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t block-controls 0 block-beg 0) 3278 3279 (font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t) 3279 3283 (face web-mode-block-control-face block-side t) 3283 3284 (font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-end t block-side t) 3287 3288 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "select") 3288 3289 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "select") 3289 3295 (font-lock-face web-mode-html-tag-face tag-type end tag-name "select") 3295 3296 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "select") 3300 3301 (font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t block-controls 0 block-beg 0) 3301 3302 (font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t) 3302 3304 (face web-mode-block-control-face block-side t) 3304 3305 (block-side t) 3305 3319 (face web-mode-variable-name-face block-side t) 3319 3320 (font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-end t block-side t) 3325 3326 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div") 3326 3329 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div") 3329 3330 (tag-type start tag-name "div") 3330 3331 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0) 3331 3335 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 3335 3336 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 3336 3350 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 3350 3351 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 5 tag-attr t) 3351 3352 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div") 3359 3360 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div") 3360 3363 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div") 3363 3364 (tag-type start tag-name "div") 3364 3365 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0) 3365 3369 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 3369 3370 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 3370 3382 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 3382 3383 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 3383 3390 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 3390 3391 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 5 tag-attr t) 3391 3392 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div") 3401 3402 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div") 3402 3405 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div") 3405 3406 (tag-type start tag-name "div") 3406 3407 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0) 3407 3411 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 3411 3412 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 3412 3432 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 3432 3433 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 5 tag-attr t) 3433 3434 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div") 3445 3446 (font-lock-face web-mode-html-tag-bracket-face tag-beg 25 tag-type void tag-name "div") 3446 3449 (font-lock-face web-mode-html-tag-face tag-type void tag-name "div") 3449 3450 (tag-type void tag-name "div") 3450 3451 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "div" tag-attr t tag-attr-beg 0) 3451 3452 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "div" tag-attr t) 3452 3453 (font-lock-face web-mode-html-attr-equal-face tag-type void tag-name "div" tag-attr t) 3453 3460 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "div" tag-attr t) 3460 3461 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "div" tag-attr-end 2 tag-attr t) 3461 3462 (font-lock-face web-mode-html-tag-bracket-face tag-type void tag-name "div") 3462 3463 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type void tag-name "div") 3472 3473 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div") 3473 3474 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div") 3474 3477 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div") 3477 3478 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div") 3485 3486 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div") 3486 3487 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div") 3487 3490 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div") 3490 3491 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div") 3498 3499 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div") 3499 3502 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div") 3502 3503 (tag-type start tag-name "div") 3503 3504 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0) 3504 3508 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 3508 3509 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 3509 3514 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 3514 3515 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 3515 3547 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 3547 3548 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 5 tag-attr t) 3548 3549 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div") 3558 3559 (font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t block-controls 0 block-beg 0) 3559 3560 (font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t) 3560 3564 (face web-mode-block-control-face block-side t) 3564 3565 (block-side t) 3565 3572 (face web-mode-variable-name-face block-side t) 3572 3573 (block-side t) 3573 3575 (face web-mode-keyword-face block-side t) 3575 3576 (block-side t) 3576 3582 (face web-mode-variable-name-face block-side t) 3582 3583 (font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-end t block-side t) 3594 3595 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div") 3595 3598 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div") 3598 3599 (tag-type start tag-name "div") 3599 3600 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0) 3600 3604 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 3604 3605 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 3605 3610 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 3610 3611 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 5 tag-attr t) 3611 3612 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div") 3625 3626 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div") 3626 3629 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div") 3629 3630 (tag-type start tag-name "div") 3630 3631 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0) 3631 3635 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 3635 3636 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 3636 3681 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 3681 3682 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 5 tag-attr t) 3682 3683 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div") 3698 3699 (font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t block-controls 0 block-beg 0) 3699 3700 (font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t) 3700 3704 (face web-mode-block-control-face block-side t) 3704 3705 (block-side t) 3705 3721 (face web-mode-variable-name-face block-side t) 3721 3722 (block-side t) 3722 3724 (face web-mode-keyword-face block-side t) 3724 3725 (block-side t) 3725 3726 (face web-mode-variable-name-face block-side t) 3726 3728 (block-side t) 3728 3733 (face web-mode-variable-name-face block-side t) 3733 3734 (font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-end t block-side t) 3751 3752 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "button") 3752 3758 (font-lock-face web-mode-html-tag-face tag-type start tag-name "button") 3758 3777 (tag-type start tag-name "button") 3777 3778 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t tag-attr-beg 0) 3778 3782 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t) 3782 3783 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "button" tag-attr t) 3783 3849 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr t) 3849 3850 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "button" tag-attr t block-token delimiter-beg block-side t block-controls 0 block-beg 0) 3850 3861 (face web-mode-variable-name-face tag-type start tag-name "button" tag-attr t block-side t) 3861 3867 (tag-type start tag-name "button" tag-attr t block-side t) 3867 3872 (face web-mode-variable-name-face tag-type start tag-name "button" tag-attr t block-side t) 3872 3875 (tag-type start tag-name "button" tag-attr t block-side t) 3875 3876 (face web-mode-variable-name-face tag-type start tag-name "button" tag-attr t block-side t) 3876 3881 (tag-type start tag-name "button" tag-attr t block-side t) 3881 3883 (face web-mode-variable-name-face tag-type start tag-name "button" tag-attr t block-side t) 3883 3884 (tag-type start tag-name "button" tag-attr t block-side t) 3884 3888 (face web-mode-variable-name-face tag-type start tag-name "button" tag-attr t block-side t) 3888 3889 (tag-type start tag-name "button" tag-attr t block-side t) 3889 3892 (face web-mode-variable-name-face tag-type start tag-name "button" tag-attr t block-side t) 3892 3893 (tag-type start tag-name "button" tag-attr t block-side t) 3893 3897 (face web-mode-variable-name-face tag-type start tag-name "button" tag-attr t block-side t) 3897 3898 (tag-type start tag-name "button" tag-attr t block-side t) 3898 3903 (face web-mode-variable-name-face tag-type start tag-name "button" tag-attr t block-side t) 3903 3908 (tag-type start tag-name "button" tag-attr t block-side t) 3908 3913 (face web-mode-variable-name-face tag-type start tag-name "button" tag-attr t block-side t) 3913 3914 (tag-type start tag-name "button" tag-attr t block-side t) 3914 3916 (face web-mode-variable-name-face tag-type start tag-name "button" tag-attr t block-side t) 3916 3917 (tag-type start tag-name "button" tag-attr t block-side t) 3917 3921 (face web-mode-variable-name-face tag-type start tag-name "button" tag-attr t block-side t) 3921 3922 (tag-type start tag-name "button" tag-attr t block-side t) 3922 3925 (face web-mode-variable-name-face tag-type start tag-name "button" tag-attr t block-side t) 3925 3926 (tag-type start tag-name "button" tag-attr t block-side t) 3926 3930 (face web-mode-variable-name-face tag-type start tag-name "button" tag-attr t block-side t) 3930 3931 (tag-type start tag-name "button" tag-attr t block-side t) 3931 3935 (face web-mode-variable-name-face tag-type start tag-name "button" tag-attr t block-side t) 3935 3936 (tag-type start tag-name "button" tag-attr t block-side t) 3936 3939 (face web-mode-variable-name-face tag-type start tag-name "button" tag-attr t block-side t) 3939 3940 (tag-type start tag-name "button" tag-attr t block-side t) 3940 3941 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "button" tag-attr t block-token delimiter-end block-end t block-side t) 3941 3942 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr-end 5 tag-attr t) 3942 3961 (tag-type start tag-name "button") 3961 3962 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t tag-attr-beg 0) 3962 3969 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t) 3969 3970 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "button" tag-attr t) 3970 3971 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "button" tag-attr t block-token delimiter-beg block-side t block-controls 0 block-beg 0) 3971 3974 (tag-type start tag-name "button" tag-attr t block-side t) 3974 3975 (tag-type start tag-name "button" tag-attr-end 8 tag-attr t block-side t) 3975 3976 (tag-end t tag-type start tag-name "button" block-side t) 3976 3977 (block-side t) 3977 3985 (face web-mode-variable-name-face block-side t) 3985 3986 (block-side t) 3986 3991 (face web-mode-variable-name-face block-side t) 3991 3994 (block-side t) 3994 3995 (face web-mode-variable-name-face block-side t) 3995 3997 (block-side t) 3997 4013 (face web-mode-variable-name-face block-side t) 4013 4014 (block-side t) 4014 4015 (font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-end t block-side t) 4054 4055 (font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t block-controls 0 block-beg 0) 4055 4060 (face web-mode-variable-name-face block-side t) 4060 4063 (block-side t) 4063 4064 (face web-mode-variable-name-face block-side t) 4064 4065 (font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-end t block-side t) 4082 4083 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "button") 4083 4084 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "button") 4084 4090 (font-lock-face web-mode-html-tag-face tag-type end tag-name "button") 4090 4091 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "button") 4106 4107 (font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t block-controls 0 block-beg 0) 4107 4108 (font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t) 4108 4112 (face web-mode-block-control-face block-side t) 4112 4113 (font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-end t block-side t) 4126 4127 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div") 4127 4128 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div") 4128 4131 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div") 4131 4132 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div") 4143 4144 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div") 4144 4145 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div") 4145 4148 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div") 4148 4149 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div") 4158 4159 (font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t block-controls 0 block-beg 0) 4159 4160 (font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t) 4160 4164 (face web-mode-block-control-face block-side t) 4164 4165 (font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-end t block-side t) 4172 4173 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div") 4173 4174 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div") 4174 4177 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div") 4177 4178 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div") 4183 4184 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div") 4184 4185 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div") 4185 4188 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div")) . 44) (undo-tree-id83 . -3684)) nil (26521 43846 378908 596000) 0 nil])
([nil nil ((985 . 1300) (#("{#if selectedPlayer}
    <VideoDashboard {videoId} persons={persons} bind:selectedPlayer" 0 1 (font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t block-controls 0 block-beg 0) 1 2 (font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t) 2 4 (face web-mode-block-control-face block-side t) 4 5 (block-side t) 5 19 (face web-mode-variable-name-face block-side t) 19 20 (font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-end t block-side t) 25 26 (font-lock-face web-mode-html-tag-bracket-face tag-beg 25 tag-type void tag-name "videodashboard") 26 40 (font-lock-face web-mode-html-tag-face tag-type void tag-name "videodashboard") 40 41 (tag-type void tag-name "videodashboard") 41 42 (font-lock-face web-mode-block-delimiter-face tag-type void tag-name "videodashboard" block-token delimiter-beg block-side t block-controls 0 block-beg 0) 42 49 (face web-mode-variable-name-face tag-type void tag-name "videodashboard" block-side t) 49 50 (font-lock-face web-mode-block-delimiter-face tag-type void tag-name "videodashboard" block-token delimiter-end block-end t block-side t) 50 51 (tag-type void tag-name "videodashboard") 51 52 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "videodashboard" tag-attr t tag-attr-beg 0) 52 58 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "videodashboard" tag-attr t) 58 59 (font-lock-face web-mode-html-attr-equal-face tag-type void tag-name "videodashboard" tag-attr t) 59 60 (font-lock-face web-mode-block-delimiter-face tag-type void tag-name "videodashboard" tag-attr t block-token delimiter-beg block-side t block-controls 0 block-beg 0) 60 67 (face web-mode-variable-name-face tag-type void tag-name "videodashboard" tag-attr t block-side t) 67 68 (font-lock-face web-mode-block-delimiter-face tag-type void tag-name "videodashboard" tag-attr-end 7 tag-attr t block-token delimiter-end block-end t block-side t) 68 69 (tag-type void tag-name "videodashboard") 69 70 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "videodashboard" tag-attr t tag-attr-beg 0) 70 87 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "videodashboard" tag-attr t) 87 88 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "videodashboard" tag-attr-end 0 tag-attr t)) . 985)) nil (26521 43846 378906 844000) 0 nil])
([nil nil ((930 . 1248) (#("div style=\"display: flex; align-items: flex-start;\">
  <select bind:value={selectedPlayer}>
    {#each persons as person}
      <option value={person}>
        <img src={person.image} alt={person.name} width=\"20\" height=\"20\" />
        {person.name}
      </option>
    {/each}
  </select>

  {#if selectedPlayer}
    <VideoDashboard {videoId} persons={[selectedPlayer]} />
  {/if}
</div>

<main style=\"margin-top: 20px;\">" 0 3 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div" invisible nil) 3 4 (tag-type start tag-name "div" invisible nil) 4 5 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0 invisible nil) 5 9 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t invisible nil) 9 10 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t invisible nil) 10 50 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t invisible nil) 50 51 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 5 tag-attr t invisible nil) 51 52 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div" invisible nil) 52 55 (invisible nil) 55 56 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "select" invisible nil) 56 62 (font-lock-face web-mode-html-tag-face tag-type start tag-name "select" invisible nil) 62 63 (tag-type start tag-name "select" invisible nil) 63 64 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "select" tag-attr t tag-attr-beg 0 invisible nil) 64 73 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "select" tag-attr t invisible nil) 73 74 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "select" tag-attr t invisible nil) 74 75 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "select" tag-attr t block-token delimiter-beg block-side t block-controls 0 block-beg 0 invisible nil) 75 89 (face web-mode-variable-name-face tag-type start tag-name "select" tag-attr t block-side t invisible nil) 89 90 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "select" tag-attr-end 10 tag-attr t block-token delimiter-end block-end t block-side t invisible nil) 90 91 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "select" invisible nil) 91 96 (invisible nil) 96 97 (font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t block-controls 0 block-beg 0 invisible nil) 97 98 (font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t invisible nil) 98 102 (face web-mode-block-control-face block-side t invisible nil) 102 103 (block-side t invisible nil) 103 110 (face web-mode-variable-name-face block-side t invisible nil) 110 111 (block-side t invisible nil) 111 113 (face web-mode-keyword-face block-side t invisible nil) 113 114 (block-side t invisible nil) 114 120 (face web-mode-variable-name-face block-side t invisible nil) 120 121 (font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-end t block-side t invisible nil) 121 128 (invisible nil) 128 129 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "option" invisible nil) 129 135 (font-lock-face web-mode-html-tag-face tag-type start tag-name "option" invisible nil) 135 136 (tag-type start tag-name "option" invisible nil) 136 137 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "option" tag-attr t tag-attr-beg 0 invisible nil) 137 141 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "option" tag-attr t invisible nil) 141 142 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "option" tag-attr t invisible nil) 142 143 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "option" tag-attr t block-token delimiter-beg block-side t block-controls 0 block-beg 0 invisible nil) 143 149 (face web-mode-variable-name-face tag-type start tag-name "option" tag-attr t block-side t invisible nil) 149 150 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "option" tag-attr-end 5 tag-attr t block-token delimiter-end block-end t block-side t invisible nil) 150 151 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "option" invisible nil) 151 160 (invisible nil) 160 161 (font-lock-face web-mode-html-tag-bracket-face tag-beg 25 tag-type void tag-name "img" invisible nil) 161 164 (font-lock-face web-mode-html-tag-face tag-type void tag-name "img" invisible nil) 164 165 (tag-type void tag-name "img" invisible nil) 165 166 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr t tag-attr-beg 0 invisible nil) 166 168 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr t invisible nil) 168 169 (font-lock-face web-mode-html-attr-equal-face tag-type void tag-name "img" tag-attr t invisible nil) 169 170 (font-lock-face web-mode-block-delimiter-face tag-type void tag-name "img" tag-attr t block-token delimiter-beg block-side t block-controls 0 block-beg 0 invisible nil) 170 182 (face web-mode-variable-name-face tag-type void tag-name "img" tag-attr t block-side t invisible nil) 182 183 (font-lock-face web-mode-block-delimiter-face tag-type void tag-name "img" tag-attr-end 3 tag-attr t block-token delimiter-end block-end t block-side t invisible nil) 183 184 (tag-type void tag-name "img" invisible nil) 184 185 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr t tag-attr-beg 0 invisible nil) 185 187 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr t invisible nil) 187 188 (font-lock-face web-mode-html-attr-equal-face tag-type void tag-name "img" tag-attr t invisible nil) 188 189 (font-lock-face web-mode-block-delimiter-face tag-type void tag-name "img" tag-attr t block-token delimiter-beg block-side t block-controls 0 block-beg 0 invisible nil) 189 200 (face web-mode-variable-name-face tag-type void tag-name "img" tag-attr t block-side t invisible nil) 200 201 (font-lock-face web-mode-block-delimiter-face tag-type void tag-name "img" tag-attr-end 3 tag-attr t block-token delimiter-end block-end t block-side t invisible nil) 201 202 (tag-type void tag-name "img" invisible nil) 202 203 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr t tag-attr-beg 0 invisible nil) 203 207 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr t invisible nil) 207 208 (font-lock-face web-mode-html-attr-equal-face tag-type void tag-name "img" tag-attr t invisible nil) 208 209 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "img" tag-attr t invisible nil) 209 211 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "img" tag-attr t invisible nil) 211 212 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "img" tag-attr-end 5 tag-attr t invisible nil) 212 213 (tag-type void tag-name "img" invisible nil) 213 214 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr t tag-attr-beg 0 invisible nil) 214 219 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr t invisible nil) 219 220 (font-lock-face web-mode-html-attr-equal-face tag-type void tag-name "img" tag-attr t invisible nil) 220 221 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "img" tag-attr t invisible nil) 221 223 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "img" tag-attr t invisible nil) 223 224 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "img" tag-attr-end 6 tag-attr t invisible nil) 224 225 (tag-type void tag-name "img" invisible nil) 225 226 (font-lock-face web-mode-html-tag-bracket-face tag-type void tag-name "img" invisible nil) 226 227 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type void tag-name "img" invisible nil) 227 236 (invisible nil) 236 237 (font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t block-controls 0 block-beg 0 invisible nil) 237 248 (face web-mode-variable-name-face block-side t invisible nil) 248 249 (font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-end t block-side t invisible nil) 249 256 (invisible nil) 256 257 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "option" invisible nil) 257 258 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "option" invisible nil) 258 264 (font-lock-face web-mode-html-tag-face tag-type end tag-name "option" invisible nil) 264 265 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "option" invisible nil) 265 270 (invisible nil) 270 271 (font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t block-controls 0 block-beg 0 invisible nil) 271 272 (font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t invisible nil) 272 276 (face web-mode-block-control-face block-side t invisible nil) 276 277 (font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-end t block-side t invisible nil) 277 280 (invisible nil) 280 281 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "select" invisible nil) 281 282 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "select" invisible nil) 282 288 (font-lock-face web-mode-html-tag-face tag-type end tag-name "select" invisible nil) 288 289 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "select" invisible nil) 289 293 (invisible nil) 293 294 (font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t block-controls 0 block-beg 0 invisible nil) 294 295 (font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t invisible nil) 295 297 (face web-mode-block-control-face block-side t invisible nil) 297 298 (block-side t invisible nil) 298 312 (face web-mode-variable-name-face block-side t invisible nil) 312 313 (font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-end t block-side t invisible nil) 313 318 (invisible nil) 318 319 (font-lock-face web-mode-html-tag-bracket-face tag-beg 25 tag-type void tag-name "videodashboard" invisible nil) 319 333 (font-lock-face web-mode-html-tag-face tag-type void tag-name "videodashboard" invisible nil) 333 334 (tag-type void tag-name "videodashboard" invisible nil) 334 335 (font-lock-face web-mode-block-delimiter-face tag-type void tag-name "videodashboard" block-token delimiter-beg block-side t block-controls 0 block-beg 0 invisible nil) 335 342 (face web-mode-variable-name-face tag-type void tag-name "videodashboard" block-side t invisible nil) 342 343 (font-lock-face web-mode-block-delimiter-face tag-type void tag-name "videodashboard" block-token delimiter-end block-end t block-side t invisible nil) 343 344 (tag-type void tag-name "videodashboard" invisible nil) 344 345 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "videodashboard" tag-attr t tag-attr-beg 0 invisible nil) 345 351 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "videodashboard" tag-attr t invisible nil) 351 352 (font-lock-face web-mode-html-attr-equal-face tag-type void tag-name "videodashboard" tag-attr t invisible nil) 352 353 (font-lock-face web-mode-block-delimiter-face tag-type void tag-name "videodashboard" tag-attr t block-token delimiter-beg block-side t block-controls 0 block-beg 0 invisible nil) 353 354 (tag-type void tag-name "videodashboard" tag-attr t block-side t invisible nil) 354 368 (face web-mode-variable-name-face tag-type void tag-name "videodashboard" tag-attr t block-side t invisible nil) 368 369 (tag-type void tag-name "videodashboard" tag-attr t block-side t invisible nil) 369 370 (font-lock-face web-mode-block-delimiter-face tag-type void tag-name "videodashboard" tag-attr-end 7 tag-attr t block-token delimiter-end block-end t block-side t invisible nil) 370 371 (tag-type void tag-name "videodashboard" invisible nil) 371 372 (font-lock-face web-mode-html-tag-bracket-face tag-type void tag-name "videodashboard" invisible nil) 372 373 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type void tag-name "videodashboard" invisible nil) 373 376 (invisible nil) 376 377 (font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t block-controls 0 block-beg 0 invisible nil) 377 378 (font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t invisible nil) 378 380 (face web-mode-block-control-face block-side t invisible nil) 380 381 (font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-end t block-side t invisible nil) 381 382 (invisible nil) 382 383 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div" invisible nil) 383 384 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div" invisible nil) 384 387 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div" invisible nil) 387 388 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div" invisible nil) 388 389 (invisible nil) 389 390 (invisible nil) 390 391 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "main" invisible nil) 391 395 (font-lock-face web-mode-html-tag-face tag-type start tag-name "main" invisible nil) 395 396 (tag-type start tag-name "main" invisible nil) 396 397 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "main" tag-attr t tag-attr-beg 0 invisible nil) 397 401 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "main" tag-attr t invisible nil) 401 402 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "main" tag-attr t invisible nil) 402 420 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr t invisible nil) 420 421 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "main" tag-attr-end 5 tag-attr t invisible nil) 421 422 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "main" invisible nil)) . 930) (undo-tree-id79 . -389) (undo-tree-id80 . -53) (undo-tree-id81 . -53) (undo-tree-id82 . -389)) nil (26521 43846 378905 837000) 0 nil])
([nil nil ((17 . 776) (#("{ onMount } from 'svelte';
import VideoDashboard from './VideoDashboard.svelte';

const videoId = 'Q_FNGS4liw0';
const players = ['01-goalie','02-lavallee','03-deraspe','04-beland','05-duchesne','06-gauthier','07-dion','08-drolet','10-parent','11-chaput','12-pelletier','13-trudelle','14-bergeron','15-rochette','16-dorval','17-gauthier']

import shifts from './data/player_shifts';
// console.log(seq)

let selectedPlayer = null;
let persons = [];

players.forEach((e, i) => {
  persons.push({
    name: shifts[i]['name'],
    sequences: shifts[i]['shifts'],
    image: `/images/players/${e}.png`
  });
});

onMount(() => {
  if (persons.length > 0) {
    selectedPlayer = persons[0];
  }
});

console.log(persons)
// const persons = [
//   { name: '01-lavallee', sequences: seq },
//   { name: 'Person 2', sequences: [{ label: 'Opening', start: 60 }, { label: 'Interview', start: 120 }] },
// ];
//
</script>

<select bind:value={selectedPlayer}>
  {#each persons as person}
    <option value={person}>
      <img src={person.image} alt={person.name} width=\"20\" height=\"20\" />
      {person.name}
    </option>
  {/each}
</select>

<main>
  {#if selectedPlayer}
    <VideoDashboard {videoId} persons={[selectedPlayer]} />
  {/if}" 0 1 (font-lock-face web-mode-block-delimiter-face part-side javascript block-token delimiter-beg block-side t block-controls 0 block-beg 0 invisible nil) 1 2 (part-side javascript block-side t invisible nil) 2 9 (face web-mode-variable-name-face part-side javascript block-side t invisible nil) 9 10 (part-side javascript block-side t invisible nil) 10 11 (font-lock-face web-mode-block-delimiter-face part-side javascript block-token delimiter-end block-end t block-side t invisible nil) 11 12 (part-side javascript invisible nil) 12 16 (face web-mode-keyword-face part-side javascript invisible nil) 16 17 (part-side javascript invisible nil) 17 18 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript invisible nil) 18 24 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript invisible nil) 24 25 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript invisible nil) 25 27 (part-side javascript invisible nil) 27 33 (face web-mode-keyword-face part-side javascript invisible nil) 33 34 (part-side javascript invisible nil) 34 48 (face web-mode-type-face part-side javascript invisible nil) 48 49 (part-side javascript invisible nil) 49 53 (face web-mode-keyword-face part-side javascript invisible nil) 53 54 (part-side javascript invisible nil) 54 55 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript invisible nil) 55 78 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript invisible nil) 78 79 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript invisible nil) 79 82 (part-side javascript invisible nil) 82 87 (face web-mode-keyword-face part-side javascript invisible nil) 87 88 (part-side javascript invisible nil) 88 95 (face web-mode-variable-name-face part-side javascript invisible nil) 95 98 (part-side javascript invisible nil) 98 99 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript invisible nil) 99 110 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript invisible nil) 110 111 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript invisible nil) 111 113 (part-side javascript invisible nil) 113 118 (face web-mode-keyword-face part-side javascript invisible nil) 118 119 (part-side javascript invisible nil) 119 126 (face web-mode-variable-name-face part-side javascript invisible nil) 126 130 (part-side javascript invisible nil) 130 131 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript invisible nil) 131 140 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript invisible nil) 140 141 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript invisible nil) 141 142 (part-side javascript invisible nil) 142 143 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript invisible nil) 143 154 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript invisible nil) 154 155 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript invisible nil) 155 156 (part-side javascript invisible nil) 156 157 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript invisible nil) 157 167 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript invisible nil) 167 168 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript invisible nil) 168 169 (part-side javascript invisible nil) 169 170 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript invisible nil) 170 179 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript invisible nil) 179 180 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript invisible nil) 180 181 (part-side javascript invisible nil) 181 182 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript invisible nil) 182 193 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript invisible nil) 193 194 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript invisible nil) 194 195 (part-side javascript invisible nil) 195 196 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript invisible nil) 196 207 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript invisible nil) 207 208 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript invisible nil) 208 209 (part-side javascript invisible nil) 209 210 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript invisible nil) 210 217 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript invisible nil) 217 218 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript invisible nil) 218 219 (part-side javascript invisible nil) 219 220 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript invisible nil) 220 229 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript invisible nil) 229 230 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript invisible nil) 230 231 (part-side javascript invisible nil) 231 232 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript invisible nil) 232 241 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript invisible nil) 241 242 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript invisible nil) 242 243 (part-side javascript invisible nil) 243 244 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript invisible nil) 244 253 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript invisible nil) 253 254 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript invisible nil) 254 255 (part-side javascript invisible nil) 255 256 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript invisible nil) 256 268 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript invisible nil) 268 269 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript invisible nil) 269 270 (part-side javascript invisible nil) 270 271 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript invisible nil) 271 282 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript invisible nil) 282 283 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript invisible nil) 283 284 (part-side javascript invisible nil) 284 285 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript invisible nil) 285 296 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript invisible nil) 296 297 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript invisible nil) 297 298 (part-side javascript invisible nil) 298 299 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript invisible nil) 299 310 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript invisible nil) 310 311 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript invisible nil) 311 312 (part-side javascript invisible nil) 312 313 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript invisible nil) 313 322 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript invisible nil) 322 323 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript invisible nil) 323 324 (part-side javascript invisible nil) 324 325 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript invisible nil) 325 336 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript invisible nil) 336 337 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript invisible nil) 337 340 (part-side javascript invisible nil) 340 346 (face web-mode-keyword-face part-side javascript invisible nil) 346 347 (part-side javascript invisible nil) 347 353 (face web-mode-type-face part-side javascript invisible nil) 353 354 (part-side javascript invisible nil) 354 358 (face web-mode-keyword-face part-side javascript invisible nil) 358 359 (part-side javascript invisible nil) 359 360 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript invisible nil) 360 380 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript invisible nil) 380 381 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript invisible nil) 381 383 (part-side javascript invisible nil) 383 384 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment part-side javascript invisible nil) 384 394 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript invisible nil) 394 397 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript invisible nil) 397 402 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript invisible nil) 402 403 (syntax-table (12) part-side javascript invisible nil) 403 404 (part-side javascript invisible nil) 404 407 (face web-mode-keyword-face part-side javascript invisible nil) 407 408 (part-side javascript invisible nil) 408 422 (face web-mode-variable-name-face part-side javascript invisible nil) 422 425 (part-side javascript invisible nil) 425 429 (face web-mode-constant-face part-side javascript invisible nil) 429 431 (part-side javascript invisible nil) 431 434 (face web-mode-keyword-face part-side javascript invisible nil) 434 435 (part-side javascript invisible nil) 435 442 (face web-mode-variable-name-face part-side javascript invisible nil) 442 458 (part-side javascript invisible nil) 458 465 (face web-mode-function-call-face part-side javascript invisible nil) 465 488 (part-side javascript invisible nil) 488 492 (face web-mode-function-call-face part-side javascript invisible nil) 492 499 (part-side javascript invisible nil) 499 503 (face web-mode-variable-name-face part-side javascript invisible nil) 503 515 (part-side javascript invisible nil) 515 516 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript invisible nil) 516 520 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript invisible nil) 520 521 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript invisible nil) 521 528 (part-side javascript invisible nil) 528 537 (face web-mode-variable-name-face part-side javascript invisible nil) 537 549 (part-side javascript invisible nil) 549 550 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript invisible nil) 550 556 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript invisible nil) 556 557 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript invisible nil) 557 564 (part-side javascript invisible nil) 564 569 (face web-mode-variable-name-face part-side javascript invisible nil) 569 571 (part-side javascript invisible nil) 571 572 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript invisible nil) 572 588 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript invisible nil) 588 589 (font-lock-face web-mode-variable-name-face part-token string part-side javascript invisible nil) 589 590 (font-lock-face web-mode-block-delimiter-face part-token string part-side javascript block-token delimiter-beg block-side t block-controls 0 block-beg 0 invisible nil) 590 591 (face web-mode-variable-name-face part-token string part-side javascript block-side t invisible nil) 591 592 (font-lock-face web-mode-block-delimiter-face part-token string part-side javascript block-token delimiter-end block-end t block-side t invisible nil) 592 593 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript invisible nil) 593 597 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript invisible nil) 597 598 (syntax-table (15) part-side javascript invisible nil) 598 609 (part-side javascript invisible nil) 609 616 (face web-mode-function-call-face part-side javascript invisible nil) 616 627 (part-side javascript invisible nil) 627 629 (face web-mode-keyword-face part-side javascript invisible nil) 629 648 (part-side javascript invisible nil) 648 649 (part-side javascript invisible nil) 649 682 (part-side javascript invisible nil) 682 683 (part-side javascript invisible nil) 683 703 (part-side javascript invisible nil) 703 706 (face web-mode-function-call-face part-side javascript invisible nil) 706 716 (part-side javascript invisible nil) 716 717 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment part-side javascript invisible nil) 717 719 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript invisible nil) 719 724 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript invisible nil) 724 725 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript invisible nil) 725 732 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript invisible nil) 732 736 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript invisible nil) 736 737 (syntax-table (12) part-side javascript invisible nil) 737 738 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment part-side javascript invisible nil) 738 742 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript invisible nil) 742 743 (font-lock-face web-mode-block-delimiter-face part-token comment part-side javascript block-token delimiter-beg block-side t block-controls 0 block-beg 0 invisible nil) 743 744 (part-token comment part-side javascript block-side t invisible nil) 744 748 (face web-mode-variable-name-face part-token comment part-side javascript block-side t invisible nil) 748 751 (part-token comment part-side javascript block-side t invisible nil) 751 753 (face web-mode-variable-name-face part-token comment part-side javascript block-side t invisible nil) 753 754 (part-token comment part-side javascript block-side t invisible nil) 754 762 (face web-mode-variable-name-face part-token comment part-side javascript block-side t invisible nil) 762 765 (part-token comment part-side javascript block-side t invisible nil) 765 774 (face web-mode-variable-name-face part-token comment part-side javascript block-side t invisible nil) 774 776 (part-token comment part-side javascript block-side t invisible nil) 776 779 (face web-mode-variable-name-face part-token comment part-side javascript block-side t invisible nil) 779 780 (part-token comment part-side javascript block-side t invisible nil) 780 781 (font-lock-face web-mode-block-delimiter-face part-token comment part-side javascript block-token delimiter-end block-end t block-side t invisible nil) 781 782 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript invisible nil) 782 783 (syntax-table (12) part-side javascript invisible nil) 783 784 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment part-side javascript invisible nil) 784 788 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript invisible nil) 788 789 (font-lock-face web-mode-block-delimiter-face part-token comment part-side javascript block-token delimiter-beg block-side t block-controls 0 block-beg 0 invisible nil) 789 790 (part-token comment part-side javascript block-side t invisible nil) 790 794 (face web-mode-variable-name-face part-token comment part-side javascript block-side t invisible nil) 794 797 (part-token comment part-side javascript block-side t invisible nil) 797 803 (face web-mode-variable-name-face part-token comment part-side javascript block-side t invisible nil) 803 804 (part-token comment part-side javascript block-side t invisible nil) 804 805 (face web-mode-variable-name-face part-token comment part-side javascript block-side t invisible nil) 805 808 (part-token comment part-side javascript block-side t invisible nil) 808 817 (face web-mode-variable-name-face part-token comment part-side javascript block-side t invisible nil) 817 822 (part-token comment part-side javascript block-side t invisible nil) 822 827 (face web-mode-variable-name-face part-token comment part-side javascript block-side t invisible nil) 827 830 (part-token comment part-side javascript block-side t invisible nil) 830 837 (face web-mode-variable-name-face part-token comment part-side javascript block-side t invisible nil) 837 840 (part-token comment part-side javascript block-side t invisible nil) 840 845 (face web-mode-variable-name-face part-token comment part-side javascript block-side t invisible nil) 845 847 (part-token comment part-side javascript block-side t invisible nil) 847 849 (face web-mode-variable-name-face part-token comment part-side javascript block-side t invisible nil) 849 855 (part-token comment part-side javascript block-side t invisible nil) 855 860 (face web-mode-variable-name-face part-token comment part-side javascript block-side t invisible nil) 860 863 (part-token comment part-side javascript block-side t invisible nil) 863 872 (face web-mode-variable-name-face part-token comment part-side javascript block-side t invisible nil) 872 875 (part-token comment part-side javascript block-side t invisible nil) 875 880 (face web-mode-variable-name-face part-token comment part-side javascript block-side t invisible nil) 880 882 (part-token comment part-side javascript block-side t invisible nil) 882 885 (face web-mode-variable-name-face part-token comment part-side javascript block-side t invisible nil) 885 889 (part-token comment part-side javascript block-side t invisible nil) 889 890 (font-lock-face web-mode-block-delimiter-face part-token comment part-side javascript block-token delimiter-end block-end t block-side t invisible nil) 890 891 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript invisible nil) 891 892 (syntax-table (12) part-side javascript invisible nil) 892 893 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment part-side javascript invisible nil) 893 897 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript invisible nil) 897 898 (syntax-table (12) part-side javascript invisible nil) 898 899 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment part-side javascript invisible nil) 899 900 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript invisible nil) 900 901 (syntax-table (12) part-side javascript invisible nil) 901 902 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "script" invisible nil) 902 903 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "script" invisible nil) 903 909 (font-lock-face web-mode-html-tag-face tag-type end tag-name "script" invisible nil) 909 910 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "script" invisible nil) 910 912 (invisible nil) 912 913 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "select" invisible nil) 913 919 (font-lock-face web-mode-html-tag-face tag-type start tag-name "select") 919 920 (tag-type start tag-name "select") 920 921 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "select" tag-attr t tag-attr-beg 0) 921 930 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "select" tag-attr t) 930 931 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "select" tag-attr t) 931 932 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "select" tag-attr t block-token delimiter-beg block-side t block-controls 0 block-beg 0) 932 946 (face web-mode-variable-name-face tag-type start tag-name "select" tag-attr t block-side t) 946 947 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "select" tag-attr-end 10 tag-attr t block-token delimiter-end block-end t block-side t) 947 948 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "select") 951 952 (font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t block-controls 0 block-beg 0) 952 953 (font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t) 953 957 (face web-mode-block-control-face block-side t) 957 958 (block-side t) 958 965 (face web-mode-variable-name-face block-side t) 965 966 (block-side t) 966 968 (face web-mode-keyword-face block-side t) 968 969 (block-side t) 969 975 (face web-mode-variable-name-face block-side t) 975 976 (font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-end t block-side t) 981 982 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "option") 982 988 (font-lock-face web-mode-html-tag-face tag-type start tag-name "option") 988 989 (tag-type start tag-name "option") 989 990 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "option" tag-attr t tag-attr-beg 0) 990 994 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "option" tag-attr t) 994 995 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "option" tag-attr t) 995 996 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "option" tag-attr t block-token delimiter-beg block-side t block-controls 0 block-beg 0) 996 1002 (face web-mode-variable-name-face tag-type start tag-name "option" tag-attr t block-side t) 1002 1003 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "option" tag-attr-end 5 tag-attr t block-token delimiter-end block-end t block-side t) 1003 1004 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "option") 1011 1012 (font-lock-face web-mode-html-tag-bracket-face tag-beg 25 tag-type void tag-name "img") 1012 1015 (font-lock-face web-mode-html-tag-face tag-type void tag-name "img") 1015 1016 (tag-type void tag-name "img") 1016 1017 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr t tag-attr-beg 0) 1017 1019 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr t) 1019 1020 (font-lock-face web-mode-html-attr-equal-face tag-type void tag-name "img" tag-attr t) 1020 1021 (font-lock-face web-mode-block-delimiter-face tag-type void tag-name "img" tag-attr t block-token delimiter-beg block-side t block-controls 0 block-beg 0) 1021 1033 (face web-mode-variable-name-face tag-type void tag-name "img" tag-attr t block-side t) 1033 1034 (font-lock-face web-mode-block-delimiter-face tag-type void tag-name "img" tag-attr-end 3 tag-attr t block-token delimiter-end block-end t block-side t) 1034 1035 (tag-type void tag-name "img") 1035 1036 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr t tag-attr-beg 0) 1036 1038 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr t) 1038 1039 (font-lock-face web-mode-html-attr-equal-face tag-type void tag-name "img" tag-attr t) 1039 1040 (font-lock-face web-mode-block-delimiter-face tag-type void tag-name "img" tag-attr t block-token delimiter-beg block-side t block-controls 0 block-beg 0) 1040 1051 (face web-mode-variable-name-face tag-type void tag-name "img" tag-attr t block-side t) 1051 1052 (font-lock-face web-mode-block-delimiter-face tag-type void tag-name "img" tag-attr-end 3 tag-attr t block-token delimiter-end block-end t block-side t) 1052 1053 (tag-type void tag-name "img") 1053 1054 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr t tag-attr-beg 0) 1054 1058 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr t) 1058 1059 (font-lock-face web-mode-html-attr-equal-face tag-type void tag-name "img" tag-attr t) 1059 1060 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "img" tag-attr t) 1060 1062 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "img" tag-attr t) 1062 1063 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "img" tag-attr-end 5 tag-attr t) 1063 1064 (tag-type void tag-name "img") 1064 1065 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr t tag-attr-beg 0) 1065 1070 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr t) 1070 1071 (font-lock-face web-mode-html-attr-equal-face tag-type void tag-name "img" tag-attr t) 1071 1072 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "img" tag-attr t) 1072 1074 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "img" tag-attr t) 1074 1075 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "img" tag-attr-end 6 tag-attr t) 1075 1076 (tag-type void tag-name "img") 1076 1077 (font-lock-face web-mode-html-tag-bracket-face tag-type void tag-name "img") 1077 1078 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type void tag-name "img") 1085 1086 (font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t block-controls 0 block-beg 0) 1086 1097 (face web-mode-variable-name-face block-side t) 1097 1098 (font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-end t block-side t) 1103 1104 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "option") 1104 1105 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "option") 1105 1111 (font-lock-face web-mode-html-tag-face tag-type end tag-name "option") 1111 1112 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "option") 1115 1116 (font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t block-controls 0 block-beg 0) 1116 1117 (font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t) 1117 1121 (face web-mode-block-control-face block-side t) 1121 1122 (font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-end t block-side t) 1123 1124 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "select") 1124 1125 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "select") 1125 1131 (font-lock-face web-mode-html-tag-face tag-type end tag-name "select") 1131 1132 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "select") 1134 1135 (font-lock-face web-mode-html-tag-bracket-face tag-beg 16 tag-type start tag-name "main") 1135 1139 (font-lock-face web-mode-html-tag-face tag-type start tag-name "main") 1139 1140 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "main") 1143 1144 (font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t block-controls 0 block-beg 0) 1144 1145 (font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t) 1145 1147 (face web-mode-block-control-face block-side t) 1147 1148 (block-side t) 1148 1162 (face web-mode-variable-name-face block-side t) 1162 1163 (font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-end t block-side t) 1168 1169 (font-lock-face web-mode-html-tag-bracket-face tag-beg 25 tag-type void tag-name "videodashboard") 1169 1183 (font-lock-face web-mode-html-tag-face tag-type void tag-name "videodashboard") 1183 1184 (tag-type void tag-name "videodashboard") 1184 1185 (font-lock-face web-mode-block-delimiter-face tag-type void tag-name "videodashboard" block-token delimiter-beg block-side t block-controls 0 block-beg 0) 1185 1192 (face web-mode-variable-name-face tag-type void tag-name "videodashboard" block-side t) 1192 1193 (font-lock-face web-mode-block-delimiter-face tag-type void tag-name "videodashboard" block-token delimiter-end block-end t block-side t) 1193 1194 (tag-type void tag-name "videodashboard") 1194 1195 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "videodashboard" tag-attr t tag-attr-beg 0) 1195 1201 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "videodashboard" tag-attr t) 1201 1202 (font-lock-face web-mode-html-attr-equal-face tag-type void tag-name "videodashboard" tag-attr t) 1202 1203 (font-lock-face web-mode-block-delimiter-face tag-type void tag-name "videodashboard" tag-attr t block-token delimiter-beg block-side t block-controls 0 block-beg 0) 1203 1204 (tag-type void tag-name "videodashboard" tag-attr t block-side t) 1204 1218 (face web-mode-variable-name-face tag-type void tag-name "videodashboard" tag-attr t block-side t) 1218 1219 (tag-type void tag-name "videodashboard" tag-attr t block-side t) 1219 1220 (font-lock-face web-mode-block-delimiter-face tag-type void tag-name "videodashboard" tag-attr-end 7 tag-attr t block-token delimiter-end block-end t block-side t) 1220 1221 (tag-type void tag-name "videodashboard") 1221 1222 (font-lock-face web-mode-html-tag-bracket-face tag-type void tag-name "videodashboard") 1222 1223 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type void tag-name "videodashboard") 1226 1227 (font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t block-controls 0 block-beg 0) 1227 1228 (font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t) 1228 1230 (face web-mode-block-control-face block-side t) 1230 1231 (font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-end t block-side t)) . 17) (undo-tree-id69 . -913) (undo-tree-id70 . -913) (undo-tree-id71 . -1133) (undo-tree-id72 . -1133) (undo-tree-id73 . -608) (undo-tree-id74 . -1133) (undo-tree-id75 . -598) (undo-tree-id76 . -604) (undo-tree-id77 . -913) (undo-tree-id78 . -913) (t 26521 41677 957579 821000)) nil (26521 43846 378901 664000) 0 nil])
([nil nil ((17 . 1351) (#("VideoDashboard from './VideoDashboard.svelte'

const videoId = 'Q_FNGS4liw0';
const players = ['01-goalie','02-lavallee','03-deraspe','04-beland','05-duchesne','06-gauthier','07-dion','08-drolet','10-parent','11-chaput','12-pelletier','13-trudelle','14-bergeron','15-rochette','16-dorval','17-gauthier']

import shifts from './data/player_shifts';
// console.log(seq)

const persons = []
players.forEach((e, i) => {
  persons.push({name: shifts[i]['name'], sequences: shifts[i]['shifts']})
});

console.log(persons)
// const persons = [
//   { name: '01-lavallee', sequences: seq },
//   { name: 'Person 2', sequences: [{ label: 'Opening', start: 60 }, { label: 'Interview', start: 120 }] },
// ];
//
</script>

<main>
  <VideoDashboard {videoId} {persons} /" 0 14 (face web-mode-type-face part-side javascript) 14 15 (part-side javascript) 15 19 (face web-mode-keyword-face part-side javascript) 19 20 (part-side javascript) 20 21 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 21 44 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 44 45 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 45 46 (syntax-table (15) part-side javascript) 46 47 (part-side javascript) 47 52 (face web-mode-keyword-face part-side javascript) 52 53 (part-side javascript) 53 60 (face web-mode-variable-name-face part-side javascript) 60 63 (part-side javascript) 63 64 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 64 74 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 74 75 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript rear-nonsticky t) 75 76 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 76 77 (part-side javascript) 77 78 (part-side javascript) 78 83 (face web-mode-keyword-face part-side javascript) 83 84 (part-side javascript) 84 91 (face web-mode-variable-name-face part-side javascript) 91 93 (part-side javascript) 93 94 (part-side javascript) 94 95 (part-side javascript) 95 96 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 96 105 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 105 106 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 106 107 (part-side javascript) 107 108 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 108 119 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 119 120 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 120 121 (part-side javascript) 121 122 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 122 132 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 132 133 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 133 134 (part-side javascript) 134 135 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 135 144 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 144 145 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 145 146 (part-side javascript) 146 147 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 147 158 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 158 159 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 159 160 (part-side javascript) 160 161 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 161 172 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 172 173 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 173 174 (part-side javascript) 174 175 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 175 182 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 182 183 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 183 184 (part-side javascript) 184 185 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 185 194 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 194 195 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 195 196 (part-side javascript) 196 197 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 197 206 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 206 207 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 207 208 (part-side javascript) 208 209 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 209 218 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 218 219 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 219 220 (part-side javascript) 220 221 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 221 233 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 233 234 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 234 235 (part-side javascript) 235 236 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 236 247 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 247 248 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 248 249 (part-side javascript) 249 250 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 250 261 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 261 262 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 262 263 (part-side javascript) 263 264 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 264 275 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 275 276 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 276 277 (part-side javascript) 277 278 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 278 287 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 287 288 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 288 289 (part-side javascript) 289 290 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 290 301 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 301 302 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript rear-nonsticky t) 302 303 (part-side javascript) 303 304 (part-side javascript) 304 305 (part-side javascript) 305 306 (face web-mode-keyword-face part-side javascript) 306 311 (face web-mode-keyword-face part-side javascript) 311 312 (part-side javascript) 312 318 (face web-mode-type-face part-side javascript) 318 319 (part-side javascript) 319 323 (face web-mode-keyword-face part-side javascript) 323 324 (part-side javascript) 324 325 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 325 326 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 326 327 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 327 332 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 332 345 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 345 346 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 346 347 (part-side javascript) 347 348 (part-side javascript) 348 349 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment part-side javascript) 349 359 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 359 362 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 362 367 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 367 368 (syntax-table (12) part-side javascript) 368 369 (part-side javascript) 369 374 (face web-mode-keyword-face part-side javascript) 374 375 (part-side javascript) 375 382 (face web-mode-variable-name-face part-side javascript) 382 385 (part-side javascript) 385 386 (part-side javascript rear-nonsticky t) 386 387 (part-side javascript) 387 388 (part-side javascript) 388 389 (part-side javascript) 389 396 (part-side javascript) 396 403 (face web-mode-function-call-face part-side javascript) 403 404 (part-side javascript) 404 405 (part-side javascript) 405 409 (part-side javascript) 409 410 (part-side javascript) 410 411 (part-side javascript) 411 414 (part-side javascript) 414 415 (part-side javascript) 415 416 (part-side javascript) 416 418 (part-side javascript) 418 426 (part-side javascript) 426 430 (face web-mode-function-call-face part-side javascript) 430 431 (part-side javascript) 431 432 (font-lock-face web-mode-block-delimiter-face part-side javascript block-token delimiter-beg block-side t block-controls 0 block-beg 0) 432 436 (face web-mode-variable-name-face part-side javascript block-side t) 436 438 (part-side javascript block-side t) 438 444 (face web-mode-variable-name-face part-side javascript block-side t) 444 445 (part-side javascript block-side t) 445 446 (face web-mode-variable-name-face part-side javascript block-side t) 446 447 (part-side javascript block-side t) 447 448 (part-side javascript block-side t) 448 449 (part-side javascript block-side t) 449 453 (face web-mode-variable-name-face part-side javascript block-side t) 453 454 (part-side javascript block-side t) 454 455 (part-side javascript block-side t) 455 456 (part-side javascript block-side t) 456 457 (part-side javascript block-side t) 457 460 (face web-mode-variable-name-face part-side javascript block-side t) 460 466 (face web-mode-variable-name-face part-side javascript block-side t) 466 467 (part-side javascript block-side t) 467 468 (part-side javascript block-side t) 468 474 (face web-mode-variable-name-face part-side javascript block-side t) 474 475 (part-side javascript block-side t) 475 476 (face web-mode-variable-name-face part-side javascript block-side t) 476 477 (part-side javascript block-side t) 477 478 (part-side javascript block-side t) 478 479 (part-side javascript block-side t) 479 485 (face web-mode-variable-name-face part-side javascript block-side t) 485 486 (part-side javascript block-side t) 486 487 (part-side javascript block-side t) 487 488 (font-lock-face web-mode-block-delimiter-face part-side javascript block-token delimiter-end block-end t block-side t) 488 489 (part-side javascript) 489 490 (part-side javascript) 490 491 (part-side javascript) 491 493 (part-side javascript) 493 494 (part-side javascript) 494 503 (part-side javascript) 503 506 (face web-mode-function-call-face part-side javascript) 506 514 (part-side javascript) 514 515 (part-side javascript) 515 516 (part-side javascript) 516 517 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment part-side javascript) 517 519 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 519 524 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 524 525 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 525 532 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 532 536 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 536 537 (syntax-table (12) part-side javascript) 537 538 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment part-side javascript) 538 542 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 542 543 (font-lock-face web-mode-block-delimiter-face part-token comment part-side javascript block-token delimiter-beg block-side t block-controls 0 block-beg 0) 543 544 (part-token comment part-side javascript block-side t) 544 548 (face web-mode-variable-name-face part-token comment part-side javascript block-side t) 548 551 (part-token comment part-side javascript block-side t) 551 553 (face web-mode-variable-name-face part-token comment part-side javascript block-side t) 553 554 (part-token comment part-side javascript block-side t) 554 562 (face web-mode-variable-name-face part-token comment part-side javascript block-side t) 562 565 (part-token comment part-side javascript block-side t) 565 574 (face web-mode-variable-name-face part-token comment part-side javascript block-side t) 574 576 (part-token comment part-side javascript block-side t) 576 579 (face web-mode-variable-name-face part-token comment part-side javascript block-side t) 579 580 (part-token comment part-side javascript block-side t) 580 581 (font-lock-face web-mode-block-delimiter-face part-token comment part-side javascript block-token delimiter-end block-end t block-side t) 581 582 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 582 583 (syntax-table (12) part-side javascript) 583 584 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment part-side javascript) 584 588 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 588 589 (font-lock-face web-mode-block-delimiter-face part-token comment part-side javascript block-token delimiter-beg block-side t block-controls 0 block-beg 0) 589 590 (part-token comment part-side javascript block-side t) 590 594 (face web-mode-variable-name-face part-token comment part-side javascript block-side t) 594 597 (part-token comment part-side javascript block-side t) 597 603 (face web-mode-variable-name-face part-token comment part-side javascript block-side t) 603 604 (part-token comment part-side javascript block-side t) 604 605 (face web-mode-variable-name-face part-token comment part-side javascript block-side t) 605 608 (part-token comment part-side javascript block-side t) 608 617 (face web-mode-variable-name-face part-token comment part-side javascript block-side t) 617 622 (part-token comment part-side javascript block-side t) 622 627 (face web-mode-variable-name-face part-token comment part-side javascript block-side t) 627 630 (part-token comment part-side javascript block-side t) 630 637 (face web-mode-variable-name-face part-token comment part-side javascript block-side t) 637 640 (part-token comment part-side javascript block-side t) 640 645 (face web-mode-variable-name-face part-token comment part-side javascript block-side t) 645 647 (part-token comment part-side javascript block-side t) 647 649 (face web-mode-variable-name-face part-token comment part-side javascript block-side t) 649 655 (part-token comment part-side javascript block-side t) 655 660 (face web-mode-variable-name-face part-token comment part-side javascript block-side t) 660 663 (part-token comment part-side javascript block-side t) 663 672 (face web-mode-variable-name-face part-token comment part-side javascript block-side t) 672 673 (part-token comment part-side javascript block-side t) 673 675 (part-token comment part-side javascript block-side t) 675 680 (face web-mode-variable-name-face part-token comment part-side javascript block-side t) 680 682 (part-token comment part-side javascript block-side t) 682 685 (face web-mode-variable-name-face part-token comment part-side javascript block-side t) 685 689 (part-token comment part-side javascript block-side t) 689 690 (font-lock-face web-mode-block-delimiter-face part-token comment part-side javascript block-token delimiter-end block-end t block-side t) 690 691 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 691 692 (syntax-table (12) part-side javascript) 692 693 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment part-side javascript) 693 697 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 697 698 (syntax-table (12) part-side javascript) 698 699 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment part-side javascript) 699 700 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 700 701 (syntax-table (12) part-side javascript) 701 702 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "script") 702 703 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "script") 703 709 (font-lock-face web-mode-html-tag-face tag-type end tag-name "script") 709 710 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "script") 712 713 (font-lock-face web-mode-html-tag-bracket-face tag-beg 16 tag-type start tag-name "main") 713 717 (font-lock-face web-mode-html-tag-face tag-type start tag-name "main") 717 718 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "main") 721 722 (font-lock-face web-mode-html-tag-bracket-face tag-beg 24 tag-type void tag-name "videodashboard") 722 736 (font-lock-face web-mode-html-tag-face tag-type void tag-name "videodashboard") 736 737 (tag-type void tag-name "videodashboard") 737 738 (font-lock-face web-mode-block-delimiter-face tag-type void tag-name "videodashboard" block-token delimiter-beg block-side t block-controls 0 block-beg 0) 738 745 (face web-mode-variable-name-face tag-type void tag-name "videodashboard" block-side t) 745 746 (font-lock-face web-mode-block-delimiter-face tag-type void tag-name "videodashboard" block-token delimiter-end block-end t block-side t) 746 747 (tag-type void tag-name "videodashboard") 747 748 (font-lock-face web-mode-block-delimiter-face tag-type void tag-name "videodashboard" block-token delimiter-beg block-side t block-controls 0 block-beg 0) 748 755 (face web-mode-variable-name-face tag-type void tag-name "videodashboard" block-side t) 755 756 (font-lock-face web-mode-block-delimiter-face tag-type void tag-name "videodashboard" block-token delimiter-end block-end t block-side t) 756 757 (tag-type void tag-name "videodashboard") 757 758 (font-lock-face web-mode-html-tag-bracket-face tag-type void tag-name "videodashboard")) . 17) (undo-tree-id34 . -516) (undo-tree-id35 . -405) (undo-tree-id36 . -403) (undo-tree-id37 . -405) (undo-tree-id38 . -410) (undo-tree-id39 . -405) (undo-tree-id40 . -416) (undo-tree-id41 . -416) (undo-tree-id42 . -407) (undo-tree-id43 . -406) (undo-tree-id44 . -407) (undo-tree-id45 . -415) (undo-tree-id46 . -409) (undo-tree-id47 . -415) (undo-tree-id48 . -415) (undo-tree-id49 . -415) (undo-tree-id50 . -415) (undo-tree-id51 . -415) (undo-tree-id52 . -368) (undo-tree-id53 . -368) (undo-tree-id54 . -516) (undo-tree-id55 . -516) (undo-tree-id56 . -507) (undo-tree-id57 . -506) (undo-tree-id58 . -507) (undo-tree-id59 . -515) (undo-tree-id60 . -514) (undo-tree-id61 . -489) (undo-tree-id62 . -489) (undo-tree-id63 . -582) (undo-tree-id64 . -582) (undo-tree-id65 . -582) (undo-tree-id66 . -47) (undo-tree-id67 . -711) (undo-tree-id68 . -711) (t 26521 41687 304204 738000)) nil (26521 43846 378892 530000) 0 nil])
([nil nil ((1318 . 1319) (t 26521 41834 576805 807000)) nil (26521 43846 378862 972000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1373 . 1374) (nil ws-butler-chg chg 1373 . 1374) (nil tag-name "videodashboard" 1373 . 1374) (nil tag-type void 1373 . 1374) (nil tag-end t 1373 . 1374) (nil font-lock-face web-mode-html-tag-bracket-face 1373 . 1374) (nil ws-butler-chg chg 1372 . 1373) (nil tag-name "videodashboard" 1372 . 1373) (nil tag-type void 1372 . 1373) (nil font-lock-face web-mode-html-tag-bracket-face 1372 . 1373) (nil ws-butler-chg chg 1371 . 1372) (nil tag-name "videodashboard" 1371 . 1372) (nil tag-type void 1371 . 1372) (nil ws-butler-chg chg 1370 . 1371) (nil block-side t 1370 . 1371) (nil block-end t 1370 . 1371) (nil block-token delimiter-end 1370 . 1371) (nil tag-attr t 1370 . 1371) (nil tag-attr-end 7 1370 . 1371) (nil tag-name "videodashboard" 1370 . 1371) (nil tag-type void 1370 . 1371) (nil font-lock-face web-mode-block-delimiter-face 1370 . 1371) (nil ws-butler-chg chg 1369 . 1370) (nil block-side t 1369 . 1370) (nil tag-attr t 1369 . 1370) (nil tag-name "videodashboard" 1369 . 1370) (nil tag-type void 1369 . 1370) (nil ws-butler-chg chg 1355 . 1369) (nil block-side t 1355 . 1369) (nil tag-attr t 1355 . 1369) (nil tag-name "videodashboard" 1355 . 1369) (nil tag-type void 1355 . 1369) (nil face web-mode-variable-name-face 1355 . 1369) (nil ws-butler-chg chg 1354 . 1355) (nil block-side t 1354 . 1355) (nil tag-attr t 1354 . 1355) (nil tag-name "videodashboard" 1354 . 1355) (nil tag-type void 1354 . 1355) (nil ws-butler-chg chg 1353 . 1354) (nil block-beg 0 1353 . 1354) (nil block-controls 0 1353 . 1354) (nil block-side t 1353 . 1354) (nil block-token delimiter-beg 1353 . 1354) (nil tag-attr t 1353 . 1354) (nil tag-name "videodashboard" 1353 . 1354) (nil tag-type void 1353 . 1354) (nil font-lock-face web-mode-block-delimiter-face 1353 . 1354) (nil ws-butler-chg chg 1352 . 1353) (nil tag-attr t 1352 . 1353) (nil tag-name "videodashboard" 1352 . 1353) (nil tag-type void 1352 . 1353) (nil font-lock-face web-mode-html-attr-equal-face 1352 . 1353) (nil ws-butler-chg chg 1346 . 1352) (nil tag-attr t 1346 . 1352) (nil tag-name "videodashboard" 1346 . 1352) (nil tag-type void 1346 . 1352) (nil font-lock-face web-mode-html-attr-name-face 1346 . 1352) (nil ws-butler-chg chg 1345 . 1346) (nil tag-attr-beg 0 1345 . 1346) (nil tag-attr t 1345 . 1346) (nil tag-name "videodashboard" 1345 . 1346) (nil tag-type void 1345 . 1346) (nil font-lock-face web-mode-html-attr-name-face 1345 . 1346) (nil ws-butler-chg chg 1344 . 1345) (nil tag-name "videodashboard" 1344 . 1345) (nil tag-type void 1344 . 1345) (nil ws-butler-chg chg 1343 . 1344) (nil block-side t 1343 . 1344) (nil block-end t 1343 . 1344) (nil block-token delimiter-end 1343 . 1344) (nil tag-name "videodashboard" 1343 . 1344) (nil tag-type void 1343 . 1344) (nil font-lock-face web-mode-block-delimiter-face 1343 . 1344) (nil ws-butler-chg chg 1336 . 1343) (nil block-side t 1336 . 1343) (nil tag-name "videodashboard" 1336 . 1343) (nil tag-type void 1336 . 1343) (nil face web-mode-variable-name-face 1336 . 1343) (nil ws-butler-chg chg 1335 . 1336) (nil block-beg 0 1335 . 1336) (nil block-controls 0 1335 . 1336) (nil block-side t 1335 . 1336) (nil block-token delimiter-beg 1335 . 1336) (nil tag-name "videodashboard" 1335 . 1336) (nil tag-type void 1335 . 1336) (nil font-lock-face web-mode-block-delimiter-face 1335 . 1336) (nil ws-butler-chg chg 1334 . 1335) (nil tag-name "videodashboard" 1334 . 1335) (nil tag-type void 1334 . 1335) (nil ws-butler-chg chg 1320 . 1334) (nil tag-name "videodashboard" 1320 . 1334) (nil tag-type void 1320 . 1334) (nil font-lock-face web-mode-html-tag-face 1320 . 1334) (nil ws-butler-chg chg 1319 . 1320) (nil tag-name "videodashboard" 1319 . 1320) (nil tag-type void 1319 . 1320) (nil tag-beg 25 1319 . 1320) (nil font-lock-face web-mode-html-tag-bracket-face 1319 . 1320) (1319 . 1374)) nil (26521 43846 378859 236000) 0 nil])
([nil nil ((#("<VideoDashboard {videoId} persons={[selectedPlayer]} />" 0 1 (font-lock-face web-mode-html-tag-bracket-face tag-beg 25 tag-type void tag-name "videodashboard" ws-butler-chg chg) 1 15 (font-lock-face web-mode-html-tag-face tag-type void tag-name "videodashboard" ws-butler-chg chg) 15 16 (tag-type void tag-name "videodashboard" ws-butler-chg chg) 16 17 (font-lock-face web-mode-block-delimiter-face tag-type void tag-name "videodashboard" block-token delimiter-beg block-side t block-controls 0 block-beg 0 ws-butler-chg chg) 17 24 (face web-mode-variable-name-face tag-type void tag-name "videodashboard" block-side t ws-butler-chg chg) 24 25 (font-lock-face web-mode-block-delimiter-face tag-type void tag-name "videodashboard" block-token delimiter-end block-end t block-side t ws-butler-chg chg) 25 26 (tag-type void tag-name "videodashboard" ws-butler-chg chg) 26 27 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "videodashboard" tag-attr t tag-attr-beg 0 ws-butler-chg chg) 27 33 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "videodashboard" tag-attr t ws-butler-chg chg) 33 34 (font-lock-face web-mode-html-attr-equal-face tag-type void tag-name "videodashboard" tag-attr t ws-butler-chg chg) 34 35 (font-lock-face web-mode-block-delimiter-face tag-type void tag-name "videodashboard" tag-attr t block-token delimiter-beg block-side t block-controls 0 block-beg 0 ws-butler-chg chg) 35 36 (tag-type void tag-name "videodashboard" tag-attr t block-side t ws-butler-chg chg) 36 50 (face web-mode-variable-name-face tag-type void tag-name "videodashboard" tag-attr t block-side t ws-butler-chg chg) 50 51 (tag-type void tag-name "videodashboard" tag-attr t block-side t ws-butler-chg chg) 51 52 (font-lock-face web-mode-block-delimiter-face tag-type void tag-name "videodashboard" tag-attr-end 7 tag-attr t block-token delimiter-end block-end t block-side t ws-butler-chg chg) 52 53 (tag-type void tag-name "videodashboard" ws-butler-chg chg) 53 54 (font-lock-face web-mode-html-tag-bracket-face tag-type void tag-name "videodashboard" ws-butler-chg chg) 54 55 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type void tag-name "videodashboard" rear-nonsticky t ws-butler-chg chg)) . 1319) (undo-tree-id33 . -55) 1374) nil (26521 43846 378844 63000) 0 nil])
([nil nil ((1311 . 1314)) nil (26521 43846 378842 492000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1368 . 1369) (nil ws-butler-chg chg 1368 . 1369) (nil rear-nonsticky t 1368 . 1369) (nil tag-name "videodashboard" 1368 . 1369) (nil tag-type void 1368 . 1369) (nil tag-end t 1368 . 1369) (nil font-lock-face web-mode-html-tag-bracket-face 1368 . 1369) (nil ws-butler-chg chg 1367 . 1368) (nil tag-name "videodashboard" 1367 . 1368) (nil tag-type void 1367 . 1368) (nil font-lock-face web-mode-html-tag-bracket-face 1367 . 1368) (nil ws-butler-chg chg 1366 . 1367) (nil tag-name "videodashboard" 1366 . 1367) (nil tag-type void 1366 . 1367) (nil ws-butler-chg chg 1365 . 1366) (nil block-side t 1365 . 1366) (nil block-end t 1365 . 1366) (nil block-token delimiter-end 1365 . 1366) (nil tag-attr t 1365 . 1366) (nil tag-attr-end 7 1365 . 1366) (nil tag-name "videodashboard" 1365 . 1366) (nil tag-type void 1365 . 1366) (nil font-lock-face web-mode-block-delimiter-face 1365 . 1366) (nil ws-butler-chg chg 1364 . 1365) (nil block-side t 1364 . 1365) (nil tag-attr t 1364 . 1365) (nil tag-name "videodashboard" 1364 . 1365) (nil tag-type void 1364 . 1365) (nil ws-butler-chg chg 1350 . 1364) (nil block-side t 1350 . 1364) (nil tag-attr t 1350 . 1364) (nil tag-name "videodashboard" 1350 . 1364) (nil tag-type void 1350 . 1364) (nil face web-mode-variable-name-face 1350 . 1364) (nil ws-butler-chg chg 1349 . 1350) (nil block-side t 1349 . 1350) (nil tag-attr t 1349 . 1350) (nil tag-name "videodashboard" 1349 . 1350) (nil tag-type void 1349 . 1350) (nil ws-butler-chg chg 1348 . 1349) (nil block-beg 0 1348 . 1349) (nil block-controls 0 1348 . 1349) (nil block-side t 1348 . 1349) (nil block-token delimiter-beg 1348 . 1349) (nil tag-attr t 1348 . 1349) (nil tag-name "videodashboard" 1348 . 1349) (nil tag-type void 1348 . 1349) (nil font-lock-face web-mode-block-delimiter-face 1348 . 1349) (nil ws-butler-chg chg 1347 . 1348) (nil tag-attr t 1347 . 1348) (nil tag-name "videodashboard" 1347 . 1348) (nil tag-type void 1347 . 1348) (nil font-lock-face web-mode-html-attr-equal-face 1347 . 1348) (nil ws-butler-chg chg 1341 . 1347) (nil tag-attr t 1341 . 1347) (nil tag-name "videodashboard" 1341 . 1347) (nil tag-type void 1341 . 1347) (nil font-lock-face web-mode-html-attr-name-face 1341 . 1347) (nil ws-butler-chg chg 1340 . 1341) (nil tag-attr-beg 0 1340 . 1341) (nil tag-attr t 1340 . 1341) (nil tag-name "videodashboard" 1340 . 1341) (nil tag-type void 1340 . 1341) (nil font-lock-face web-mode-html-attr-name-face 1340 . 1341) (nil ws-butler-chg chg 1339 . 1340) (nil tag-name "videodashboard" 1339 . 1340) (nil tag-type void 1339 . 1340) (nil ws-butler-chg chg 1338 . 1339) (nil block-side t 1338 . 1339) (nil block-end t 1338 . 1339) (nil block-token delimiter-end 1338 . 1339) (nil tag-name "videodashboard" 1338 . 1339) (nil tag-type void 1338 . 1339) (nil font-lock-face web-mode-block-delimiter-face 1338 . 1339) (nil ws-butler-chg chg 1331 . 1338) (nil block-side t 1331 . 1338) (nil tag-name "videodashboard" 1331 . 1338) (nil tag-type void 1331 . 1338) (nil face web-mode-variable-name-face 1331 . 1338) (nil ws-butler-chg chg 1330 . 1331) (nil block-beg 0 1330 . 1331) (nil block-controls 0 1330 . 1331) (nil block-side t 1330 . 1331) (nil block-token delimiter-beg 1330 . 1331) (nil tag-name "videodashboard" 1330 . 1331) (nil tag-type void 1330 . 1331) (nil font-lock-face web-mode-block-delimiter-face 1330 . 1331) (nil ws-butler-chg chg 1329 . 1330) (nil tag-name "videodashboard" 1329 . 1330) (nil tag-type void 1329 . 1330) (nil ws-butler-chg chg 1315 . 1329) (nil tag-name "videodashboard" 1315 . 1329) (nil tag-type void 1315 . 1329) (nil font-lock-face web-mode-html-tag-face 1315 . 1329) (nil ws-butler-chg chg 1314 . 1315) (nil tag-name "videodashboard" 1314 . 1315) (nil tag-type void 1314 . 1315) (nil tag-beg 25 1314 . 1315) (nil font-lock-face web-mode-html-tag-bracket-face 1314 . 1315) (1314 . 1369)) nil (26521 43846 378838 946000) 0 nil])
([nil nil ((1313 . 1318) (#("  " 0 2 (font-lock-face web-mode-comment-face tag-type comment ws-butler-chg chg)) . 1313) (1256 . 1257) (1226 . 1231) (#("  " 0 2 (font-lock-face web-mode-comment-face tag-type comment ws-butler-chg chg)) . 1226) (1210 . 1215) (#("  " 0 2 (font-lock-face web-mode-comment-face tag-type comment ws-butler-chg chg)) . 1210) (1201 . 1202) (#(" " 0 1 (font-lock-face web-mode-comment-face tag-type comment ws-butler-chg chg)) . -1187) (#("   " 0 3 (font-lock-face web-mode-comment-face tag-type comment ws-butler-chg chg)) . -1168) (#("   " 0 3 (font-lock-face web-mode-comment-face tag-type comment ws-butler-chg chg)) . -1095) (#(" " 0 1 (font-lock-face web-mode-comment-face tag-type comment ws-butler-chg chg)) . -1066) (1034 . 1035) (988 . 993) (#("  " 0 2 (font-lock-face web-mode-comment-face tag-type comment ws-butler-chg chg)) . 988) (929 . 1320) (#("<div style=\"display: flex; align-items: flex-start;\">
  <select bind:value={selectedPlayer}>
    {#each persons as person}
      <option value={person}>
        <img src={person.image} alt={person.name} width=\"20\" height=\"20\" />
        {person.name}
      </option>
    {/each}
  </select>

  {#if selectedPlayer}
    <VideoDashboard {videoId} persons={[selectedPlayer]} />
  {/if}" 0 1 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div") 1 4 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div") 4 5 (tag-type start tag-name "div") 5 6 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0) 6 10 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 10 11 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 11 51 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 51 52 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 5 tag-attr t) 52 53 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div") 56 57 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "select") 57 63 (font-lock-face web-mode-html-tag-face tag-type start tag-name "select") 63 64 (tag-type start tag-name "select") 64 65 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "select" tag-attr t tag-attr-beg 0) 65 74 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "select" tag-attr t) 74 75 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "select" tag-attr t) 75 76 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "select" tag-attr t block-token delimiter-beg block-side t block-controls 0 block-beg 0) 76 90 (face web-mode-variable-name-face tag-type start tag-name "select" tag-attr t block-side t) 90 91 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "select" tag-attr-end 10 tag-attr t block-token delimiter-end block-end t block-side t) 91 92 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "select") 97 98 (font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t block-controls ((open . "each")) block-beg 0) 98 99 (font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t) 99 103 (face web-mode-block-control-face block-side t) 103 104 (block-side t) 104 111 (face web-mode-variable-name-face block-side t) 111 112 (block-side t) 112 114 (face web-mode-keyword-face block-side t) 114 115 (block-side t) 115 121 (face web-mode-variable-name-face block-side t) 121 122 (font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-end t block-side t) 129 130 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "option") 130 136 (font-lock-face web-mode-html-tag-face tag-type start tag-name "option") 136 137 (tag-type start tag-name "option") 137 138 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "option" tag-attr t tag-attr-beg 0) 138 142 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "option" tag-attr t) 142 143 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "option" tag-attr t) 143 144 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "option" tag-attr t block-token delimiter-beg block-side t block-controls nil block-beg 0) 144 150 (face web-mode-variable-name-face tag-type start tag-name "option" tag-attr t block-side t) 150 151 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "option" tag-attr-end 5 tag-attr t block-token delimiter-end block-end t block-side t) 151 152 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "option") 161 162 (font-lock-face web-mode-html-tag-bracket-face tag-beg 25 tag-type void tag-name "img") 162 165 (font-lock-face web-mode-html-tag-face tag-type void tag-name "img") 165 166 (tag-type void tag-name "img") 166 167 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr t tag-attr-beg 0) 167 169 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr t) 169 170 (font-lock-face web-mode-html-attr-equal-face tag-type void tag-name "img" tag-attr t) 170 171 (font-lock-face web-mode-block-delimiter-face tag-type void tag-name "img" tag-attr t block-token delimiter-beg block-side t block-controls nil block-beg 0) 171 183 (face web-mode-variable-name-face tag-type void tag-name "img" tag-attr t block-side t) 183 184 (font-lock-face web-mode-block-delimiter-face tag-type void tag-name "img" tag-attr-end 3 tag-attr t block-token delimiter-end block-end t block-side t) 184 185 (tag-type void tag-name "img") 185 186 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr t tag-attr-beg 0) 186 188 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr t) 188 189 (font-lock-face web-mode-html-attr-equal-face tag-type void tag-name "img" tag-attr t) 189 190 (font-lock-face web-mode-block-delimiter-face tag-type void tag-name "img" tag-attr t block-token delimiter-beg block-side t block-controls nil block-beg 0) 190 201 (face web-mode-variable-name-face tag-type void tag-name "img" tag-attr t block-side t) 201 202 (font-lock-face web-mode-block-delimiter-face tag-type void tag-name "img" tag-attr-end 3 tag-attr t block-token delimiter-end block-end t block-side t) 202 203 (tag-type void tag-name "img") 203 204 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr t tag-attr-beg 0) 204 208 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr t) 208 209 (font-lock-face web-mode-html-attr-equal-face tag-type void tag-name "img" tag-attr t) 209 210 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "img" tag-attr t) 210 212 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "img" tag-attr t) 212 213 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "img" tag-attr-end 5 tag-attr t) 213 214 (tag-type void tag-name "img") 214 215 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr t tag-attr-beg 0) 215 220 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr t) 220 221 (font-lock-face web-mode-html-attr-equal-face tag-type void tag-name "img" tag-attr t) 221 222 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "img" tag-attr t) 222 224 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "img" tag-attr t) 224 225 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "img" tag-attr-end 6 tag-attr t) 225 226 (tag-type void tag-name "img") 226 227 (font-lock-face web-mode-html-tag-bracket-face tag-type void tag-name "img") 227 228 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type void tag-name "img") 237 238 (font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t block-controls nil block-beg 0) 238 249 (face web-mode-variable-name-face block-side t) 249 250 (font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-end t block-side t) 257 258 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "option") 258 259 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "option") 259 265 (font-lock-face web-mode-html-tag-face tag-type end tag-name "option") 265 266 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "option") 271 272 (font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t block-controls ((close . "each")) block-beg 0) 272 273 (font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t) 273 277 (face web-mode-block-control-face block-side t) 277 278 (font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-end t block-side t) 281 282 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "select") 282 283 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "select") 283 289 (font-lock-face web-mode-html-tag-face tag-type end tag-name "select") 289 290 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "select") 294 295 (font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t block-controls ((open . "if")) block-beg 0) 295 296 (font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t) 296 298 (face web-mode-block-control-face block-side t) 298 299 (block-side t) 299 313 (face web-mode-variable-name-face block-side t) 313 314 (font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-end t block-side t) 319 320 (font-lock-face web-mode-html-tag-bracket-face tag-beg 25 tag-type void tag-name "videodashboard") 320 334 (font-lock-face web-mode-html-tag-face tag-type void tag-name "videodashboard") 334 335 (tag-type void tag-name "videodashboard") 335 336 (font-lock-face web-mode-block-delimiter-face tag-type void tag-name "videodashboard" block-token delimiter-beg block-side t block-controls nil block-beg 0) 336 343 (face web-mode-variable-name-face tag-type void tag-name "videodashboard" block-side t) 343 344 (font-lock-face web-mode-block-delimiter-face tag-type void tag-name "videodashboard" block-token delimiter-end block-end t block-side t) 344 345 (tag-type void tag-name "videodashboard") 345 346 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "videodashboard" tag-attr t tag-attr-beg 0) 346 352 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "videodashboard" tag-attr t) 352 353 (font-lock-face web-mode-html-attr-equal-face tag-type void tag-name "videodashboard" tag-attr t) 353 354 (font-lock-face web-mode-block-delimiter-face tag-type void tag-name "videodashboard" tag-attr t block-token delimiter-beg block-side t block-controls nil block-beg 0) 354 355 (tag-type void tag-name "videodashboard" tag-attr t block-side t) 355 369 (face web-mode-variable-name-face tag-type void tag-name "videodashboard" tag-attr t block-side t) 369 370 (tag-type void tag-name "videodashboard" tag-attr t block-side t) 370 371 (font-lock-face web-mode-block-delimiter-face tag-type void tag-name "videodashboard" tag-attr-end 7 tag-attr t block-token delimiter-end block-end t block-side t) 371 372 (tag-type void tag-name "videodashboard") 372 373 (font-lock-face web-mode-html-tag-bracket-face tag-type void tag-name "videodashboard") 373 374 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type void tag-name "videodashboard") 377 378 (font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t block-controls ((close . "if")) block-beg 0) 378 379 (font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t) 379 381 (face web-mode-block-control-face block-side t) 381 382 (font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-end t block-side t)) . 929) (undo-tree-id27 . -382) (undo-tree-id28 . -382) (undo-tree-id29 . -382) (undo-tree-id30 . -374) (undo-tree-id31 . -377) (undo-tree-id32 . -382)) nil (26521 43846 378821 789000) 0 nil])
([nil nil ((#("persons={[selectedPlayer]} " 0 1 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "videodashboard" tag-attr t tag-attr-beg 0) 1 7 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "videodashboard" tag-attr t) 7 8 (font-lock-face web-mode-html-attr-equal-face tag-type void tag-name "videodashboard" tag-attr t) 8 9 (font-lock-face web-mode-block-delimiter-face tag-type void tag-name "videodashboard" tag-attr t block-token delimiter-beg block-side t block-controls 0 block-beg 0) 9 10 (tag-type void tag-name "videodashboard" tag-attr t block-side t) 10 24 (face web-mode-variable-name-face tag-type void tag-name "videodashboard" tag-attr t block-side t) 24 25 (tag-type void tag-name "videodashboard" tag-attr t block-side t) 25 26 (font-lock-face web-mode-block-delimiter-face tag-type void tag-name "videodashboard" tag-attr-end 7 tag-attr t block-token delimiter-end block-end t block-side t) 26 27 (tag-type void tag-name "videodashboard")) . 1356) (undo-tree-id26 . -27) (t 26521 41930 319599 250000)) nil (26521 43846 378814 761000) 0 nil])
([nil nil (("  " . -1328) (t 26521 41944 219517 345000)) nil (26521 43846 378813 150000) 0 nil])
([nil nil ((#("<VideoDashboard {videoId} />" 0 1 (font-lock-face web-mode-html-tag-bracket-face tag-beg 24 tag-type void tag-name "videodashboard" ws-butler-chg delete) 1 15 (font-lock-face web-mode-html-tag-face tag-type void tag-name "videodashboard") 15 16 (tag-type void tag-name "videodashboard") 16 17 (font-lock-face web-mode-block-delimiter-face tag-type void tag-name "videodashboard" block-token delimiter-beg block-side t block-controls 0 block-beg 0) 17 24 (face web-mode-variable-name-face tag-type void tag-name "videodashboard" block-side t) 24 25 (font-lock-face web-mode-block-delimiter-face tag-type void tag-name "videodashboard" block-token delimiter-end block-end t block-side t) 25 26 (tag-type void tag-name "videodashboard") 26 27 (font-lock-face web-mode-html-tag-bracket-face tag-type void tag-name "videodashboard") 27 28 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type void tag-name "videodashboard" rear-nonsticky t)) . 1328) (undo-tree-id23 . -26) (undo-tree-id24 . -28) (undo-tree-id25 . -28) 1356) nil (26521 43846 378811 905000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1363 . 1364) (nil rear-nonsticky t 1363 . 1364) (nil ws-butler-chg chg 1363 . 1364) (nil tag-name "videodashboard" 1363 . 1364) (nil tag-type void 1363 . 1364) (nil tag-end t 1363 . 1364) (nil font-lock-face web-mode-html-tag-bracket-face 1363 . 1364) (nil ws-butler-chg chg 1362 . 1363) (nil tag-name "videodashboard" 1362 . 1363) (nil tag-type void 1362 . 1363) (nil font-lock-face web-mode-html-tag-bracket-face 1362 . 1363) (nil ws-butler-chg chg 1361 . 1362) (nil tag-name "videodashboard" 1361 . 1362) (nil tag-type void 1361 . 1362) (nil ws-butler-chg chg 1360 . 1361) (nil block-side t 1360 . 1361) (nil block-end t 1360 . 1361) (nil block-token delimiter-end 1360 . 1361) (nil tag-name "videodashboard" 1360 . 1361) (nil tag-type void 1360 . 1361) (nil font-lock-face web-mode-block-delimiter-face 1360 . 1361) (nil ws-butler-chg chg 1353 . 1360) (nil block-side t 1353 . 1360) (nil tag-name "videodashboard" 1353 . 1360) (nil tag-type void 1353 . 1360) (nil face web-mode-variable-name-face 1353 . 1360) (nil ws-butler-chg chg 1352 . 1353) (nil block-beg 0 1352 . 1353) (nil block-controls 0 1352 . 1353) (nil block-side t 1352 . 1353) (nil block-token delimiter-beg 1352 . 1353) (nil tag-name "videodashboard" 1352 . 1353) (nil tag-type void 1352 . 1353) (nil font-lock-face web-mode-block-delimiter-face 1352 . 1353) (nil ws-butler-chg chg 1351 . 1352) (nil tag-name "videodashboard" 1351 . 1352) (nil tag-type void 1351 . 1352) (nil ws-butler-chg chg 1337 . 1351) (nil tag-name "videodashboard" 1337 . 1351) (nil tag-type void 1337 . 1351) (nil font-lock-face web-mode-html-tag-face 1337 . 1351) (nil ws-butler-chg chg 1336 . 1337) (nil tag-name "videodashboard" 1336 . 1337) (nil tag-type void 1336 . 1337) (nil tag-beg 24 1336 . 1337) (nil font-lock-face web-mode-html-tag-bracket-face 1336 . 1337) (1336 . 1364)) nil (26521 43846 378806 172000) 0 nil])
([nil nil ((1329 . 1344) (#("</div>" 0 1 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div") 1 2 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div") 2 5 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div") 5 6 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div")) . 1329) (undo-tree-id21 . -6) (undo-tree-id22 . -6) 1335) nil (26521 43846 378799 533000) 0 nil])
([nil nil ((#("<VideoDashboard {videoId} />" 0 1 (font-lock-face web-mode-html-tag-bracket-face tag-beg 24 tag-type void tag-name "videodashboard") 1 15 (font-lock-face web-mode-html-tag-face tag-type void tag-name "videodashboard") 15 16 (tag-type void tag-name "videodashboard") 16 17 (font-lock-face web-mode-block-delimiter-face tag-type void tag-name "videodashboard" block-token delimiter-beg block-side t block-controls 0 block-beg 0) 17 24 (face web-mode-variable-name-face tag-type void tag-name "videodashboard" block-side t) 24 25 (font-lock-face web-mode-block-delimiter-face tag-type void tag-name "videodashboard" block-token delimiter-end block-end t block-side t) 25 26 (tag-type void tag-name "videodashboard") 26 27 (font-lock-face web-mode-html-tag-bracket-face tag-type void tag-name "videodashboard") 27 28 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type void tag-name "videodashboard" rear-nonsticky t)) . -1345) (undo-tree-id20 . -28) 1373 (t 26521 41952 46137 529000)) nil (26521 43846 378797 114000) 0 nil])
([nil nil ((#("   " 0 3 (ws-butler-chg chg)) . -1306) (#(" " 0 1 (ws-butler-chg chg)) . -1248) (#("   " 0 3 (ws-butler-chg chg)) . -1223) (#("   " 0 3 (ws-butler-chg chg)) . -1210) (#(" " 0 1 (ws-butler-chg chg)) . -1200) (1180 . 1186) (#("     " 0 5 (ws-butler-chg chg)) . 1180) (1158 . 1166) (#("     " 0 5 (ws-butler-chg chg)) . 1158) (1082 . 1090) (#("     " 0 5 (ws-butler-chg chg)) . 1082) (1052 . 1058) (#("     " 0 5 (ws-butler-chg chg)) . 1052) (#(" " 0 1 (ws-butler-chg chg)) . -1026) (#("   " 0 3 (ws-butler-chg chg)) . -985) (929 . 1319) (#("<!-- <div style=\"display: flex; align-items: flex-start;\">
     <select bind:value={selectedPlayer}>
     {#each persons as person}
     <option value={person}>
     <img src={person.image} alt={person.name} width=\"20\" height=\"20\" />
     {person.name}
     </option>
     {/each}
     </select>

     {#if selectedPlayer}
     <VideoDashboard {videoId} persons={[selectedPlayer]} />
     {/if} -->
" 0 1 (font-lock-face web-mode-comment-face tag-beg 0 tag-type comment) 1 64 (font-lock-face web-mode-comment-face tag-type comment) 64 65 (font-lock-face web-mode-comment-face tag-type comment) 65 83 (font-lock-face web-mode-comment-face tag-type comment) 83 84 (font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-beg block-side t block-controls 0 block-beg 0) 84 98 (face web-mode-variable-name-face tag-type comment block-side t) 98 99 (font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-end block-end t block-side t) 99 106 (font-lock-face web-mode-comment-face tag-type comment) 106 107 (font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-beg block-side t block-controls 0 block-beg 0) 107 108 (font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-beg block-side t) 108 112 (face web-mode-block-control-face tag-type comment block-side t) 112 113 (tag-type comment block-side t) 113 120 (face web-mode-variable-name-face tag-type comment block-side t) 120 121 (tag-type comment block-side t) 121 123 (face web-mode-keyword-face tag-type comment block-side t) 123 124 (tag-type comment block-side t) 124 130 (face web-mode-variable-name-face tag-type comment block-side t) 130 131 (font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-end block-end t block-side t) 131 137 (font-lock-face web-mode-comment-face tag-type comment) 137 138 (font-lock-face web-mode-comment-face tag-type comment) 138 151 (font-lock-face web-mode-comment-face tag-type comment) 151 152 (font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-beg block-side t block-controls 0 block-beg 0) 152 158 (face web-mode-variable-name-face tag-type comment block-side t) 158 159 (font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-end block-end t block-side t) 159 166 (font-lock-face web-mode-comment-face tag-type comment) 166 167 (font-lock-face web-mode-comment-face tag-type comment) 167 175 (font-lock-face web-mode-comment-face tag-type comment) 175 176 (font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-beg block-side t block-controls 0 block-beg 0) 176 188 (face web-mode-variable-name-face tag-type comment block-side t) 188 189 (font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-end block-end t block-side t) 189 194 (font-lock-face web-mode-comment-face tag-type comment) 194 195 (font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-beg block-side t block-controls 0 block-beg 0) 195 206 (face web-mode-variable-name-face tag-type comment block-side t) 206 207 (font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-end block-end t block-side t) 207 215 (font-lock-face web-mode-comment-face tag-type comment) 215 217 (font-lock-face web-mode-comment-face tag-type comment) 217 227 (font-lock-face web-mode-comment-face tag-type comment) 227 229 (font-lock-face web-mode-comment-face tag-type comment) 229 239 (font-lock-face web-mode-comment-face tag-type comment) 239 240 (font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-beg block-side t block-controls 0 block-beg 0) 240 251 (face web-mode-variable-name-face tag-type comment block-side t) 251 252 (font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-end block-end t block-side t) 252 258 (font-lock-face web-mode-comment-face tag-type comment) 258 259 (font-lock-face web-mode-comment-face tag-type comment) 259 273 (font-lock-face web-mode-comment-face tag-type comment) 273 274 (font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-beg block-side t block-controls 0 block-beg 0) 274 275 (font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-beg block-side t) 275 279 (face web-mode-block-control-face tag-type comment block-side t) 279 280 (font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-end block-end t block-side t) 280 286 (font-lock-face web-mode-comment-face tag-type comment) 286 287 (font-lock-face web-mode-comment-face tag-type comment) 287 302 (font-lock-face web-mode-comment-face tag-type comment) 302 303 (font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-beg block-side t block-controls 0 block-beg 0) 303 304 (font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-beg block-side t) 304 306 (face web-mode-block-control-face tag-type comment block-side t) 306 307 (tag-type comment block-side t) 307 321 (face web-mode-variable-name-face tag-type comment block-side t) 321 322 (font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-end block-end t block-side t) 322 344 (font-lock-face web-mode-comment-face tag-type comment) 344 345 (font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-beg block-side t block-controls 0 block-beg 0) 345 352 (face web-mode-variable-name-face tag-type comment block-side t) 352 353 (font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-end block-end t block-side t) 353 362 (font-lock-face web-mode-comment-face tag-type comment) 362 363 (font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-beg block-side t block-controls 0 block-beg 0) 363 364 (tag-type comment block-side t) 364 378 (face web-mode-variable-name-face tag-type comment block-side t) 378 379 (tag-type comment block-side t) 379 380 (font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-end block-end t block-side t) 380 389 (font-lock-face web-mode-comment-face tag-type comment) 389 390 (font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-beg block-side t block-controls 0 block-beg 0) 390 391 (font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-beg block-side t) 391 393 (face web-mode-block-control-face tag-type comment block-side t) 393 394 (font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-end block-end t block-side t) 394 397 (font-lock-face web-mode-comment-face tag-type comment) 397 398 (font-lock-face web-mode-comment-face tag-end t tag-type comment)) . 929) (undo-tree-id14 . -59) (undo-tree-id15 . -64) (undo-tree-id16 . -64) (undo-tree-id17 . -295) (undo-tree-id18 . -399) (undo-tree-id19 . -399)) nil (26521 43846 378793 339000) 0 nil])
([nil nil ((929 . 1328) (#("<div style=\"display: flex; align-items: flex-start;\">
     <select bind:value={selectedPlayer}>
     {#each persons as person}
     <option value={person}>
     <img src={person.image} alt={person.name} width=\"20\" height=\"20\" />
     {person.name}
     </option>
     {/each}
     </select>

     {#if selectedPlayer}
     <VideoDashboard {videoId} persons={[selectedPlayer]} />
     {/if}
" 0 1 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div") 1 4 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div") 4 5 (tag-type start tag-name "div") 5 6 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0) 6 10 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 10 11 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 11 51 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 51 52 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 5 tag-attr t) 52 53 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div") 56 59 (ws-butler-chg chg) 59 60 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "select") 60 66 (font-lock-face web-mode-html-tag-face tag-type start tag-name "select") 66 67 (tag-type start tag-name "select") 67 68 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "select" tag-attr t tag-attr-beg 0) 68 77 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "select" tag-attr t) 77 78 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "select" tag-attr t) 78 79 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "select" tag-attr t block-token delimiter-beg block-side t block-controls 0 block-beg 0) 79 93 (face web-mode-variable-name-face tag-type start tag-name "select" tag-attr t block-side t) 93 94 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "select" tag-attr-end 10 tag-attr t block-token delimiter-end block-end t block-side t) 94 95 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "select") 100 101 (ws-butler-chg chg) 101 102 (font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t block-controls 0 block-beg 0) 102 103 (font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t) 103 107 (face web-mode-block-control-face block-side t) 107 108 (block-side t) 108 115 (face web-mode-variable-name-face block-side t) 115 116 (block-side t) 116 118 (face web-mode-keyword-face block-side t) 118 119 (block-side t) 119 125 (face web-mode-variable-name-face block-side t) 125 126 (font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-end t block-side t) 127 132 (ws-butler-chg chg) 132 133 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "option") 133 139 (font-lock-face web-mode-html-tag-face tag-type start tag-name "option") 139 140 (tag-type start tag-name "option") 140 141 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "option" tag-attr t tag-attr-beg 0) 141 145 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "option" tag-attr t) 145 146 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "option" tag-attr t) 146 147 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "option" tag-attr t block-token delimiter-beg block-side t block-controls 0 block-beg 0) 147 153 (face web-mode-variable-name-face tag-type start tag-name "option" tag-attr t block-side t) 153 154 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "option" tag-attr-end 5 tag-attr t block-token delimiter-end block-end t block-side t) 154 155 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "option") 156 161 (ws-butler-chg chg) 161 162 (font-lock-face web-mode-html-tag-bracket-face tag-beg 25 tag-type void tag-name "img") 162 165 (font-lock-face web-mode-html-tag-face tag-type void tag-name "img") 165 166 (tag-type void tag-name "img") 166 167 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr t tag-attr-beg 0) 167 169 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr t) 169 170 (font-lock-face web-mode-html-attr-equal-face tag-type void tag-name "img" tag-attr t) 170 171 (font-lock-face web-mode-block-delimiter-face tag-type void tag-name "img" tag-attr t block-token delimiter-beg block-side t block-controls 0 block-beg 0) 171 183 (face web-mode-variable-name-face tag-type void tag-name "img" tag-attr t block-side t) 183 184 (font-lock-face web-mode-block-delimiter-face tag-type void tag-name "img" tag-attr-end 3 tag-attr t block-token delimiter-end block-end t block-side t) 184 185 (tag-type void tag-name "img") 185 186 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr t tag-attr-beg 0) 186 188 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr t) 188 189 (font-lock-face web-mode-html-attr-equal-face tag-type void tag-name "img" tag-attr t) 189 190 (font-lock-face web-mode-block-delimiter-face tag-type void tag-name "img" tag-attr t block-token delimiter-beg block-side t block-controls 0 block-beg 0) 190 201 (face web-mode-variable-name-face tag-type void tag-name "img" tag-attr t block-side t) 201 202 (font-lock-face web-mode-block-delimiter-face tag-type void tag-name "img" tag-attr-end 3 tag-attr t block-token delimiter-end block-end t block-side t) 202 203 (tag-type void tag-name "img") 203 204 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr t tag-attr-beg 0) 204 208 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr t) 208 209 (font-lock-face web-mode-html-attr-equal-face tag-type void tag-name "img" tag-attr t) 209 210 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "img" tag-attr t) 210 212 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "img" tag-attr t) 212 213 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "img" tag-attr-end 5 tag-attr t) 213 214 (tag-type void tag-name "img") 214 215 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr t tag-attr-beg 0) 215 220 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr t) 220 221 (font-lock-face web-mode-html-attr-equal-face tag-type void tag-name "img" tag-attr t) 221 222 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "img" tag-attr t) 222 224 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "img" tag-attr t) 224 225 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "img" tag-attr-end 6 tag-attr t) 225 226 (tag-type void tag-name "img") 226 227 (font-lock-face web-mode-html-tag-bracket-face tag-type void tag-name "img") 227 228 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type void tag-name "img") 229 234 (ws-butler-chg chg) 234 235 (font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t block-controls 0 block-beg 0) 235 246 (face web-mode-variable-name-face block-side t) 246 247 (font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-end t block-side t) 248 253 (ws-butler-chg chg) 253 254 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "option") 254 255 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "option") 255 261 (font-lock-face web-mode-html-tag-face tag-type end tag-name "option") 261 262 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "option") 267 268 (ws-butler-chg chg) 268 269 (font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t block-controls 0 block-beg 0) 269 270 (font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t) 270 274 (face web-mode-block-control-face block-side t) 274 275 (font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-end t block-side t) 278 281 (ws-butler-chg chg) 281 282 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "select") 282 283 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "select") 283 289 (font-lock-face web-mode-html-tag-face tag-type end tag-name "select") 289 290 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "select") 294 297 (ws-butler-chg chg) 297 298 (font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t block-controls 0 block-beg 0) 298 299 (font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t) 299 301 (face web-mode-block-control-face block-side t) 301 302 (block-side t) 302 316 (face web-mode-variable-name-face block-side t) 316 317 (font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-end t block-side t) 322 323 (ws-butler-chg chg) 323 324 (font-lock-face web-mode-html-tag-bracket-face tag-beg 25 tag-type void tag-name "videodashboard") 324 338 (font-lock-face web-mode-html-tag-face tag-type void tag-name "videodashboard") 338 339 (tag-type void tag-name "videodashboard") 339 340 (font-lock-face web-mode-block-delimiter-face tag-type void tag-name "videodashboard" block-token delimiter-beg block-side t block-controls 0 block-beg 0) 340 347 (face web-mode-variable-name-face tag-type void tag-name "videodashboard" block-side t) 347 348 (font-lock-face web-mode-block-delimiter-face tag-type void tag-name "videodashboard" block-token delimiter-end block-end t block-side t) 348 349 (tag-type void tag-name "videodashboard") 349 350 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "videodashboard" tag-attr t tag-attr-beg 0) 350 356 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "videodashboard" tag-attr t) 356 357 (font-lock-face web-mode-html-attr-equal-face tag-type void tag-name "videodashboard" tag-attr t) 357 358 (font-lock-face web-mode-block-delimiter-face tag-type void tag-name "videodashboard" tag-attr t block-token delimiter-beg block-side t block-controls 0 block-beg 0) 358 359 (tag-type void tag-name "videodashboard" tag-attr t block-side t) 359 373 (face web-mode-variable-name-face tag-type void tag-name "videodashboard" tag-attr t block-side t) 373 374 (tag-type void tag-name "videodashboard" tag-attr t block-side t) 374 375 (font-lock-face web-mode-block-delimiter-face tag-type void tag-name "videodashboard" tag-attr-end 7 tag-attr t block-token delimiter-end block-end t block-side t) 375 376 (tag-type void tag-name "videodashboard") 376 377 (font-lock-face web-mode-html-tag-bracket-face tag-type void tag-name "videodashboard") 377 378 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type void tag-name "videodashboard") 381 384 (ws-butler-chg chg) 384 385 (font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t block-controls 0 block-beg 0) 385 386 (font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t) 386 388 (face web-mode-block-control-face block-side t) 388 389 (font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-end t block-side t)) . 929) (985 . 988) (1026 . 1027) (1052 . 1057) ("      " . 1052) (1082 . 1087) ("        " . 1082) (1158 . 1163) ("        " . 1158) (1180 . 1185) ("      " . 1180) (1200 . 1201) (1210 . 1213) (1223 . 1226) (1248 . 1249) (1306 . 1309) (t 26521 42117 888431 230000)) nil (26521 43846 378785 667000) 0 nil])
([nil nil ((1345 . 1373)) nil (26521 43846 378783 203000) 0 nil])
([nil nil ((1329 . 1335) (#("<!-- </div> -->" 0 1 (font-lock-face web-mode-comment-face tag-beg 0 tag-type comment) 1 14 (font-lock-face web-mode-comment-face tag-type comment) 14 15 (font-lock-face web-mode-comment-face tag-end t tag-type comment)) . 1329)) nil (26521 43846 378782 589000) 0 nil])
([nil nil ((#("<VideoDashboard {videoId} />" 0 1 (font-lock-face web-mode-html-tag-bracket-face tag-beg 24 tag-type void tag-name "videodashboard" ws-butler-chg chg) 1 15 (font-lock-face web-mode-html-tag-face tag-type void tag-name "videodashboard" ws-butler-chg chg) 15 16 (tag-type void tag-name "videodashboard" ws-butler-chg chg) 16 17 (font-lock-face web-mode-block-delimiter-face tag-type void tag-name "videodashboard" block-token delimiter-beg block-side t block-controls 0 block-beg 0 ws-butler-chg chg) 17 24 (face web-mode-variable-name-face tag-type void tag-name "videodashboard" block-side t ws-butler-chg chg) 24 25 (font-lock-face web-mode-block-delimiter-face tag-type void tag-name "videodashboard" block-token delimiter-end block-end t block-side t ws-butler-chg chg) 25 26 (tag-type void tag-name "videodashboard" ws-butler-chg chg) 26 27 (font-lock-face web-mode-html-tag-bracket-face tag-type void tag-name "videodashboard" ws-butler-chg chg) 27 28 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type void tag-name "videodashboard" ws-butler-chg chg rear-nonsticky t)) . 1336) (nil tag-name "videodashboard" 1336 . 1337) (nil ws-butler-chg nil 1336 . 1337) (nil tag-name "videodashboard" 1337 . 1351) (nil ws-butler-chg nil 1337 . 1351) (nil tag-name "videodashboard" 1351 . 1352) (nil ws-butler-chg nil 1351 . 1352) (nil tag-name "videodashboard" 1352 . 1353) (nil ws-butler-chg nil 1352 . 1353) (nil tag-name "videodashboard" 1353 . 1360) (nil ws-butler-chg nil 1353 . 1360) (nil tag-name "videodashboard" 1360 . 1361) (nil ws-butler-chg nil 1360 . 1361) (nil tag-name "videodashboard" 1361 . 1362) (nil ws-butler-chg nil 1361 . 1362) (nil tag-name "videodashboard" 1362 . 1363) (nil ws-butler-chg nil 1362 . 1363) (nil tag-name "videodashboard" 1363 . 1364) (nil ws-butler-chg nil 1363 . 1364) (nil rear-nonsticky nil 1363 . 1364) (nil rear-nonsticky t 1363 . 1364)) nil (26521 43846 378781 109000) 0 nil])
([nil nil ((1328 . 1356)) nil (26521 43846 378778 144000) 0 nil])
([nil nil ((nil ws-butler-chg delete 1330 . 1331) (1328 . 1330)) nil (26521 43846 378777 467000) 0 nil])
([nil nil ((1356 . 1383)) nil (26521 43846 378776 692000) 0 nil])
([nil nil ((929 . 1311) (#("<!-- <div style=\"display: flex; align-items: flex-start;\">
  <select bind:value={selectedPlayer}>
    {#each persons as person}
      <option value={person}>
        <img src={person.image} alt={person.name} width=\"20\" height=\"20\" />
        {person.name}
      </option>
    {/each}
  </select>

  {#if selectedPlayer}
    <VideoDashboard {videoId} persons={[selectedPlayer]} />
  {/if} -->" 0 1 (font-lock-face web-mode-comment-face tag-beg 0 tag-type comment) 1 59 (font-lock-face web-mode-comment-face tag-type comment) 59 61 (font-lock-face web-mode-comment-face tag-type comment ws-butler-chg chg) 61 62 (font-lock-face web-mode-comment-face tag-type comment) 62 80 (font-lock-face web-mode-comment-face tag-type comment) 80 81 (font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-beg block-side t block-controls 0 block-beg 0) 81 95 (face web-mode-variable-name-face tag-type comment block-side t) 95 96 (font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-end block-end t block-side t) 96 102 (font-lock-face web-mode-comment-face tag-type comment) 102 103 (font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-beg block-side t block-controls 0 block-beg 0) 103 104 (font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-beg block-side t) 104 108 (face web-mode-block-control-face tag-type comment block-side t) 108 109 (tag-type comment block-side t) 109 116 (face web-mode-variable-name-face tag-type comment block-side t) 116 117 (tag-type comment block-side t) 117 119 (face web-mode-keyword-face tag-type comment block-side t) 119 120 (tag-type comment block-side t) 120 126 (face web-mode-variable-name-face tag-type comment block-side t) 126 127 (font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-end block-end t block-side t) 127 133 (font-lock-face web-mode-comment-face tag-type comment) 133 134 (font-lock-face web-mode-comment-face tag-type comment ws-butler-chg chg) 134 135 (font-lock-face web-mode-comment-face tag-type comment) 135 148 (font-lock-face web-mode-comment-face tag-type comment) 148 149 (font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-beg block-side t block-controls 0 block-beg 0) 149 155 (face web-mode-variable-name-face tag-type comment block-side t) 155 156 (font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-end block-end t block-side t) 156 163 (font-lock-face web-mode-comment-face tag-type comment) 163 166 (font-lock-face web-mode-comment-face tag-type comment ws-butler-chg chg) 166 167 (font-lock-face web-mode-comment-face tag-type comment) 167 175 (font-lock-face web-mode-comment-face tag-type comment) 175 176 (font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-beg block-side t block-controls 0 block-beg 0) 176 188 (face web-mode-variable-name-face tag-type comment block-side t) 188 189 (font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-end block-end t block-side t) 189 194 (font-lock-face web-mode-comment-face tag-type comment) 194 195 (font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-beg block-side t block-controls 0 block-beg 0) 195 206 (face web-mode-variable-name-face tag-type comment block-side t) 206 207 (font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-end block-end t block-side t) 207 215 (font-lock-face web-mode-comment-face tag-type comment) 215 217 (font-lock-face web-mode-comment-face tag-type comment) 217 227 (font-lock-face web-mode-comment-face tag-type comment) 227 229 (font-lock-face web-mode-comment-face tag-type comment) 229 239 (font-lock-face web-mode-comment-face tag-type comment) 239 242 (font-lock-face web-mode-comment-face tag-type comment ws-butler-chg chg) 242 243 (font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-beg block-side t block-controls 0 block-beg 0) 243 254 (face web-mode-variable-name-face tag-type comment block-side t) 254 255 (font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-end block-end t block-side t) 255 261 (font-lock-face web-mode-comment-face tag-type comment) 261 262 (font-lock-face web-mode-comment-face tag-type comment ws-butler-chg chg) 262 263 (font-lock-face web-mode-comment-face tag-type comment) 263 276 (font-lock-face web-mode-comment-face tag-type comment) 276 277 (font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-beg block-side t block-controls 0 block-beg 0) 277 278 (font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-beg block-side t) 278 282 (face web-mode-block-control-face tag-type comment block-side t) 282 283 (font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-end block-end t block-side t) 283 284 (font-lock-face web-mode-comment-face tag-type comment) 284 286 (font-lock-face web-mode-comment-face tag-type comment ws-butler-chg chg) 286 287 (font-lock-face web-mode-comment-face tag-type comment) 287 297 (font-lock-face web-mode-comment-face tag-type comment) 297 299 (font-lock-face web-mode-comment-face tag-type comment ws-butler-chg chg) 299 300 (font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-beg block-side t block-controls 0 block-beg 0) 300 301 (font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-beg block-side t) 301 303 (face web-mode-block-control-face tag-type comment block-side t) 303 304 (tag-type comment block-side t) 304 318 (face web-mode-variable-name-face tag-type comment block-side t) 318 319 (font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-end block-end t block-side t) 319 340 (font-lock-face web-mode-comment-face tag-type comment) 340 341 (font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-beg block-side t block-controls 0 block-beg 0) 341 348 (face web-mode-variable-name-face tag-type comment block-side t) 348 349 (font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-end block-end t block-side t) 349 358 (font-lock-face web-mode-comment-face tag-type comment) 358 359 (font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-beg block-side t block-controls 0 block-beg 0) 359 360 (tag-type comment block-side t) 360 374 (face web-mode-variable-name-face tag-type comment block-side t) 374 375 (tag-type comment block-side t) 375 376 (font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-end block-end t block-side t) 376 380 (font-lock-face web-mode-comment-face tag-type comment) 380 382 (font-lock-face web-mode-comment-face tag-type comment ws-butler-chg chg) 382 383 (font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-beg block-side t block-controls 0 block-beg 0) 383 384 (font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-beg block-side t) 384 386 (face web-mode-block-control-face tag-type comment block-side t) 386 387 (font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-end block-end t block-side t) 387 390 (font-lock-face web-mode-comment-face tag-type comment) 390 391 (font-lock-face web-mode-comment-face tag-end t tag-type comment)) . 929) (undo-tree-id8 . -59) (undo-tree-id9 . -59) (undo-tree-id10 . -59) (undo-tree-id11 . -295) (988 . 990) (#("     " 0 5 (font-lock-face web-mode-comment-face tag-type comment)) . 988) (undo-tree-id12 . -5) (undo-tree-id13 . -5) (#(" " 0 1 (font-lock-face web-mode-comment-face tag-type comment)) . 1034) (1066 . 1067) (1095 . 1098) (1168 . 1171) (1187 . 1188) (#(" " 0 1 (font-lock-face web-mode-comment-face tag-type comment)) . 1201) (1210 . 1212) (#("     " 0 5 (font-lock-face web-mode-comment-face tag-type comment)) . 1210) (1226 . 1228) (#("     " 0 5 (font-lock-face web-mode-comment-face tag-type comment)) . 1226) (#(" " 0 1 (font-lock-face web-mode-comment-face tag-type comment)) . 1256) (1313 . 1315) (#("     " 0 5 (font-lock-face web-mode-comment-face tag-type comment)) . 1313)) nil (26521 43846 378774 64000) 0 nil])
([nil nil ((#("<VideoDashboard {videoId} persons={[selectedPlayer]} />" 0 1 (font-lock-face web-mode-html-tag-bracket-face tag-beg 25 tag-type void tag-name "videodashboard" ws-butler-chg chg) 1 15 (font-lock-face web-mode-html-tag-face tag-type void tag-name "videodashboard" ws-butler-chg chg) 15 16 (tag-type void tag-name "videodashboard" ws-butler-chg chg) 16 17 (font-lock-face web-mode-block-delimiter-face tag-type void tag-name "videodashboard" block-token delimiter-beg block-side t block-controls 0 block-beg 0 ws-butler-chg chg) 17 24 (face web-mode-variable-name-face tag-type void tag-name "videodashboard" block-side t ws-butler-chg chg) 24 25 (font-lock-face web-mode-block-delimiter-face tag-type void tag-name "videodashboard" block-token delimiter-end block-end t block-side t ws-butler-chg chg) 25 26 (tag-type void tag-name "videodashboard" ws-butler-chg chg) 26 27 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "videodashboard" tag-attr t tag-attr-beg 0 ws-butler-chg chg) 27 33 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "videodashboard" tag-attr t ws-butler-chg chg) 33 34 (font-lock-face web-mode-html-attr-equal-face tag-type void tag-name "videodashboard" tag-attr t ws-butler-chg chg) 34 35 (font-lock-face web-mode-block-delimiter-face tag-type void tag-name "videodashboard" tag-attr t block-token delimiter-beg block-side t block-controls 0 block-beg 0 ws-butler-chg chg) 35 36 (tag-type void tag-name "videodashboard" tag-attr t block-side t ws-butler-chg chg) 36 50 (face web-mode-variable-name-face tag-type void tag-name "videodashboard" tag-attr t block-side t ws-butler-chg chg) 50 51 (tag-type void tag-name "videodashboard" tag-attr t block-side t ws-butler-chg chg) 51 52 (font-lock-face web-mode-block-delimiter-face tag-type void tag-name "videodashboard" tag-attr-end 7 tag-attr t block-token delimiter-end block-end t block-side t ws-butler-chg chg) 52 53 (tag-type void tag-name "videodashboard" ws-butler-chg chg) 53 54 (font-lock-face web-mode-html-tag-bracket-face tag-type void tag-name "videodashboard" ws-butler-chg chg) 54 55 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type void tag-name "videodashboard" ws-butler-chg chg rear-nonsticky t)) . 1314) (undo-tree-id7 . -26) (nil tag-name "videodashboard" 1314 . 1315) (nil ws-butler-chg nil 1314 . 1315) (nil tag-name "videodashboard" 1315 . 1329) (nil ws-butler-chg nil 1315 . 1329) (nil tag-name "videodashboard" 1329 . 1330) (nil ws-butler-chg nil 1329 . 1330) (nil tag-name "videodashboard" 1330 . 1331) (nil ws-butler-chg nil 1330 . 1331) (nil tag-name "videodashboard" 1331 . 1338) (nil ws-butler-chg nil 1331 . 1338) (nil tag-name "videodashboard" 1338 . 1339) (nil ws-butler-chg nil 1338 . 1339) (nil tag-name "videodashboard" 1339 . 1340) (nil ws-butler-chg nil 1339 . 1340) (nil tag-name "videodashboard" 1340 . 1341) (nil ws-butler-chg nil 1340 . 1341) (nil tag-name "videodashboard" 1341 . 1347) (nil ws-butler-chg nil 1341 . 1347) (nil tag-name "videodashboard" 1347 . 1348) (nil ws-butler-chg nil 1347 . 1348) (nil tag-name "videodashboard" 1348 . 1349) (nil ws-butler-chg nil 1348 . 1349) (nil tag-name "videodashboard" 1349 . 1350) (nil ws-butler-chg nil 1349 . 1350) (nil tag-name "videodashboard" 1350 . 1364) (nil ws-butler-chg nil 1350 . 1364) (nil tag-name "videodashboard" 1364 . 1365) (nil ws-butler-chg nil 1364 . 1365) (nil tag-name "videodashboard" 1365 . 1366) (nil ws-butler-chg nil 1365 . 1366) (nil tag-name "videodashboard" 1366 . 1367) (nil ws-butler-chg nil 1366 . 1367) (nil tag-name "videodashboard" 1367 . 1368) (nil ws-butler-chg nil 1367 . 1368) (nil tag-name "videodashboard" 1368 . 1369) (nil rear-nonsticky nil 1368 . 1369) (nil ws-butler-chg nil 1368 . 1369) (nil rear-nonsticky t 1368 . 1369)) nil (26521 43846 378765 820000) 0 nil])
([nil nil (("
  " . 1311) (undo-tree-id4 . -3) (undo-tree-id5 . -1) (undo-tree-id6 . -3)) nil (26521 43846 378759 544000) 0 nil])
([nil nil ((980 . 1521) (#("\">
  <select bind:value={selectedPlayer}>
    {#each persons as person}
      <option value={person}>
        <img src={person.image} alt={person.name} width=\"20\" height=\"20\" />
        {person.name}
      </option>
    {/each}
  </select" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 5 tag-attr t) 1 2 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div") 5 6 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "select") 6 12 (font-lock-face web-mode-html-tag-face tag-type start tag-name "select") 12 13 (tag-type start tag-name "select") 13 14 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "select" tag-attr t tag-attr-beg 0) 14 23 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "select" tag-attr t) 23 24 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "select" tag-attr t) 24 25 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "select" tag-attr t block-token delimiter-beg block-side t block-controls 0 block-beg 0) 25 39 (face web-mode-variable-name-face tag-type start tag-name "select" tag-attr t block-side t) 39 40 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "select" tag-attr-end 10 tag-attr t block-token delimiter-end block-end t block-side t) 40 41 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "select") 46 47 (font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t block-controls 0 block-beg 0) 47 48 (font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t) 48 52 (face web-mode-block-control-face block-side t) 52 53 (block-side t) 53 60 (face web-mode-variable-name-face block-side t) 60 61 (block-side t) 61 63 (face web-mode-keyword-face block-side t) 63 64 (block-side t) 64 70 (face web-mode-variable-name-face block-side t) 70 71 (font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-end t block-side t) 78 79 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "option") 79 85 (font-lock-face web-mode-html-tag-face tag-type start tag-name "option") 85 86 (tag-type start tag-name "option") 86 87 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "option" tag-attr t tag-attr-beg 0) 87 91 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "option" tag-attr t) 91 92 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "option" tag-attr t) 92 93 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "option" tag-attr t block-token delimiter-beg block-side t block-controls 0 block-beg 0) 93 99 (face web-mode-variable-name-face tag-type start tag-name "option" tag-attr t block-side t) 99 100 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "option" tag-attr-end 5 tag-attr t block-token delimiter-end block-end t block-side t) 100 101 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "option") 110 111 (font-lock-face web-mode-html-tag-bracket-face tag-beg 25 tag-type void tag-name "img") 111 114 (font-lock-face web-mode-html-tag-face tag-type void tag-name "img") 114 115 (tag-type void tag-name "img") 115 116 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr t tag-attr-beg 0) 116 118 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr t) 118 119 (font-lock-face web-mode-html-attr-equal-face tag-type void tag-name "img" tag-attr t) 119 120 (font-lock-face web-mode-block-delimiter-face tag-type void tag-name "img" tag-attr t block-token delimiter-beg block-side t block-controls 0 block-beg 0) 120 132 (face web-mode-variable-name-face tag-type void tag-name "img" tag-attr t block-side t) 132 133 (font-lock-face web-mode-block-delimiter-face tag-type void tag-name "img" tag-attr-end 3 tag-attr t block-token delimiter-end block-end t block-side t) 133 134 (tag-type void tag-name "img") 134 135 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr t tag-attr-beg 0) 135 137 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr t) 137 138 (font-lock-face web-mode-html-attr-equal-face tag-type void tag-name "img" tag-attr t) 138 139 (font-lock-face web-mode-block-delimiter-face tag-type void tag-name "img" tag-attr t block-token delimiter-beg block-side t block-controls 0 block-beg 0) 139 150 (face web-mode-variable-name-face tag-type void tag-name "img" tag-attr t block-side t) 150 151 (font-lock-face web-mode-block-delimiter-face tag-type void tag-name "img" tag-attr-end 3 tag-attr t block-token delimiter-end block-end t block-side t) 151 152 (tag-type void tag-name "img") 152 153 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr t tag-attr-beg 0) 153 157 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr t) 157 158 (font-lock-face web-mode-html-attr-equal-face tag-type void tag-name "img" tag-attr t) 158 159 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "img" tag-attr t) 159 161 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "img" tag-attr t) 161 162 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "img" tag-attr-end 5 tag-attr t) 162 163 (tag-type void tag-name "img") 163 164 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr t tag-attr-beg 0) 164 169 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr t) 169 170 (font-lock-face web-mode-html-attr-equal-face tag-type void tag-name "img" tag-attr t) 170 171 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "img" tag-attr t) 171 173 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "img" tag-attr t) 173 174 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "img" tag-attr-end 6 tag-attr t) 174 175 (tag-type void tag-name "img") 175 176 (font-lock-face web-mode-html-tag-bracket-face tag-type void tag-name "img") 176 177 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type void tag-name "img") 186 187 (font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t block-controls 0 block-beg 0) 187 198 (face web-mode-variable-name-face block-side t) 198 199 (font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-end t block-side t) 206 207 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "option") 207 208 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "option") 208 214 (font-lock-face web-mode-html-tag-face tag-type end tag-name "option") 214 215 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "option") 220 221 (font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t block-controls 0 block-beg 0) 221 222 (font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t) 222 226 (face web-mode-block-control-face block-side t) 226 227 (font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-end t block-side t) 230 231 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "select") 231 232 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "select") 232 238 (font-lock-face web-mode-html-tag-face tag-type end tag-name "select")) . 980) (t 26521 42136 78311 589000)) nil (26521 43853 169610 655000) 0 (:visualizer [0 1 0 #<marker in no buffer>])])
([nil nil ((#("  {#if selectedPlayer}
    <VideoDashboard {videoId} persons={[selectedPlayer]} />
  {/if}" 2 3 (font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t block-controls 0 block-beg 0) 3 4 (font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t) 4 6 (face web-mode-block-control-face block-side t) 6 7 (block-side t) 7 21 (face web-mode-variable-name-face block-side t) 21 22 (font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-end t block-side t) 27 28 (font-lock-face web-mode-html-tag-bracket-face tag-beg 25 tag-type void tag-name "videodashboard") 28 42 (font-lock-face web-mode-html-tag-face tag-type void tag-name "videodashboard") 42 43 (tag-type void tag-name "videodashboard") 43 44 (font-lock-face web-mode-block-delimiter-face tag-type void tag-name "videodashboard" block-token delimiter-beg block-side t block-controls 0 block-beg 0) 44 51 (face web-mode-variable-name-face tag-type void tag-name "videodashboard" block-side t) 51 52 (font-lock-face web-mode-block-delimiter-face tag-type void tag-name "videodashboard" block-token delimiter-end block-end t block-side t) 52 53 (tag-type void tag-name "videodashboard") 53 54 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "videodashboard" tag-attr t tag-attr-beg 0) 54 60 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "videodashboard" tag-attr t) 60 61 (font-lock-face web-mode-html-attr-equal-face tag-type void tag-name "videodashboard" tag-attr t) 61 62 (font-lock-face web-mode-block-delimiter-face tag-type void tag-name "videodashboard" tag-attr t block-token delimiter-beg block-side t block-controls 0 block-beg 0) 62 63 (tag-type void tag-name "videodashboard" tag-attr t block-side t) 63 77 (face web-mode-variable-name-face tag-type void tag-name "videodashboard" tag-attr t block-side t) 77 78 (tag-type void tag-name "videodashboard" tag-attr t block-side t) 78 79 (font-lock-face web-mode-block-delimiter-face tag-type void tag-name "videodashboard" tag-attr-end 7 tag-attr t block-token delimiter-end block-end t block-side t) 79 80 (tag-type void tag-name "videodashboard") 80 81 (font-lock-face web-mode-html-tag-bracket-face tag-type void tag-name "videodashboard") 81 82 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type void tag-name "videodashboard") 85 86 (font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t block-controls 0 block-beg 0) 86 87 (font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t) 87 89 (face web-mode-block-control-face block-side t) 89 90 (font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-end t block-side t)) . 1524) (undo-tree-id645 . -90) (undo-tree-id646 . -82) (undo-tree-id647 . -90) (undo-tree-id648 . -90) (undo-tree-id649 . -22) (undo-tree-id650 . -90) (undo-tree-id651 . -90) (undo-tree-id652 . -90) (undo-tree-id653 . -90) (undo-tree-id654 . -90) (undo-tree-id655 . -90) (undo-tree-id656 . -90) (undo-tree-id657 . -90) (undo-tree-id658 . -90) (undo-tree-id659 . -90) (undo-tree-id660 . -90) (undo-tree-id661 . -90) (undo-tree-id662 . -90) (undo-tree-id663 . -90) (undo-tree-id664 . -90) (undo-tree-id665 . -90) (undo-tree-id666 . -90) (undo-tree-id667 . -90) (undo-tree-id668 . -90) (undo-tree-id669 . -90) (undo-tree-id670 . -90) (undo-tree-id671 . -90) (undo-tree-id672 . -90) (undo-tree-id673 . -90) (undo-tree-id674 . -90) (undo-tree-id675 . -90) (undo-tree-id676 . -90) (undo-tree-id677 . -90) (undo-tree-id678 . -90) (undo-tree-id679 . -90) (undo-tree-id680 . -90) (undo-tree-id681 . -90) (undo-tree-id682 . -90) (undo-tree-id683 . -90) 1614 (t 26521 43901 200196 429000)) nil (26521 44063 265221 282000) 0 nil] [nil nil ((610 . 614) (#("png" 0 3 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript)) . 610) 929 (t 26521 42508 609022 915000)) ((610 . 613) (#("webp" 0 4 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript)) . 610) (undo-tree-id437 . -4)) (26521 43852 787259 53000) 0 (:visualizer [0 1 0 #<marker in no buffer>])])
([nil nil (("
" . -1523) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (undo-tree-id563 . -1) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (undo-tree-id566 . -1) (undo-tree-id567 . -1) (undo-tree-id568 . -1) (undo-tree-id569 . -1) (undo-tree-id570 . -1) (undo-tree-id571 . -1) (undo-tree-id572 . -1) (undo-tree-id573 . -1) (undo-tree-id574 . -1) (undo-tree-id575 . -1) (undo-tree-id576 . -1) (undo-tree-id577 . -1) (undo-tree-id578 . -1) (undo-tree-id579 . -1) (undo-tree-id580 . -1) (undo-tree-id581 . -1) (undo-tree-id582 . -1) (undo-tree-id583 . -1) (undo-tree-id584 . -1) (undo-tree-id585 . -1) (undo-tree-id586 . -1) (undo-tree-id587 . -1) (undo-tree-id588 . -1) (undo-tree-id589 . -1) (undo-tree-id590 . -1) (undo-tree-id591 . -1) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (undo-tree-id594 . -1) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (undo-tree-id597 . -1) (undo-tree-id598 . -1) (undo-tree-id599 . -1) (undo-tree-id600 . -1) (undo-tree-id601 . -1) (undo-tree-id602 . -1) (undo-tree-id603 . -1) (undo-tree-id604 . -1) (undo-tree-id605 . -1) (undo-tree-id606 . -1) (undo-tree-id607 . -1) (undo-tree-id608 . -1) (undo-tree-id609 . -1) (undo-tree-id610 . -1) (undo-tree-id611 . -1) (undo-tree-id612 . -1) (undo-tree-id613 . -1) (undo-tree-id614 . -1) (undo-tree-id615 . -1) (undo-tree-id616 . -1) (undo-tree-id617 . -1) (undo-tree-id618 . -1) (undo-tree-id619 . -1) (undo-tree-id620 . -1) (undo-tree-id621 . -1) (undo-tree-id622 . -1) (undo-tree-id623 . -1) (undo-tree-id624 . -1) (undo-tree-id625 . -1) (undo-tree-id626 . -1) (undo-tree-id627 . -1) (undo-tree-id628 . -1) (undo-tree-id629 . -1) (undo-tree-id630 . -1) (undo-tree-id631 . -1) (undo-tree-id632 . -1) (undo-tree-id633 . -1) (undo-tree-id634 . -1) (undo-tree-id635 . -1) (undo-tree-id636 . -1) (undo-tree-id637 . -1) (undo-tree-id638 . -1) (undo-tree-id639 . -1) (undo-tree-id640 . -1) (undo-tree-id641 . -1) (undo-tree-id642 . -1) (undo-tree-id643 . -1) (undo-tree-id644 . -1) 1524) nil (26521 44063 265172 765000) 0 nil])
([nil nil ((713 . 736) (#("console.log(persons)" 0 8 (part-side javascript) 8 11 (face web-mode-function-call-face part-side javascript) 11 20 (part-side javascript)) . 713) (undo-tree-id1 . -20) (undo-tree-id2 . -20) (undo-tree-id3 . -20) 733 (t 26521 43543 125671 20000)) ((713 . 733) (#("// console.log(persons)" 0 1 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment part-side javascript) 1 11 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 11 14 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 14 23 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . 713) (undo-tree-id435 . -23) (undo-tree-id436 . -23)) (26521 43852 534000 723000) 0 (:visualizer [0 1 0 #<marker in no buffer>])])
([nil nil ((#("  " 0 2 (ws-butler-chg chg)) . -1610) (#("  " 0 2 (ws-butler-chg chg)) . -1554) (#("  " 0 2 (ws-butler-chg chg)) . -1531) (nil rear-nonsticky nil 1620 . 1621) (nil ws-butler-chg chg 1620 . 1621) (nil block-side t 1620 . 1621) (nil block-end t 1620 . 1621) (nil block-token delimiter-end 1620 . 1621) (nil font-lock-face web-mode-block-delimiter-face 1620 . 1621) (nil ws-butler-chg chg 1618 . 1620) (nil block-side t 1618 . 1620) (nil face web-mode-block-control-face 1618 . 1620) (nil ws-butler-chg chg 1617 . 1618) (nil block-side t 1617 . 1618) (nil block-token delimiter-beg 1617 . 1618) (nil font-lock-face web-mode-block-delimiter-face 1617 . 1618) (nil ws-butler-chg chg 1616 . 1617) (nil block-beg 0 1616 . 1617) (nil block-controls 0 1616 . 1617) (nil block-side t 1616 . 1617) (nil block-token delimiter-beg 1616 . 1617) (nil font-lock-face web-mode-block-delimiter-face 1616 . 1617) (nil ws-butler-chg chg 1613 . 1616) (nil ws-butler-chg chg 1612 . 1613) (nil tag-name "videodashboard" 1612 . 1613) (nil tag-type void 1612 . 1613) (nil tag-end t 1612 . 1613) (nil font-lock-face web-mode-html-tag-bracket-face 1612 . 1613) (nil ws-butler-chg chg 1611 . 1612) (nil tag-name "videodashboard" 1611 . 1612) (nil tag-type void 1611 . 1612) (nil font-lock-face web-mode-html-tag-bracket-face 1611 . 1612) (nil ws-butler-chg chg 1610 . 1611) (nil tag-name "videodashboard" 1610 . 1611) (nil tag-type void 1610 . 1611) (nil ws-butler-chg chg 1609 . 1610) (nil block-side t 1609 . 1610) (nil block-end t 1609 . 1610) (nil block-token delimiter-end 1609 . 1610) (nil tag-attr t 1609 . 1610) (nil tag-attr-end 7 1609 . 1610) (nil tag-name "videodashboard" 1609 . 1610) (nil tag-type void 1609 . 1610) (nil font-lock-face web-mode-block-delimiter-face 1609 . 1610) (nil ws-butler-chg chg 1608 . 1609) (nil block-side t 1608 . 1609) (nil tag-attr t 1608 . 1609) (nil tag-name "videodashboard" 1608 . 1609) (nil tag-type void 1608 . 1609) (nil ws-butler-chg chg 1594 . 1608) (nil block-side t 1594 . 1608) (nil tag-attr t 1594 . 1608) (nil tag-name "videodashboard" 1594 . 1608) (nil tag-type void 1594 . 1608) (nil face web-mode-variable-name-face 1594 . 1608) (nil ws-butler-chg chg 1593 . 1594) (nil block-side t 1593 . 1594) (nil tag-attr t 1593 . 1594) (nil tag-name "videodashboard" 1593 . 1594) (nil tag-type void 1593 . 1594) (nil ws-butler-chg chg 1592 . 1593) (nil block-beg 0 1592 . 1593) (nil block-controls 0 1592 . 1593) (nil block-side t 1592 . 1593) (nil block-token delimiter-beg 1592 . 1593) (nil tag-attr t 1592 . 1593) (nil tag-name "videodashboard" 1592 . 1593) (nil tag-type void 1592 . 1593) (nil font-lock-face web-mode-block-delimiter-face 1592 . 1593) (nil ws-butler-chg chg 1591 . 1592) (nil tag-attr t 1591 . 1592) (nil tag-name "videodashboard" 1591 . 1592) (nil tag-type void 1591 . 1592) (nil font-lock-face web-mode-html-attr-equal-face 1591 . 1592) (nil ws-butler-chg chg 1585 . 1591) (nil tag-attr t 1585 . 1591) (nil tag-name "videodashboard" 1585 . 1591) (nil tag-type void 1585 . 1591) (nil font-lock-face web-mode-html-attr-name-face 1585 . 1591) (nil ws-butler-chg chg 1584 . 1585) (nil tag-attr-beg 0 1584 . 1585) (nil tag-attr t 1584 . 1585) (nil tag-name "videodashboard" 1584 . 1585) (nil tag-type void 1584 . 1585) (nil font-lock-face web-mode-html-attr-name-face 1584 . 1585) (nil ws-butler-chg chg 1583 . 1584) (nil tag-name "videodashboard" 1583 . 1584) (nil tag-type void 1583 . 1584) (nil ws-butler-chg chg 1582 . 1583) (nil block-side t 1582 . 1583) (nil block-end t 1582 . 1583) (nil block-token delimiter-end 1582 . 1583) (nil tag-name "videodashboard" 1582 . 1583) (nil tag-type void 1582 . 1583) (nil font-lock-face web-mode-block-delimiter-face 1582 . 1583) (nil ws-butler-chg chg 1575 . 1582) (nil block-side t 1575 . 1582) (nil tag-name "videodashboard" 1575 . 1582) (nil tag-type void 1575 . 1582) (nil face web-mode-variable-name-face 1575 . 1582) (nil ws-butler-chg chg 1574 . 1575) (nil block-beg 0 1574 . 1575) (nil block-controls 0 1574 . 1575) (nil block-side t 1574 . 1575) (nil block-token delimiter-beg 1574 . 1575) (nil tag-name "videodashboard" 1574 . 1575) (nil tag-type void 1574 . 1575) (nil font-lock-face web-mode-block-delimiter-face 1574 . 1575) (nil ws-butler-chg chg 1573 . 1574) (nil tag-name "videodashboard" 1573 . 1574) (nil tag-type void 1573 . 1574) (nil ws-butler-chg chg 1559 . 1573) (nil tag-name "videodashboard" 1559 . 1573) (nil tag-type void 1559 . 1573) (nil font-lock-face web-mode-html-tag-face 1559 . 1573) (nil ws-butler-chg chg 1558 . 1559) (nil tag-name "videodashboard" 1558 . 1559) (nil tag-type void 1558 . 1559) (nil tag-beg 25 1558 . 1559) (nil font-lock-face web-mode-html-tag-bracket-face 1558 . 1559) (nil ws-butler-chg chg 1553 . 1558) (nil ws-butler-chg chg 1552 . 1553) (nil block-side t 1552 . 1553) (nil block-end t 1552 . 1553) (nil block-token delimiter-end 1552 . 1553) (nil font-lock-face web-mode-block-delimiter-face 1552 . 1553) (nil ws-butler-chg chg 1538 . 1552) (nil block-side t 1538 . 1552) (nil face web-mode-variable-name-face 1538 . 1552) (nil ws-butler-chg chg 1537 . 1538) (nil block-side t 1537 . 1538) (nil ws-butler-chg chg 1535 . 1537) (nil block-side t 1535 . 1537) (nil face web-mode-block-control-face 1535 . 1537) (nil ws-butler-chg chg 1534 . 1535) (nil block-side t 1534 . 1535) (nil block-token delimiter-beg 1534 . 1535) (nil font-lock-face web-mode-block-delimiter-face 1534 . 1535) (nil ws-butler-chg chg 1533 . 1534) (nil block-beg 0 1533 . 1534) (nil block-controls 0 1533 . 1534) (nil block-side t 1533 . 1534) (nil block-token delimiter-beg 1533 . 1534) (nil font-lock-face web-mode-block-delimiter-face 1533 . 1534) (nil ws-butler-chg chg 1531 . 1533) (1531 . 1621)) nil (26521 44063 264536 449000) 0 nil])
([nil nil ((713 . 733) (#("// console.log(persons)" 0 1 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment part-side javascript) 1 11 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 11 14 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 14 23 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . 713) (undo-tree-id432 . -23)) ((713 . 736) (#("console.log(persons)" 0 8 (part-side javascript) 8 11 (face web-mode-function-call-face part-side javascript) 11 20 (part-side javascript)) . 713) (undo-tree-id433 . -20) (undo-tree-id434 . -20)) (26521 43851 565915 293000) 0 (:visualizer [0 1 0 #<marker in no buffer>])])
([nil nil ((#("{#if selectedPlayer}
  <VideoDashboard {videoId} persons={[selectedPlayer]} />
{/if}
" 0 1 (font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t block-controls 0 block-beg 0) 1 2 (font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t) 2 4 (face web-mode-block-control-face block-side t) 4 5 (block-side t) 5 19 (face web-mode-variable-name-face block-side t) 19 20 (font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-end t block-side t) 23 24 (font-lock-face web-mode-html-tag-bracket-face tag-beg 25 tag-type void tag-name "videodashboard") 24 38 (font-lock-face web-mode-html-tag-face tag-type void tag-name "videodashboard") 38 39 (tag-type void tag-name "videodashboard") 39 40 (font-lock-face web-mode-block-delimiter-face tag-type void tag-name "videodashboard" block-token delimiter-beg block-side t block-controls 0 block-beg 0) 40 47 (face web-mode-variable-name-face tag-type void tag-name "videodashboard" block-side t) 47 48 (font-lock-face web-mode-block-delimiter-face tag-type void tag-name "videodashboard" block-token delimiter-end block-end t block-side t) 48 49 (tag-type void tag-name "videodashboard") 49 50 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "videodashboard" tag-attr t tag-attr-beg 0) 50 56 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "videodashboard" tag-attr t) 56 57 (font-lock-face web-mode-html-attr-equal-face tag-type void tag-name "videodashboard" tag-attr t) 57 58 (font-lock-face web-mode-block-delimiter-face tag-type void tag-name "videodashboard" tag-attr t block-token delimiter-beg block-side t block-controls 0 block-beg 0) 58 59 (tag-type void tag-name "videodashboard" tag-attr t block-side t) 59 73 (face web-mode-variable-name-face tag-type void tag-name "videodashboard" tag-attr t block-side t) 73 74 (tag-type void tag-name "videodashboard" tag-attr t block-side t) 74 75 (font-lock-face web-mode-block-delimiter-face tag-type void tag-name "videodashboard" tag-attr-end 7 tag-attr t block-token delimiter-end block-end t block-side t) 75 76 (tag-type void tag-name "videodashboard") 76 77 (font-lock-face web-mode-html-tag-bracket-face tag-type void tag-name "videodashboard") 77 78 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type void tag-name "videodashboard") 79 80 (font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t block-controls 0 block-beg 0) 80 81 (font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t) 81 83 (face web-mode-block-control-face block-side t) 83 84 (font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-end t block-side t rear-nonsticky t)) . 1531) (undo-tree-id684 . -85) (undo-tree-id685 . -85) (undo-tree-id686 . -85) (undo-tree-id687 . -85) (undo-tree-id688 . -85) (undo-tree-id689 . -85) (undo-tree-id690 . -85) (undo-tree-id691 . -85) (undo-tree-id692 . -85) (undo-tree-id693 . -85) (undo-tree-id694 . -85) (undo-tree-id695 . -85) (undo-tree-id696 . -85) (undo-tree-id697 . -85) (undo-tree-id698 . -85) (undo-tree-id699 . -85) (undo-tree-id700 . -85) (undo-tree-id701 . -85) (undo-tree-id702 . -85) (undo-tree-id703 . -85) (undo-tree-id704 . -85) (undo-tree-id705 . -85) (undo-tree-id706 . -85) (undo-tree-id707 . -85) (undo-tree-id708 . -85) (undo-tree-id709 . -85) (undo-tree-id710 . -85) (undo-tree-id711 . -85) (undo-tree-id712 . -85) (undo-tree-id713 . -85) (undo-tree-id714 . -85) (undo-tree-id715 . -85) (undo-tree-id716 . -85) (undo-tree-id717 . -85) (undo-tree-id718 . -85) (undo-tree-id719 . -85) (undo-tree-id720 . -85) (undo-tree-id721 . -85) (undo-tree-id722 . -85) (undo-tree-id723 . -85) (undo-tree-id724 . -85) (undo-tree-id725 . -85) (undo-tree-id726 . -85) (undo-tree-id727 . -85) (undo-tree-id728 . -85) (undo-tree-id729 . -85) (undo-tree-id730 . -79) (undo-tree-id731 . -85) (undo-tree-id732 . -79) (undo-tree-id733 . -79) (undo-tree-id734 . -79) (undo-tree-id735 . -79) (undo-tree-id736 . -79) (undo-tree-id737 . -79) (undo-tree-id738 . -79) (undo-tree-id739 . -79) (undo-tree-id740 . -79) (undo-tree-id741 . -79) (undo-tree-id742 . -79) (undo-tree-id743 . -79) (undo-tree-id744 . -79) (undo-tree-id745 . -79) (undo-tree-id746 . -79) (undo-tree-id747 . -79) (undo-tree-id748 . -79) (undo-tree-id749 . -21) (undo-tree-id750 . -79) (undo-tree-id751 . -21) (undo-tree-id752 . -21) (undo-tree-id753 . -21) (undo-tree-id754 . -21) (undo-tree-id755 . -21) (undo-tree-id756 . -21) (undo-tree-id757 . -21) (undo-tree-id758 . -21) (undo-tree-id759 . -21) (undo-tree-id760 . -21) (undo-tree-id761 . -21) (undo-tree-id762 . -21) (undo-tree-id763 . -21) (undo-tree-id764 . -21) (undo-tree-id765 . -21) (undo-tree-id766 . -21) (undo-tree-id767 . -21) (undo-tree-id768 . -21) (undo-tree-id769 . -21) (undo-tree-id770 . -21) (undo-tree-id771 . -21) (undo-tree-id772 . -85) (undo-tree-id773 . -85) (undo-tree-id774 . -85) (undo-tree-id775 . -85) (undo-tree-id776 . -85) (undo-tree-id777 . -85) (undo-tree-id778 . -85) (undo-tree-id779 . -85) (undo-tree-id780 . -85) (undo-tree-id781 . -85) (undo-tree-id782 . -85) (undo-tree-id783 . -85) (undo-tree-id784 . -85) (undo-tree-id785 . -85) (undo-tree-id786 . -85) (undo-tree-id787 . -85) (undo-tree-id788 . -85) (undo-tree-id789 . -85) (undo-tree-id790 . -85) (undo-tree-id791 . -85) (undo-tree-id792 . -85) (undo-tree-id793 . -85) (undo-tree-id794 . -85) 1616 (t 26521 44063 301433 374000)) nil (26521 44102 382561 753000) 0 nil])
([nil nil ((610 . 613) (#("webp" 0 4 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript)) . 610)) ((610 . 614) (#("png" 0 3 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript)) . 610)) (26521 43848 784399 313000) 0 (:visualizer [0 1 0 #<marker in no buffer>])])
([nil nil ((1606 . 1608) (1546 . 1550) (#("  " 0 2 (ws-butler-chg chg)) . 1546) (1523 . 1525) (nil rear-nonsticky nil 1607 . 1608) (nil ws-butler-chg chg 1607 . 1608) (nil rear-nonsticky t 1606 . 1607) (nil ws-butler-chg chg 1606 . 1607) (nil block-side t 1606 . 1607) (nil block-end t 1606 . 1607) (nil block-token delimiter-end 1606 . 1607) (nil font-lock-face web-mode-block-delimiter-face 1606 . 1607) (nil ws-butler-chg chg 1604 . 1606) (nil block-side t 1604 . 1606) (nil face web-mode-block-control-face 1604 . 1606) (nil ws-butler-chg chg 1603 . 1604) (nil block-side t 1603 . 1604) (nil block-token delimiter-beg 1603 . 1604) (nil font-lock-face web-mode-block-delimiter-face 1603 . 1604) (nil ws-butler-chg chg 1602 . 1603) (nil block-beg 0 1602 . 1603) (nil block-controls 0 1602 . 1603) (nil block-side t 1602 . 1603) (nil block-token delimiter-beg 1602 . 1603) (nil font-lock-face web-mode-block-delimiter-face 1602 . 1603) (nil ws-butler-chg chg 1601 . 1602) (nil ws-butler-chg chg 1600 . 1601) (nil tag-name "videodashboard" 1600 . 1601) (nil tag-type void 1600 . 1601) (nil tag-end t 1600 . 1601) (nil font-lock-face web-mode-html-tag-bracket-face 1600 . 1601) (nil ws-butler-chg chg 1599 . 1600) (nil tag-name "videodashboard" 1599 . 1600) (nil tag-type void 1599 . 1600) (nil font-lock-face web-mode-html-tag-bracket-face 1599 . 1600) (nil ws-butler-chg chg 1598 . 1599) (nil tag-name "videodashboard" 1598 . 1599) (nil tag-type void 1598 . 1599) (nil ws-butler-chg chg 1597 . 1598) (nil block-side t 1597 . 1598) (nil block-end t 1597 . 1598) (nil block-token delimiter-end 1597 . 1598) (nil tag-attr t 1597 . 1598) (nil tag-attr-end 7 1597 . 1598) (nil tag-name "videodashboard" 1597 . 1598) (nil tag-type void 1597 . 1598) (nil font-lock-face web-mode-block-delimiter-face 1597 . 1598) (nil ws-butler-chg chg 1596 . 1597) (nil block-side t 1596 . 1597) (nil tag-attr t 1596 . 1597) (nil tag-name "videodashboard" 1596 . 1597) (nil tag-type void 1596 . 1597) (nil ws-butler-chg chg 1582 . 1596) (nil block-side t 1582 . 1596) (nil tag-attr t 1582 . 1596) (nil tag-name "videodashboard" 1582 . 1596) (nil tag-type void 1582 . 1596) (nil face web-mode-variable-name-face 1582 . 1596) (nil ws-butler-chg chg 1581 . 1582) (nil block-side t 1581 . 1582) (nil tag-attr t 1581 . 1582) (nil tag-name "videodashboard" 1581 . 1582) (nil tag-type void 1581 . 1582) (nil ws-butler-chg chg 1580 . 1581) (nil block-beg 0 1580 . 1581) (nil block-controls 0 1580 . 1581) (nil block-side t 1580 . 1581) (nil block-token delimiter-beg 1580 . 1581) (nil tag-attr t 1580 . 1581) (nil tag-name "videodashboard" 1580 . 1581) (nil tag-type void 1580 . 1581) (nil font-lock-face web-mode-block-delimiter-face 1580 . 1581) (nil ws-butler-chg chg 1579 . 1580) (nil tag-attr t 1579 . 1580) (nil tag-name "videodashboard" 1579 . 1580) (nil tag-type void 1579 . 1580) (nil font-lock-face web-mode-html-attr-equal-face 1579 . 1580) (nil ws-butler-chg chg 1573 . 1579) (nil tag-attr t 1573 . 1579) (nil tag-name "videodashboard" 1573 . 1579) (nil tag-type void 1573 . 1579) (nil font-lock-face web-mode-html-attr-name-face 1573 . 1579) (nil ws-butler-chg chg 1572 . 1573) (nil tag-attr-beg 0 1572 . 1573) (nil tag-attr t 1572 . 1573) (nil tag-name "videodashboard" 1572 . 1573) (nil tag-type void 1572 . 1573) (nil font-lock-face web-mode-html-attr-name-face 1572 . 1573) (nil ws-butler-chg chg 1571 . 1572) (nil tag-name "videodashboard" 1571 . 1572) (nil tag-type void 1571 . 1572) (nil ws-butler-chg chg 1570 . 1571) (nil block-side t 1570 . 1571) (nil block-end t 1570 . 1571) (nil block-token delimiter-end 1570 . 1571) (nil tag-name "videodashboard" 1570 . 1571) (nil tag-type void 1570 . 1571) (nil font-lock-face web-mode-block-delimiter-face 1570 . 1571) (nil ws-butler-chg chg 1563 . 1570) (nil block-side t 1563 . 1570) (nil tag-name "videodashboard" 1563 . 1570) (nil tag-type void 1563 . 1570) (nil face web-mode-variable-name-face 1563 . 1570) (nil ws-butler-chg chg 1562 . 1563) (nil block-beg 0 1562 . 1563) (nil block-controls 0 1562 . 1563) (nil block-side t 1562 . 1563) (nil block-token delimiter-beg 1562 . 1563) (nil tag-name "videodashboard" 1562 . 1563) (nil tag-type void 1562 . 1563) (nil font-lock-face web-mode-block-delimiter-face 1562 . 1563) (nil ws-butler-chg chg 1561 . 1562) (nil tag-name "videodashboard" 1561 . 1562) (nil tag-type void 1561 . 1562) (nil ws-butler-chg chg 1547 . 1561) (nil tag-name "videodashboard" 1547 . 1561) (nil tag-type void 1547 . 1561) (nil font-lock-face web-mode-html-tag-face 1547 . 1561) (nil ws-butler-chg chg 1546 . 1547) (nil tag-name "videodashboard" 1546 . 1547) (nil tag-type void 1546 . 1547) (nil tag-beg 25 1546 . 1547) (nil font-lock-face web-mode-html-tag-bracket-face 1546 . 1547) (nil ws-butler-chg chg 1543 . 1546) (nil ws-butler-chg chg 1542 . 1543) (nil block-side t 1542 . 1543) (nil block-end t 1542 . 1543) (nil block-token delimiter-end 1542 . 1543) (nil font-lock-face web-mode-block-delimiter-face 1542 . 1543) (nil ws-butler-chg chg 1528 . 1542) (nil block-side t 1528 . 1542) (nil face web-mode-variable-name-face 1528 . 1542) (nil ws-butler-chg chg 1527 . 1528) (nil block-side t 1527 . 1528) (nil ws-butler-chg chg 1525 . 1527) (nil block-side t 1525 . 1527) (nil face web-mode-block-control-face 1525 . 1527) (nil ws-butler-chg chg 1524 . 1525) (nil block-side t 1524 . 1525) (nil block-token delimiter-beg 1524 . 1525) (nil font-lock-face web-mode-block-delimiter-face 1524 . 1525) (nil ws-butler-chg chg 1523 . 1524) (nil block-beg 0 1523 . 1524) (nil block-controls 0 1523 . 1524) (nil block-side t 1523 . 1524) (nil block-token delimiter-beg 1523 . 1524) (nil font-lock-face web-mode-block-delimiter-face 1523 . 1524) (1523 . 1608)) nil (26521 44127 844734 315000) 0 nil])
([nil nil ((980 . 1218) (#(" width: 100%;\">
  <div style=\"width: 250px; overflow-y: auto; max-height: 400px; border-right: 1px solid #ccc;\">
    {#each persons as person}
      <div
        on:click={() => selectedPlayer = person}
        style=\"display: flex; align-items: center; padding: 10px; cursor: pointer; background-color: {selectedPlayer === person ? '#f0f0f0' : 'transparent'};\"
      >
        <img src={person.image} alt={person.name} width=\"40\" height=\"40\" style=\"margin-right: 10px;\" />
        <span>{person.name}</span>
      </div>
    {/each}
  </div" 0 8 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 8 11 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 11 13 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 13 14 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 5 tag-attr t) 14 15 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div") 18 19 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div") 19 22 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div") 22 23 (tag-type start tag-name "div") 23 24 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0) 24 28 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 28 29 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 29 110 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 110 111 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 5 tag-attr t) 111 112 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div") 117 118 (font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t block-controls 0 block-beg 0) 118 119 (font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t) 119 123 (face web-mode-block-control-face block-side t) 123 124 (block-side t) 124 131 (face web-mode-variable-name-face block-side t) 131 132 (block-side t) 132 134 (face web-mode-keyword-face block-side t) 134 135 (block-side t) 135 141 (face web-mode-variable-name-face block-side t) 141 142 (font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-end t block-side t) 149 150 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div") 150 153 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div") 153 162 (tag-type start tag-name "div") 162 163 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0) 163 170 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 170 171 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 171 172 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "div" tag-attr t block-token delimiter-beg block-side t block-controls 0 block-beg 0) 172 175 (tag-type start tag-name "div" tag-attr t block-side t) 175 176 (tag-type start tag-name "div" tag-attr-end 8 tag-attr t block-side t) 176 177 (tag-end t tag-type start tag-name "div" block-side t) 177 178 (block-side t) 178 192 (face web-mode-variable-name-face block-side t) 192 195 (block-side t) 195 201 (face web-mode-variable-name-face block-side t) 201 202 (font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-end t block-side t) 304 305 (font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t block-controls 0 block-beg 0) 305 319 (face web-mode-variable-name-face block-side t) 319 324 (block-side t) 324 330 (face web-mode-variable-name-face block-side t) 330 335 (block-side t) 335 341 (face web-mode-variable-name-face block-side t) 341 346 (block-side t) 346 357 (face web-mode-variable-name-face block-side t) 357 358 (block-side t) 358 359 (font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-end t block-side t) 378 379 (font-lock-face web-mode-html-tag-bracket-face tag-beg 25 tag-type void tag-name "img") 379 382 (font-lock-face web-mode-html-tag-face tag-type void tag-name "img") 382 383 (tag-type void tag-name "img") 383 384 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr t tag-attr-beg 0) 384 386 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr t) 386 387 (font-lock-face web-mode-html-attr-equal-face tag-type void tag-name "img" tag-attr t) 387 388 (font-lock-face web-mode-block-delimiter-face tag-type void tag-name "img" tag-attr t block-token delimiter-beg block-side t block-controls 0 block-beg 0) 388 400 (face web-mode-variable-name-face tag-type void tag-name "img" tag-attr t block-side t) 400 401 (font-lock-face web-mode-block-delimiter-face tag-type void tag-name "img" tag-attr-end 3 tag-attr t block-token delimiter-end block-end t block-side t) 401 402 (tag-type void tag-name "img") 402 403 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr t tag-attr-beg 0) 403 405 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr t) 405 406 (font-lock-face web-mode-html-attr-equal-face tag-type void tag-name "img" tag-attr t) 406 407 (font-lock-face web-mode-block-delimiter-face tag-type void tag-name "img" tag-attr t block-token delimiter-beg block-side t block-controls 0 block-beg 0) 407 418 (face web-mode-variable-name-face tag-type void tag-name "img" tag-attr t block-side t) 418 419 (font-lock-face web-mode-block-delimiter-face tag-type void tag-name "img" tag-attr-end 3 tag-attr t block-token delimiter-end block-end t block-side t) 419 420 (tag-type void tag-name "img") 420 421 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr t tag-attr-beg 0) 421 425 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr t) 425 426 (font-lock-face web-mode-html-attr-equal-face tag-type void tag-name "img" tag-attr t) 426 427 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "img" tag-attr t) 427 429 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "img" tag-attr t) 429 430 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "img" tag-attr-end 5 tag-attr t) 430 431 (tag-type void tag-name "img") 431 432 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr t tag-attr-beg 0) 432 437 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr t) 437 438 (font-lock-face web-mode-html-attr-equal-face tag-type void tag-name "img" tag-attr t) 438 439 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "img" tag-attr t) 439 441 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "img" tag-attr t) 441 442 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "img" tag-attr-end 6 tag-attr t) 442 443 (tag-type void tag-name "img") 443 444 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr t tag-attr-beg 0) 444 448 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr t) 448 449 (font-lock-face web-mode-html-attr-equal-face tag-type void tag-name "img" tag-attr t) 449 469 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "img" tag-attr t) 469 470 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "img" tag-attr-end 5 tag-attr t) 470 471 (tag-type void tag-name "img") 471 472 (font-lock-face web-mode-html-tag-bracket-face tag-type void tag-name "img") 472 473 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type void tag-name "img") 482 483 (font-lock-face web-mode-html-tag-bracket-face tag-beg 16 tag-type start tag-name "span") 483 487 (font-lock-face web-mode-html-tag-face tag-type start tag-name "span") 487 488 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "span") 488 489 (font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t block-controls 0 block-beg 0) 489 500 (face web-mode-variable-name-face block-side t) 500 501 (font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-end t block-side t) 501 502 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "span") 502 503 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "span") 503 507 (font-lock-face web-mode-html-tag-face tag-type end tag-name "span") 507 508 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "span") 515 516 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div") 516 517 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div") 517 520 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div") 520 521 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div") 526 527 (font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t block-controls 0 block-beg 0) 527 528 (font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t) 528 532 (face web-mode-block-control-face block-side t) 532 533 (font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-end t block-side t) 536 537 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div") 537 538 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div") 538 541 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div")) . 980)) ((980 . 1521) (#("\">
  <select bind:value={selectedPlayer}>
    {#each persons as person}
      <option value={person}>
        <img src={person.image} alt={person.name} width=\"20\" height=\"20\" />
        {person.name}
      </option>
    {/each}
  </select" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 5 tag-attr t) 1 2 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div") 5 6 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "select") 6 12 (font-lock-face web-mode-html-tag-face tag-type start tag-name "select") 12 13 (tag-type start tag-name "select") 13 14 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "select" tag-attr t tag-attr-beg 0) 14 23 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "select" tag-attr t) 23 24 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "select" tag-attr t) 24 25 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "select" tag-attr t block-token delimiter-beg block-side t block-controls 0 block-beg 0) 25 39 (face web-mode-variable-name-face tag-type start tag-name "select" tag-attr t block-side t) 39 40 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "select" tag-attr-end 10 tag-attr t block-token delimiter-end block-end t block-side t) 40 41 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "select") 46 47 (font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t block-controls 0 block-beg 0) 47 48 (font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t) 48 52 (face web-mode-block-control-face block-side t) 52 53 (block-side t) 53 60 (face web-mode-variable-name-face block-side t) 60 61 (block-side t) 61 63 (face web-mode-keyword-face block-side t) 63 64 (block-side t) 64 70 (face web-mode-variable-name-face block-side t) 70 71 (font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-end t block-side t) 78 79 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "option") 79 85 (font-lock-face web-mode-html-tag-face tag-type start tag-name "option") 85 86 (tag-type start tag-name "option") 86 87 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "option" tag-attr t tag-attr-beg 0) 87 91 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "option" tag-attr t) 91 92 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "option" tag-attr t) 92 93 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "option" tag-attr t block-token delimiter-beg block-side t block-controls 0 block-beg 0) 93 99 (face web-mode-variable-name-face tag-type start tag-name "option" tag-attr t block-side t) 99 100 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "option" tag-attr-end 5 tag-attr t block-token delimiter-end block-end t block-side t) 100 101 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "option") 110 111 (font-lock-face web-mode-html-tag-bracket-face tag-beg 25 tag-type void tag-name "img") 111 114 (font-lock-face web-mode-html-tag-face tag-type void tag-name "img") 114 115 (tag-type void tag-name "img") 115 116 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr t tag-attr-beg 0) 116 118 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr t) 118 119 (font-lock-face web-mode-html-attr-equal-face tag-type void tag-name "img" tag-attr t) 119 120 (font-lock-face web-mode-block-delimiter-face tag-type void tag-name "img" tag-attr t block-token delimiter-beg block-side t block-controls 0 block-beg 0) 120 132 (face web-mode-variable-name-face tag-type void tag-name "img" tag-attr t block-side t) 132 133 (font-lock-face web-mode-block-delimiter-face tag-type void tag-name "img" tag-attr-end 3 tag-attr t block-token delimiter-end block-end t block-side t) 133 134 (tag-type void tag-name "img") 134 135 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr t tag-attr-beg 0) 135 137 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr t) 137 138 (font-lock-face web-mode-html-attr-equal-face tag-type void tag-name "img" tag-attr t) 138 139 (font-lock-face web-mode-block-delimiter-face tag-type void tag-name "img" tag-attr t block-token delimiter-beg block-side t block-controls 0 block-beg 0) 139 150 (face web-mode-variable-name-face tag-type void tag-name "img" tag-attr t block-side t) 150 151 (font-lock-face web-mode-block-delimiter-face tag-type void tag-name "img" tag-attr-end 3 tag-attr t block-token delimiter-end block-end t block-side t) 151 152 (tag-type void tag-name "img") 152 153 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr t tag-attr-beg 0) 153 157 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr t) 157 158 (font-lock-face web-mode-html-attr-equal-face tag-type void tag-name "img" tag-attr t) 158 159 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "img" tag-attr t) 159 161 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "img" tag-attr t) 161 162 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "img" tag-attr-end 5 tag-attr t) 162 163 (tag-type void tag-name "img") 163 164 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr t tag-attr-beg 0) 164 169 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr t) 169 170 (font-lock-face web-mode-html-attr-equal-face tag-type void tag-name "img" tag-attr t) 170 171 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "img" tag-attr t) 171 173 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "img" tag-attr t) 173 174 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "img" tag-attr-end 6 tag-attr t) 174 175 (tag-type void tag-name "img") 175 176 (font-lock-face web-mode-html-tag-bracket-face tag-type void tag-name "img") 176 177 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type void tag-name "img") 186 187 (font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t block-controls 0 block-beg 0) 187 198 (face web-mode-variable-name-face block-side t) 198 199 (font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-end t block-side t) 206 207 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "option") 207 208 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "option") 208 214 (font-lock-face web-mode-html-tag-face tag-type end tag-name "option") 214 215 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "option") 220 221 (font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t block-controls 0 block-beg 0) 221 222 (font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t) 222 226 (face web-mode-block-control-face block-side t) 226 227 (font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-end t block-side t) 230 231 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "select") 231 232 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "select") 232 238 (font-lock-face web-mode-html-tag-face tag-type end tag-name "select")) . 980) (undo-tree-id393 . -215) (undo-tree-id394 . -215) (undo-tree-id395 . -215) (undo-tree-id396 . -215) (undo-tree-id397 . -215) (undo-tree-id398 . -215) (undo-tree-id399 . -215) (undo-tree-id400 . -215) (undo-tree-id401 . -215) (undo-tree-id402 . -215) (undo-tree-id403 . -215) (undo-tree-id404 . -215) (undo-tree-id405 . -215) (undo-tree-id406 . -215) (undo-tree-id407 . -215) (undo-tree-id408 . -215) (undo-tree-id409 . -215) (undo-tree-id410 . -215) (undo-tree-id411 . -215) (undo-tree-id412 . -215) (undo-tree-id413 . -215) (undo-tree-id414 . -215) (undo-tree-id415 . -215) (undo-tree-id416 . -215) (undo-tree-id417 . -215) (undo-tree-id418 . -215) (undo-tree-id419 . -215) (undo-tree-id420 . -215) (undo-tree-id421 . -215) (undo-tree-id422 . -215) (undo-tree-id423 . -215) (undo-tree-id424 . -215) (undo-tree-id425 . -215) (undo-tree-id426 . -215) (undo-tree-id427 . -215) (undo-tree-id428 . -215) (undo-tree-id429 . -215) (undo-tree-id430 . -215) (t 26521 43816 528035 907000)) (26521 43848 388173 40000) 0 (:visualizer [0 1 0 #<marker in no buffer>])])
([nil nil ((1522 . 1525) (t 26521 44128 790631 672000)) nil (26521 44133 629843 630000) 0 nil] [nil nil ((#("align-items: flex-start; " 0 24 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 24 25 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . 956) (undo-tree-id795 . -25) (undo-tree-id796 . -24) (undo-tree-id797 . -24) (undo-tree-id798 . -24) (undo-tree-id799 . -24) (undo-tree-id800 . -24) (undo-tree-id801 . -24) (undo-tree-id802 . -24) (undo-tree-id803 . -24) (undo-tree-id805 . -5) (undo-tree-id807 . -5) (undo-tree-id809 . -5) (undo-tree-id811 . -5) (undo-tree-id813 . -5) (undo-tree-id815 . -5) (undo-tree-id817 . -5) (undo-tree-id819 . -5) (undo-tree-id821 . -11) (undo-tree-id823 . -11) (undo-tree-id825 . -11) (undo-tree-id827 . -11) (undo-tree-id829 . -11) (undo-tree-id831 . -11) (undo-tree-id833 . -11) (undo-tree-id835 . -11) (undo-tree-id837 . -11) (undo-tree-id839 . -11) (undo-tree-id841 . -11) (undo-tree-id843 . -11) (undo-tree-id845 . -11) (undo-tree-id847 . -17) (undo-tree-id849 . -17) (undo-tree-id851 . -17) (undo-tree-id853 . -17) (undo-tree-id855 . -17) (undo-tree-id857 . -17) (undo-tree-id859 . -17) (undo-tree-id861 . -17) (undo-tree-id863 . -17) (undo-tree-id865 . -23) (undo-tree-id867 . -23) (undo-tree-id869 . -23) (undo-tree-id871 . -23) (undo-tree-id873 . -23) (undo-tree-id875 . -23) (undo-tree-id877 . -23) (undo-tree-id879 . -23) (undo-tree-id881 . -23) (undo-tree-id883 . -23) (undo-tree-id885 . -23) (undo-tree-id887 . -25) (undo-tree-id889 . -25) (undo-tree-id891 . -25) (undo-tree-id893 . -25) (undo-tree-id895 . -25) (undo-tree-id897 . -25) (undo-tree-id899 . -25) (undo-tree-id901 . -25) (undo-tree-id903 . -25) (undo-tree-id905 . -25) (undo-tree-id907 . -25) (undo-tree-id909 . -25) (undo-tree-id911 . -25) (undo-tree-id913 . -25) (undo-tree-id915 . -25) (undo-tree-id917 . -25) (undo-tree-id919 . -25) (undo-tree-id921 . -25) (undo-tree-id923 . -25) (undo-tree-id925 . -18) (undo-tree-id927 . -18) (undo-tree-id929 . -18) (undo-tree-id931 . -18) (undo-tree-id933 . -18) (undo-tree-id935 . -18) (undo-tree-id937 . -18) (undo-tree-id939 . -18) (undo-tree-id941 . -18) (undo-tree-id943 . -18) (undo-tree-id945 . -13) (undo-tree-id947 . -13) (undo-tree-id949 . -13) (undo-tree-id951 . -13) (undo-tree-id953 . -13) (undo-tree-id955 . -13) (undo-tree-id957 . -13) (undo-tree-id959 . -13) (undo-tree-id961 . -13) (undo-tree-id963 . -6) (undo-tree-id965 . -6) (undo-tree-id967 . -6) (undo-tree-id969 . -6) (undo-tree-id971 . -6) (undo-tree-id973 . -6) (undo-tree-id975 . -6) (undo-tree-id977 . -6) (undo-tree-id979 . -6) (undo-tree-id981 . -6) (undo-tree-id983 . -6) (undo-tree-id985 . -6) (t 26521 44102 440951 505000)) ((956 . 981) (t 26521 44107 64228 462000)) (26521 44107 18674 983000) 0 nil])
([nil nil ((1319 . 1374) (t 26521 43711 786246 51000)) ((#("<VideoDashboard {videoId} persons={[selectedPlayer]} />" 0 1 (font-lock-face web-mode-html-tag-bracket-face tag-beg 25 tag-type void tag-name "videodashboard" ws-butler-chg chg) 1 15 (font-lock-face web-mode-html-tag-face tag-type void tag-name "videodashboard" ws-butler-chg chg) 15 16 (tag-type void tag-name "videodashboard" ws-butler-chg chg) 16 17 (font-lock-face web-mode-block-delimiter-face tag-type void tag-name "videodashboard" block-token delimiter-beg block-side t block-controls 0 block-beg 0 ws-butler-chg chg) 17 24 (face web-mode-variable-name-face tag-type void tag-name "videodashboard" block-side t ws-butler-chg chg) 24 25 (font-lock-face web-mode-block-delimiter-face tag-type void tag-name "videodashboard" block-token delimiter-end block-end t block-side t ws-butler-chg chg) 25 26 (tag-type void tag-name "videodashboard" ws-butler-chg chg) 26 27 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "videodashboard" tag-attr t tag-attr-beg 0 ws-butler-chg chg) 27 33 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "videodashboard" tag-attr t ws-butler-chg chg) 33 34 (font-lock-face web-mode-html-attr-equal-face tag-type void tag-name "videodashboard" tag-attr t ws-butler-chg chg) 34 35 (font-lock-face web-mode-block-delimiter-face tag-type void tag-name "videodashboard" tag-attr t block-token delimiter-beg block-side t block-controls 0 block-beg 0 ws-butler-chg chg) 35 36 (tag-type void tag-name "videodashboard" tag-attr t block-side t ws-butler-chg chg) 36 50 (face web-mode-variable-name-face tag-type void tag-name "videodashboard" tag-attr t block-side t ws-butler-chg chg) 50 51 (tag-type void tag-name "videodashboard" tag-attr t block-side t ws-butler-chg chg) 51 52 (font-lock-face web-mode-block-delimiter-face tag-type void tag-name "videodashboard" tag-attr-end 7 tag-attr t block-token delimiter-end block-end t block-side t ws-butler-chg chg) 52 53 (tag-type void tag-name "videodashboard" ws-butler-chg chg) 53 54 (font-lock-face web-mode-html-tag-bracket-face tag-type void tag-name "videodashboard" ws-butler-chg chg) 54 55 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type void tag-name "videodashboard" rear-nonsticky t ws-butler-chg chg)) . 1319) (undo-tree-id355 . -55) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -15) (undo-tree-id359 . -15) (undo-tree-id360 . -16) (undo-tree-id361 . -16) (undo-tree-id362 . -17) (undo-tree-id363 . -17) (undo-tree-id364 . -24) (undo-tree-id365 . -24) (undo-tree-id366 . -25) (undo-tree-id367 . -25) (undo-tree-id368 . -26) (undo-tree-id369 . -26) (undo-tree-id370 . -27) (undo-tree-id371 . -27) (undo-tree-id372 . -33) (undo-tree-id373 . -33) (undo-tree-id374 . -34) (undo-tree-id375 . -34) (undo-tree-id376 . -35) (undo-tree-id377 . -35) (undo-tree-id378 . -36) (undo-tree-id379 . -36) (undo-tree-id380 . -50) (undo-tree-id381 . -50) (undo-tree-id382 . -51) (undo-tree-id383 . -51) (undo-tree-id384 . -52) (undo-tree-id385 . -52) (undo-tree-id386 . -53) (undo-tree-id387 . -53) (undo-tree-id388 . -54) (undo-tree-id389 . -54) (undo-tree-id390 . -55) (undo-tree-id391 . -54) (undo-tree-id392 . -55)) (26521 43847 997486 455000) 0 (:visualizer [0 1 0 #<marker in no buffer>])])
([nil nil ((#("  " 0 2 (ws-butler-chg chg)) . 1523) (undo-tree-id987 . -2) (undo-tree-id988 . -2) (undo-tree-id989 . -2) (undo-tree-id990 . -2) (undo-tree-id991 . -2) (undo-tree-id992 . -2) (undo-tree-id993 . -2) (undo-tree-id994 . -2) (undo-tree-id995 . -2) (undo-tree-id996 . -2) (undo-tree-id997 . -2) (undo-tree-id998 . -2) (undo-tree-id999 . -2) (undo-tree-id1000 . -2) (undo-tree-id1001 . -2) (undo-tree-id1002 . -2) (undo-tree-id1003 . -2) (undo-tree-id1004 . -2) (undo-tree-id1005 . -2) (undo-tree-id1006 . -2) (undo-tree-id1007 . -2) (undo-tree-id1008 . -2) (undo-tree-id1009 . -2) (undo-tree-id1010 . -2) (undo-tree-id1011 . -2) (undo-tree-id1012 . -2) (undo-tree-id1013 . -2) (undo-tree-id1014 . -2) (undo-tree-id1015 . -2) (undo-tree-id1016 . -2) (undo-tree-id1017 . -2) (undo-tree-id1018 . -2) (undo-tree-id1019 . -2) (undo-tree-id1020 . -2) (undo-tree-id1021 . -2) (undo-tree-id1022 . -2) (undo-tree-id1023 . -2) (undo-tree-id1024 . -2) (undo-tree-id1025 . -2) (undo-tree-id1026 . -2) (undo-tree-id1027 . -2) (undo-tree-id1028 . -2) (undo-tree-id1029 . -2) (undo-tree-id1030 . -2) (undo-tree-id1031 . -2) (undo-tree-id1032 . -2) (undo-tree-id1033 . -2) (undo-tree-id1034 . -2) (undo-tree-id1035 . -2) (undo-tree-id1036 . -2) (undo-tree-id1037 . -2) (undo-tree-id1038 . -2) (undo-tree-id1039 . -2) (undo-tree-id1040 . -2) (undo-tree-id1041 . -2) (undo-tree-id1042 . -2) (undo-tree-id1043 . -2) (undo-tree-id1044 . -2) (undo-tree-id1045 . -2) (undo-tree-id1046 . -2) (undo-tree-id1047 . -2) (undo-tree-id1048 . -2) (undo-tree-id1049 . -2) (undo-tree-id1050 . -2) (undo-tree-id1051 . -2) (undo-tree-id1052 . -2) (undo-tree-id1053 . -2) (undo-tree-id1054 . -2) (undo-tree-id1055 . -2) (undo-tree-id1056 . -2) (undo-tree-id1057 . -2) (undo-tree-id1058 . -2) (undo-tree-id1059 . -2) (undo-tree-id1060 . -2) (undo-tree-id1061 . -2) (undo-tree-id1062 . -2) (undo-tree-id1063 . -2) (undo-tree-id1064 . -2) (undo-tree-id1065 . -2) (undo-tree-id1066 . -2) (undo-tree-id1067 . -2) (undo-tree-id1068 . -2) (undo-tree-id1069 . -2) (undo-tree-id1070 . -2) (undo-tree-id1071 . -2) (undo-tree-id1072 . -2) (undo-tree-id1073 . -2) (undo-tree-id1074 . -2) (undo-tree-id1075 . -2) (undo-tree-id1076 . -2) (undo-tree-id1077 . -2) (undo-tree-id1078 . -2) (undo-tree-id1079 . -2) (undo-tree-id1080 . -2) (undo-tree-id1081 . -2) (undo-tree-id1082 . -2) (undo-tree-id1083 . -2) (undo-tree-id1084 . -2) (undo-tree-id1085 . -2) (undo-tree-id1086 . -2) (undo-tree-id1087 . -2) (undo-tree-id1088 . -2) (undo-tree-id1089 . -2) (undo-tree-id1090 . -2) (undo-tree-id1091 . -2) (undo-tree-id1092 . -2) (undo-tree-id1093 . -2) (undo-tree-id1094 . -2) (undo-tree-id1095 . -2) (undo-tree-id1096 . -2) (undo-tree-id1097 . -2) (undo-tree-id1098 . -2) (undo-tree-id1099 . -2) (undo-tree-id1100 . -2) (undo-tree-id1101 . -2) (undo-tree-id1102 . -2) (undo-tree-id1103 . -2) (undo-tree-id1104 . -2) (undo-tree-id1105 . -2) (undo-tree-id1106 . -2) (undo-tree-id1107 . -2) (undo-tree-id1108 . -2) (undo-tree-id1109 . -2) (undo-tree-id1110 . -2) (undo-tree-id1111 . -2) (undo-tree-id1112 . -2) (undo-tree-id1113 . -2) (undo-tree-id1114 . -2) (undo-tree-id1115 . -2) (undo-tree-id1116 . -2) (undo-tree-id1117 . -2) (undo-tree-id1118 . -2) (undo-tree-id1119 . -2) (undo-tree-id1120 . -2) (undo-tree-id1121 . -2) (undo-tree-id1122 . -2) (undo-tree-id1123 . -2) (undo-tree-id1124 . -2) (undo-tree-id1125 . -2) (undo-tree-id1126 . -2) (undo-tree-id1127 . -2) (undo-tree-id1128 . -2) (undo-tree-id1129 . -2) (undo-tree-id1130 . -2) (undo-tree-id1131 . -2) (undo-tree-id1132 . -2) (undo-tree-id1133 . -2) (undo-tree-id1134 . -2) (undo-tree-id1135 . -2) (undo-tree-id1136 . -2) (undo-tree-id1137 . -2) (undo-tree-id1138 . -2) (undo-tree-id1139 . -2) (undo-tree-id1140 . -2)) nil (26521 44133 629835 283000) 0 nil])
nil
([nil nil ((#("<VideoDashboard {videoId} persons={[selectedPlayer]} />" 0 1 (font-lock-face web-mode-html-tag-bracket-face tag-beg 25 tag-type void tag-name "videodashboard" ws-butler-chg chg) 1 15 (font-lock-face web-mode-html-tag-face tag-type void tag-name "videodashboard" ws-butler-chg chg) 15 16 (tag-type void tag-name "videodashboard" ws-butler-chg chg) 16 17 (font-lock-face web-mode-block-delimiter-face tag-type void tag-name "videodashboard" block-token delimiter-beg block-side t block-controls 0 block-beg 0 ws-butler-chg chg) 17 24 (face web-mode-variable-name-face tag-type void tag-name "videodashboard" block-side t ws-butler-chg chg) 24 25 (font-lock-face web-mode-block-delimiter-face tag-type void tag-name "videodashboard" block-token delimiter-end block-end t block-side t ws-butler-chg chg) 25 26 (tag-type void tag-name "videodashboard" ws-butler-chg chg) 26 27 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "videodashboard" tag-attr t tag-attr-beg 0 ws-butler-chg chg) 27 33 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "videodashboard" tag-attr t ws-butler-chg chg) 33 34 (font-lock-face web-mode-html-attr-equal-face tag-type void tag-name "videodashboard" tag-attr t ws-butler-chg chg) 34 35 (font-lock-face web-mode-block-delimiter-face tag-type void tag-name "videodashboard" tag-attr t block-token delimiter-beg block-side t block-controls 0 block-beg 0 ws-butler-chg chg) 35 36 (tag-type void tag-name "videodashboard" tag-attr t block-side t ws-butler-chg chg) 36 50 (face web-mode-variable-name-face tag-type void tag-name "videodashboard" tag-attr t block-side t ws-butler-chg chg) 50 51 (tag-type void tag-name "videodashboard" tag-attr t block-side t ws-butler-chg chg) 51 52 (font-lock-face web-mode-block-delimiter-face tag-type void tag-name "videodashboard" tag-attr-end 7 tag-attr t block-token delimiter-end block-end t block-side t ws-butler-chg chg) 52 53 (tag-type void tag-name "videodashboard" ws-butler-chg chg) 53 54 (font-lock-face web-mode-html-tag-bracket-face tag-type void tag-name "videodashboard" ws-butler-chg chg) 54 55 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type void tag-name "videodashboard" rear-nonsticky nil ws-butler-chg chg)) . 1319) (undo-tree-id0 . -55) (nil tag-name "videodashboard" 1319 . 1320) (nil tag-name "videodashboard" 1320 . 1334) (nil tag-name "videodashboard" 1334 . 1335) (nil tag-name "videodashboard" 1335 . 1336) (nil tag-name "videodashboard" 1336 . 1343) (nil tag-name "videodashboard" 1343 . 1344) (nil tag-name "videodashboard" 1344 . 1345) (nil tag-name "videodashboard" 1345 . 1346) (nil tag-name "videodashboard" 1346 . 1352) (nil tag-name "videodashboard" 1352 . 1353) (nil tag-name "videodashboard" 1353 . 1354) (nil tag-name "videodashboard" 1354 . 1355) (nil tag-name "videodashboard" 1355 . 1369) (nil tag-name "videodashboard" 1369 . 1370) (nil tag-name "videodashboard" 1370 . 1371) (nil tag-name "videodashboard" 1371 . 1372) (nil tag-name "videodashboard" 1372 . 1373) (nil tag-name "videodashboard" 1373 . 1374) (nil rear-nonsticky t 1373 . 1374)) ((nil rear-nonsticky nil 1373 . 1374) (nil tag-name "videodashboard" 1373 . 1374) (nil tag-name "videodashboard" 1372 . 1373) (nil tag-name "videodashboard" 1371 . 1372) (nil tag-name "videodashboard" 1370 . 1371) (nil tag-name "videodashboard" 1369 . 1370) (nil tag-name "videodashboard" 1355 . 1369) (nil tag-name "videodashboard" 1354 . 1355) (nil tag-name "videodashboard" 1353 . 1354) (nil tag-name "videodashboard" 1352 . 1353) (nil tag-name "videodashboard" 1346 . 1352) (nil tag-name "videodashboard" 1345 . 1346) (nil tag-name "videodashboard" 1344 . 1345) (nil tag-name "videodashboard" 1343 . 1344) (nil tag-name "videodashboard" 1336 . 1343) (nil tag-name "videodashboard" 1335 . 1336) (nil tag-name "videodashboard" 1334 . 1335) (nil tag-name "videodashboard" 1320 . 1334) (nil tag-name "videodashboard" 1319 . 1320) (1319 . 1374)) (26521 43846 378739 991000) 0 (:visualizer [0 1 0 #<marker in no buffer>])])
([nil nil ((#("40" 0 2 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "img" tag-attr t)) . -1407) (undo-tree-id1141 . -2) (undo-tree-id1142 . -2) (undo-tree-id1143 . -2) (undo-tree-id1144 . -2) (undo-tree-id1145 . -2) (undo-tree-id1146 . -2) (undo-tree-id1147 . -2) (undo-tree-id1148 . -2) (undo-tree-id1149 . -2) (undo-tree-id1150 . -2) (undo-tree-id1151 . -2) (undo-tree-id1152 . -2) (undo-tree-id1153 . -2) (undo-tree-id1154 . -2) (undo-tree-id1155 . -2) (undo-tree-id1156 . -2) (undo-tree-id1157 . -2) (undo-tree-id1158 . -2) (undo-tree-id1159 . -2) (undo-tree-id1160 . -2) (undo-tree-id1161 . -2) (undo-tree-id1162 . -2) (undo-tree-id1163 . -1) (undo-tree-id1164 . -2) (undo-tree-id1165 . -1) (undo-tree-id1166 . -1) (undo-tree-id1167 . -1) (undo-tree-id1168 . -1) (undo-tree-id1169 . -1) (undo-tree-id1170 . -1) (undo-tree-id1171 . -1) (undo-tree-id1172 . -1) (undo-tree-id1173 . -1) (undo-tree-id1174 . -1) (undo-tree-id1175 . -1) (undo-tree-id1176 . -1) (undo-tree-id1177 . -1) (undo-tree-id1178 . -1) (undo-tree-id1179 . -1) (undo-tree-id1180 . -1) (undo-tree-id1181 . -1) (undo-tree-id1182 . -1) (undo-tree-id1183 . -1) (undo-tree-id1184 . -1) (undo-tree-id1185 . -1) (undo-tree-id1186 . -1) (undo-tree-id1187 . -1) (undo-tree-id1188 . -1) (undo-tree-id1189 . -1) (undo-tree-id1190 . -1) (undo-tree-id1191 . -1) (undo-tree-id1192 . -1) (undo-tree-id1193 . -1) (undo-tree-id1194 . -1) (undo-tree-id1195 . -1) (undo-tree-id1196 . -1) (undo-tree-id1197 . -1) (undo-tree-id1198 . -1) (undo-tree-id1199 . -1) (undo-tree-id1200 . -1) (undo-tree-id1201 . -1) (undo-tree-id1202 . -1) (undo-tree-id1203 . -1) (undo-tree-id1204 . -1) (undo-tree-id1205 . -1) (undo-tree-id1206 . -1) (undo-tree-id1207 . -1) (undo-tree-id1208 . -1) (undo-tree-id1209 . -1) (undo-tree-id1210 . -1) (undo-tree-id1211 . -1) (undo-tree-id1212 . -1) (undo-tree-id1213 . -1) (undo-tree-id1214 . -1) (undo-tree-id1215 . -1) (undo-tree-id1216 . -1) (undo-tree-id1217 . -1) (undo-tree-id1218 . -1) (undo-tree-id1219 . -1) (undo-tree-id1220 . -1) (undo-tree-id1221 . -1) (undo-tree-id1222 . -1) (undo-tree-id1223 . -1) (undo-tree-id1224 . -1) (undo-tree-id1225 . -1) (undo-tree-id1226 . -1) (undo-tree-id1227 . -1) (undo-tree-id1228 . -2) (undo-tree-id1229 . -1) (undo-tree-id1230 . -2) (undo-tree-id1231 . -2) (undo-tree-id1232 . -2) (undo-tree-id1233 . -2) (undo-tree-id1234 . -2) (undo-tree-id1235 . -2) (undo-tree-id1236 . -2) (undo-tree-id1237 . -2) (undo-tree-id1238 . -2) (undo-tree-id1239 . -2) (undo-tree-id1240 . -2) (undo-tree-id1241 . -2) (undo-tree-id1242 . -2) (undo-tree-id1243 . -2) (undo-tree-id1244 . -2) (undo-tree-id1245 . -2) (undo-tree-id1246 . -2) (undo-tree-id1247 . -2) (undo-tree-id1248 . -2) (undo-tree-id1249 . -2) (undo-tree-id1250 . -2) (undo-tree-id1251 . -2) (undo-tree-id1252 . -2) (undo-tree-id1253 . -2) (undo-tree-id1254 . -2) (undo-tree-id1255 . -2) (undo-tree-id1256 . -2) (undo-tree-id1257 . -2) (undo-tree-id1258 . -2) (undo-tree-id1259 . -2) (undo-tree-id1260 . -2) (undo-tree-id1261 . -2) (undo-tree-id1262 . -2) (undo-tree-id1263 . -2) (undo-tree-id1264 . -2) (undo-tree-id1265 . -2) (undo-tree-id1266 . -2) 1409 (t 26521 44133 670572 826000)) nil (26521 44600 902228 310000) 0 nil])
nil
([nil current ((1407 . 1411)) nil (26521 44600 902110 118000) 0 nil])
nil
